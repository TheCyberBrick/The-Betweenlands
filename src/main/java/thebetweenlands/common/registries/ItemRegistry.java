package thebetweenlands.common.registries;

import net.minecraft.core.Direction;
import net.minecraft.core.component.DataComponents;
import net.minecraft.core.registries.Registries;
import net.minecraft.resources.ResourceKey;
import net.minecraft.world.food.FoodProperties;
import net.minecraft.world.item.*;
import net.minecraft.world.item.component.Consumable;
import net.minecraft.world.item.component.ItemContainerContents;
import net.minecraft.world.item.consume_effects.ClearAllStatusEffectsConsumeEffect;
import net.minecraft.world.item.equipment.ArmorType;
import net.neoforged.neoforge.registries.DeferredItem;
import net.neoforged.neoforge.registries.DeferredRegister;
import thebetweenlands.common.TheBetweenlands;
import thebetweenlands.common.component.entity.circlegem.CircleGemType;
import thebetweenlands.common.component.item.AspectContents;
import thebetweenlands.common.component.item.DiscoveryContainerData;
import thebetweenlands.common.component.item.ElixirContents;
import thebetweenlands.common.datagen.tags.BLEntityTagProvider;
import thebetweenlands.common.entity.creature.*;
import thebetweenlands.common.entity.fishing.BubblerCrab;
import thebetweenlands.common.entity.fishing.SiltCrab;
import thebetweenlands.common.entity.fishing.anadia.Anadia;
import thebetweenlands.common.entity.monster.TinySludgeWorm;
import thebetweenlands.common.entity.monster.TinySludgeWormHelper;
import thebetweenlands.common.item.armor.amphibious.AmphibiousArmorItem;
import thebetweenlands.common.item.armor.amphibious.UpgradeToggleItem;
import thebetweenlands.common.item.armor.amphibious.UpgradeTriggerItem;
import thebetweenlands.common.item.armor.AncientArmorItem;
import thebetweenlands.common.item.armor.LurkerSkinArmorItem;
import thebetweenlands.common.item.armor.MarshRunnerBootsItem;
import thebetweenlands.common.item.armor.RubberBootsItem;
import thebetweenlands.common.item.equipment.LurkerSkinPouchItem;
import thebetweenlands.common.item.food.*;
import thebetweenlands.common.item.herblore.*;
import thebetweenlands.common.item.misc.*;
import thebetweenlands.common.item.misc.bucket.BLBucketItem;
import thebetweenlands.common.item.misc.bucket.InfusionBucketItem;
import thebetweenlands.common.item.misc.bucket.RubberBucketItem;
import thebetweenlands.common.item.shield.*;
import thebetweenlands.common.item.tool.*;
import thebetweenlands.common.item.tool.arrow.*;
import thebetweenlands.util.BLDyeColor;

import java.util.ArrayList;
import java.util.function.Function;

//TODO move food sickness stats to a consume effect instead of a tag
//TODO possibly move decay stats to a consume effect
public class ItemRegistry {

	public static final DeferredRegister.Items ITEMS = DeferredRegister.createItems(TheBetweenlands.ID);

	public static final DeferredItem<Item> CRIMSON_SNAIL_SHELL = register("crimson_snail_shell");
	public static final DeferredItem<Item> OCHRE_SNAIL_SHELL = register("ochre_snail_shell");
	public static final DeferredItem<Item> COMPOST = register("compost");
	public static final DeferredItem<Item> DRAGONFLY_WING = register("dragonfly_wing");
	public static final DeferredItem<Item> LURKER_SKIN = register("lurker_skin", HoverTextItem::new);
	public static final DeferredItem<Item> DRIED_SWAMP_REED = register("dried_swamp_reed");
	public static final DeferredItem<Item> REED_ROPE = register("reed_rope");
	public static final DeferredItem<Item> MUD_BRICK = register("mud_brick");
	public static final DeferredItem<Item> SYRMORITE_INGOT = register("syrmorite_ingot");
	public static final DeferredItem<Item> DRY_BARK = register("dry_bark");
	public static final DeferredItem<Item> SLIMY_BONE = register("slimy_bone");
	public static final DeferredItem<Item> SNAPPER_ROOT = register("snapper_root");
	public static final DeferredItem<Item> STALKER_EYE = register("stalker_eye");
	public static final DeferredItem<Item> SULFUR = register("sulfur");
	public static final DeferredItem<Item> VALONITE_SHARD = register("valonite_shard");
	public static final DeferredItem<Item> WEEDWOOD_STICK = register("weedwood_stick");
	public static final DeferredItem<Item> ANGLER_TOOTH = register("angler_tooth");
	public static final DeferredItem<Item> WEEDWOOD_BOWL = register("weedwood_bowl");
	public static final DeferredItem<Item> RUBBER_BALL = register("rubber_ball");
	public static final DeferredItem<Item> TAR_BEAST_HEART = register("tar_beast_heart", new Item.Properties().rarity(Rarity.UNCOMMON));
	public static final DeferredItem<Item> ANIMATED_TAR_BEAST_HEART = register("animated_tar_beast_heart", new Item.Properties().rarity(Rarity.UNCOMMON));
	public static final DeferredItem<Item> TAR_DRIP = register("tar_drip");
	public static final DeferredItem<Item> LIMESTONE_FLUX = register("limestone_flux");
	public static final DeferredItem<Item> INANIMATE_TARMINION = register("inanimate_tarminion", new Item.Properties().rarity(Rarity.UNCOMMON));
	public static final DeferredItem<Item> POISON_GLAND = register("poison_gland");
	public static final DeferredItem<Item> AMATE_PAPER = register("amate_paper");
	public static final DeferredItem<Item> SHOCKWAVE_SWORD_PIECE_1 = register("shockwave_sword_piece_1");
	public static final DeferredItem<Item> SHOCKWAVE_SWORD_PIECE_2 = register("shockwave_sword_piece_2");
	public static final DeferredItem<Item> SHOCKWAVE_SWORD_PIECE_3 = register("shockwave_sword_piece_3");
	public static final DeferredItem<Item> SHOCKWAVE_SWORD_PIECE_4 = register("shockwave_sword_piece_4");
	public static final DeferredItem<Item> AMULET_SOCKET = register("amulet_socket", new Item.Properties().rarity(Rarity.RARE));
	public static final DeferredItem<Item> SCABYST = register("scabyst");
	public static final DeferredItem<Item> ITEM_SCROLL = register("item_scroll", new Item.Properties().rarity(Rarity.UNCOMMON));
	public static final DeferredItem<Item> SYRMORITE_NUGGET = register("syrmorite_nugget");
	public static final DeferredItem<Item> OCTINE_NUGGET = register("octine_nugget");
	public static final DeferredItem<Item> VALONITE_SPLINTER = register("valonite_splinter");
	public static final DeferredItem<Item> CREMAINS = register("cremains");
	public static final DeferredItem<Item> UNDYING_EMBERS = register("undying_embers");
	public static final DeferredItem<Item> INANIMATE_ANGRY_PEBBLE = register("inanimate_angry_pebble");
	public static final DeferredItem<Item> ANCIENT_REMNANT = register("ancient_remnant");
	public static final DeferredItem<Item> LOOT_SCRAPS = register("loot_scraps", new Item.Properties().rarity(Rarity.RARE));
	public static final DeferredItem<Item> FABRICATED_SCROLL = register("fabricated_scroll", new Item.Properties().rarity(Rarity.RARE));
	public static final DeferredItem<Item> BETWEENSTONE_PEBBLE = register("betweenstone_pebble", BetweenstonePebbleItem::new);
	public static final DeferredItem<Item> ANADIA_SWIM_BLADDER = register("anadia_swim_bladder", HoverTextItem::new);
	public static final DeferredItem<Item> ANADIA_EYE = register("anadia_eye", HoverTextItem::new);
	public static final DeferredItem<Item> ANADIA_GILLS = register("anadia_gills", HoverTextItem::new);
	public static final DeferredItem<Item> ANADIA_SCALES = register("anadia_scales", HoverTextItem::new);
	public static final DeferredItem<Item> ANADIA_BONES = register("anadia_bones", HoverTextItem::new);
	public static final DeferredItem<Item> ANADIA_REMAINS = register("anadia_remains");
	public static final DeferredItem<Item> ANADIA_FINS = register("anadia_fins", HoverTextItem::new);
	public static final DeferredItem<Item> SNOT = register("snot", HoverTextItem::new);
	public static final DeferredItem<Item> URCHIN_SPIKE = register("urchin_spike", HoverTextItem::new);
	public static final DeferredItem<Item> FISHING_FLOAT_AND_HOOK = register("fishing_float_and_hook");
	public static final DeferredItem<Item> OLMLETTE_MIXTURE = register("olmlette_mixture");
	public static final DeferredItem<Item> SILK_COCOON = register("silk_grub_cocoon");
	public static final DeferredItem<Item> SILK_THREAD = register("silk_thread");
	public static final DeferredItem<Item> DIRTY_SILK_BUNDLE = register("dirty_silk_bundle");
	public static final DeferredItem<Item> PHEROMONE_THORAXES = register("pheromone_thoraxes", PheromoneThoraxItem::new);
	public static final DeferredItem<Item> SWAMP_TALISMAN = register("swamp_talisman", SwampTalismanItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SWAMP_TALISMAN_PIECE_1 = register("swamp_talisman_piece_1", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SWAMP_TALISMAN_PIECE_2 = register("swamp_talisman_piece_2", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SWAMP_TALISMAN_PIECE_3 = register("swamp_talisman_piece_3", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SWAMP_TALISMAN_PIECE_4 = register("swamp_talisman_piece_4", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> WEEDWOOD_ROWBOAT = register("weedwood_rowboat", WeedwoodRowboatItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> ORANGE_DENTROTHYST_SHARD = register("orange_dentrothyst_shard");
	public static final DeferredItem<Item> GREEN_DENTROTHYST_SHARD = register("green_dentrothyst_shard");
	public static final DeferredItem<Item> FISH_BAIT = register("fish_bait", FishBaitItem::new, new Item.Properties().stacksTo(1).durability(64));
	public static final DeferredItem<Item> FUMIGANT = register("fumigant", FumigantItem::new);
	public static final DeferredItem<Item> SAP_BALL = register("sap_ball", new Item.Properties().food(new FoodProperties.Builder().alwaysEdible().build()));
	public static final DeferredItem<Item> ROTTEN_FOOD = register("rotten_food", RottenFoodItem::new, new Item.Properties().food(FoodRegistry.ROTTEN_FOOD, ConsumableRegistry.ROTTEN_FOOD));
	public static final DeferredItem<Item> TAINTED_POTION = register("tainted_potion", TaintedPotionItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> ASPECTRUS_SEEDS = register("aspectrus_seeds", properties -> new BlockItem(BlockRegistry.ASPECTRUS_CROP.get(), properties), new Item.Properties().useBlockDescriptionPrefix());
	public static final DeferredItem<Item> SPORES = register("spores", properties -> new BlockItem(BlockRegistry.FUNGUS_CROP.get(), properties), new Item.Properties().useBlockDescriptionPrefix());
	public static final DeferredItem<Item> MIDDLE_FRUIT_BUSH_SEEDS = register("middle_fruit_bush_seeds", properties -> new BlockItem(BlockRegistry.MIDDLE_FRUIT_BUSH.get(), properties), new Item.Properties().useBlockDescriptionPrefix());
	public static final DeferredItem<Item> MIRE_SNAIL_EGG = register("mire_snail_egg", MireSnailEggItem::new, new Item.Properties().food(FoodRegistry.MIRE_SNAIL_EGG));
	public static final DeferredItem<Item> COOKED_MIRE_SNAIL_EGG = register("cooked_mire_snail_egg", new Item.Properties().food(FoodRegistry.COOKED_MIRE_SNAIL_EGG));
	public static final DeferredItem<Item> RAW_FROG_LEGS = register("raw_frog_legs", new Item.Properties().food(FoodRegistry.RAW_FROG_LEG));
	public static final DeferredItem<Item> COOKED_FROG_LEGS = register("cooked_frog_legs", new Item.Properties().food(FoodRegistry.COOKED_FROG_LEG));
	public static final DeferredItem<Item> RAW_SNAIL_FLESH = register("raw_snail_flesh", new Item.Properties().food(FoodRegistry.RAW_SNAIL_FLESH));
	public static final DeferredItem<Item> COOKED_SNAIL_FLESH = register("cooked_snail_flesh", new Item.Properties().food(FoodRegistry.COOKED_SNAIL_FLESH));
	public static final DeferredItem<Item> REED_DONUT = register("reed_donut", new Item.Properties().food(FoodRegistry.REED_DONUT));
	public static final DeferredItem<Item> JAM_DONUT = register("jam_donut", new Item.Properties().food(FoodRegistry.JAM_DONUT));
	public static final DeferredItem<Item> GERTS_DONUT = register("gerts_donut", new Item.Properties().food(FoodRegistry.GERTS_DONUT, ConsumableRegistry.GERTS_DONUT));
	public static final DeferredItem<Item> PUFFSHROOM_TENDRIL = register("puffshroom_tendril", new Item.Properties().food(FoodRegistry.PUFFSHROOM_TENDRIL));
	public static final DeferredItem<Item> KRAKEN_TENTACLE = register("kraken_tentacle", new Item.Properties().food(FoodRegistry.KRAKEN_TENTACLE));
	public static final DeferredItem<Item> KRAKEN_CALAMARI = register("kraken_calamari", new Item.Properties().food(FoodRegistry.KRAKEN_CALAMARI));
	public static final DeferredItem<Item> MIDDLE_FRUIT = register("middle_fruit", new Item.Properties().food(FoodRegistry.MIDDLE_FRUIT));
	public static final DeferredItem<Item> MINCE_PIE = register("mince_pie", new Item.Properties().food(FoodRegistry.MINCE_PIE));
	public static final DeferredItem<Item> CHRISTMAS_PUDDING = register("christmas_pudding", new Item.Properties().food(FoodRegistry.CHRISTMAS_PUDDING));
	public static final DeferredItem<Item> CANDY_CANE = register("candy_cane", new Item.Properties().food(FoodRegistry.CANDY_CANE));
	public static final DeferredItem<Item> WEEPING_BLUE_PETAL = register("weeping_blue_petal", new Item.Properties().food(FoodRegistry.WEEPING_BLUE_PETAL, ConsumableRegistry.WEEPING_BLUE_PETAL));
	public static final DeferredItem<Item> WIGHT_HEART = register("wight_heart", new Item.Properties().food(FoodRegistry.WIGHT_HEART, ConsumableRegistry.WIGHT_HEART));
	public static final DeferredItem<Item> YELLOW_DOTTED_FUNGUS = register("yellow_dotted_fungus", new Item.Properties().food(FoodRegistry.YELLOW_DOTTED_FUNGUS));
	public static final DeferredItem<Item> SILT_CRAB_CLAW = register("crab_claw", ShearsItem::new, new Item.Properties().component(DataComponents.TOOL, ShearsItem.createToolProperties()).food(FoodRegistry.CRAB_CLAW));
	public static final DeferredItem<Item> CRAB_STICK = register("crab_stick", new Item.Properties().food(FoodRegistry.CRAB_STICK));
	public static final DeferredItem<Item> SLUDGE_JELLO = register("sludge_jello", new Item.Properties().food(FoodRegistry.SLUDGE_JELLO));
	public static final DeferredItem<Item> MIDDLE_FRUIT_JELLO = register("middle_fruit_jello", new Item.Properties().food(FoodRegistry.MIDDLE_FRUIT_JELLO));
	public static final DeferredItem<Item> SAP_JELLO = register("sap_jello", new Item.Properties().food(FoodRegistry.SAP_JELLO));
	public static final DeferredItem<Item> GREEN_MARSHMALLOW = register("green_marshmallow", new Item.Properties().food(FoodRegistry.GREEN_MARSHMALLOW, ConsumableRegistry.GREEN_MARSHMALLOW));
	public static final DeferredItem<Item> PINK_MARSHMALLOW = register("pink_marshmallow", new Item.Properties().food(FoodRegistry.PINK_MARSHMALLOW, ConsumableRegistry.PINK_MARSHMALLOW));
	public static final DeferredItem<Item> FLATHEAD_MUSHROOM = register("flathead_mushroom_item", properties -> new PlantableFoodItem(BlockRegistry.FLATHEAD_MUSHROOM.get(), properties), new Item.Properties().food(FoodRegistry.FLATHEAD_MUSHROOM));
	public static final DeferredItem<Item> BLACK_HAT_MUSHROOM = register("black_hat_mushroom_item", properties -> new PlantableFoodItem(BlockRegistry.BLACK_HAT_MUSHROOM.get(), properties), new Item.Properties().food(FoodRegistry.BLACK_HAT_MUSHROOM));
	public static final DeferredItem<Item> BULB_CAPPED_MUSHROOM = register("bulb_capped_mushroom_item", properties -> new PlantableFoodItem(BlockRegistry.BULB_CAPPED_MUSHROOM.get(), properties), new Item.Properties().food(FoodRegistry.BULB_CAPPED_MUSHROOM));
	public static final DeferredItem<Item> FRIED_SWAMP_KELP = register("fried_swamp_kelp", new Item.Properties().food(FoodRegistry.FRIED_SWAMP_KELP));
	public static final DeferredItem<Item> FORBIDDEN_FIG = register("forbidden_fig", HoverTextItem::new, new Item.Properties().rarity(Rarity.RARE).food(FoodRegistry.FORBIDDEN_FIG, ConsumableRegistry.FORBIDDEN_FIG));
	public static final DeferredItem<Item> BLUE_CANDY = register("blue_candy", new Item.Properties().food(FoodRegistry.CANDY));
	public static final DeferredItem<Item> RED_CANDY = register("red_candy", new Item.Properties().food(FoodRegistry.CANDY));
	public static final DeferredItem<Item> YELLOW_CANDY = register("yellow_candy", new Item.Properties().food(FoodRegistry.CANDY));
	public static final DeferredItem<Item> CHIROMAW_WING = register("chiromaw_wing", ChiromawWingItem::new, new Item.Properties().food(FoodRegistry.CHIROMAW_WING));
	public static final DeferredItem<Item> TANGLED_ROOT = register("tangled_root", new Item.Properties().food(new FoodProperties.Builder().build(), Consumable.builder().onConsume(new ClearAllStatusEffectsConsumeEffect()).build()));
	public static final DeferredItem<Item> MIRE_SCRAMBLE = register("mire_scramble", new Item.Properties().usingConvertsTo(WEEDWOOD_BOWL.get()).food(FoodRegistry.MIRE_SCRAMBLE));
	public static final DeferredItem<Item> WEEPING_BLUE_PETAL_SALAD = register("weeping_blue_petal_salad", new Item.Properties().usingConvertsTo(WEEDWOOD_BOWL.get()).food(FoodRegistry.WEEPING_BLUE_PETAL_SALAD, ConsumableRegistry.WEEPING_BLUE_PETAL_SALAD));
	public static final DeferredItem<Item> NIBBLESTICK = register("nibblestick", new Item.Properties().food(FoodRegistry.NIBBLESTICK));
	public static final DeferredItem<Item> SPIRIT_FRUIT = register("spirit_fruit", new Item.Properties().rarity(Rarity.RARE).component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).food(FoodRegistry.SPIRIT_FRUIT, ConsumableRegistry.SPIRIT_FRUIT));
	public static final DeferredItem<Item> SUSHI = register("sushi", new Item.Properties().food(FoodRegistry.SUSHI));
	public static final DeferredItem<Item> ROCK_SNOT_PEARL = register("rock_snot_pearl", HoverTextItem::new, new Item.Properties().food(FoodRegistry.ROCK_SNOT_PEARL, ConsumableRegistry.ROCK_SNOT_PEARL));
	public static final DeferredItem<Item> PEARLED_PEAR = register("pearled_pear", HoverTextItem::new, new Item.Properties().food(FoodRegistry.PEARLED_PEAR, ConsumableRegistry.PEARLED_PEAR));
	public static final DeferredItem<Item> RAW_ANADIA_MEAT = register("raw_anadia_meat", new Item.Properties().food(FoodRegistry.RAW_ANADIA_MEAT));
	public static final DeferredItem<Item> COOKED_ANADIA_MEAT = register("cooked_anadia_meat", new Item.Properties().food(FoodRegistry.COOKED_ANADIA_MEAT));
	public static final DeferredItem<Item> SMOKED_ANADIA_MEAT = register("smoked_anadia_meat", new Item.Properties().food(FoodRegistry.SMOKED_ANADIA_MEAT));
	public static final DeferredItem<Item> BARNACLE = register("barnacle", new Item.Properties().food(FoodRegistry.RAW_BARNACLE));
	public static final DeferredItem<Item> COOKED_BARNACLE = register("cooked_barnacle", new Item.Properties().food(FoodRegistry.COOKED_BARNACLE));
	public static final DeferredItem<Item> SMOKED_BARNACLE = register("smoked_barnacle", new Item.Properties().food(FoodRegistry.SMOKED_BARNACLE));
	public static final DeferredItem<Item> SMOKED_CRAB_STICK = register("smoked_crab_stick", new Item.Properties().food(FoodRegistry.SMOKED_CRAB_STICK));
	public static final DeferredItem<Item> SMOKED_FROG_LEGS = register("smoked_frog_legs", new Item.Properties().food(FoodRegistry.SMOKED_FROG_LEG));
	public static final DeferredItem<Item> SMOKED_PUFFSHROOM_TENDRIL = register("smoked_puffshroom_tendril", new Item.Properties().food(FoodRegistry.SMOKED_PUFFSHROOM_TENDRIL));
	public static final DeferredItem<Item> SMOKED_SILT_CRAB_CLAW = register("smoked_silt_crab_claw", new Item.Properties().food(FoodRegistry.SMOKED_CRAB_CLAW));
	public static final DeferredItem<Item> SMOKED_SNAIL_FLESH = register("smoked_snail_flesh", new Item.Properties().food(FoodRegistry.SMOKED_SNAIL_FLESH));
	public static final DeferredItem<Item> RAW_OLM_EGG = register("raw_olm_egg", new Item.Properties().food(FoodRegistry.RAW_OLM_EGG));
	public static final DeferredItem<Item> COOKED_OLM_EGG = register("cooked_olm_egg", new Item.Properties().food(FoodRegistry.COOKED_OLM_EGG));
	public static final DeferredItem<Item> OLMLETTE = register("olmlette", new Item.Properties().food(FoodRegistry.OLMLETTE));
	public static final DeferredItem<Item> SILK_GRUB = register("silk_grub", new Item.Properties().food(FoodRegistry.SILK_GRUB));
	//TODO move brew effects to consume effects
	public static final DeferredItem<Item> NETTLE_SOUP = register("nettle_soup", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.NETTLE_SOUP));
	public static final DeferredItem<Item> NETTLE_TEA = register("nettle_tea", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.NETTLE_TEA));
	public static final DeferredItem<Item> PHEROMONE_EXTRACT = register("pheromone_extract", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.PHEROMONE_EXTRACT, ConsumableRegistry.PHEROMONE_EXTRACT));
	public static final DeferredItem<Item> SWAMP_BROTH = register("swamp_broth", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.SWAMP_BROTH, ConsumableRegistry.SWAMP_BROTH));
	public static final DeferredItem<Item> STURDY_STOCK = register("sturdy_stock", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.STURDY_STOCK));
	public static final DeferredItem<Item> PEAR_CORDIAL = register("pear_cordial", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.PEAR_CORDIAL, ConsumableRegistry.PEAR_CORDIAL));
	public static final DeferredItem<Item> SHAMANS_BREW = register("shamans_brew", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.SHAMANS_BREW, ConsumableRegistry.SHAMANS_BREW));
	public static final DeferredItem<Item> LAKE_BROTH = register("lake_broth", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.LAKE_BROTH, ConsumableRegistry.LAKE_BROTH));
	public static final DeferredItem<Item> SHELL_STOCK = register("shell_stock", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.SHELL_STOCK, ConsumableRegistry.SHELL_STOCK));
	public static final DeferredItem<Item> FROG_LEG_EXTRACT = register("frog_leg_extract", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.FROG_LEG_EXTRACT, ConsumableRegistry.FROG_LEG_EXTRACT));
	public static final DeferredItem<Item> WITCH_TEA = register("witch_tea", new Item.Properties().craftRemainder(ItemRegistry.WEEDWOOD_BOWL.get()).food(FoodRegistry.WITCH_TEA, ConsumableRegistry.WITCH_TEA));
	public static final DeferredItem<Item> HERBLORE_BOOK = register("herblore_book", HerbloreBookItem::new, new Item.Properties().component(DataComponentRegistry.DISCOVERY_DATA, DiscoveryContainerData.EMPTY));
	public static final DeferredItem<Item> CRIMSON_MIDDLE_GEM = register("crimson_middle_gem", properties -> new MiddleGemItem(CircleGemType.CRIMSON, properties));
	public static final DeferredItem<Item> AQUA_MIDDLE_GEM = register("aqua_middle_gem", properties -> new MiddleGemItem(CircleGemType.AQUA, properties));
	public static final DeferredItem<Item> GREEN_MIDDLE_GEM = register("green_middle_gem", properties -> new MiddleGemItem(CircleGemType.GREEN, properties));
	public static final DeferredItem<Item> LIFE_CRYSTAL = register("life_crystal", properties -> new LifeCrystalItem(true, properties), new Item.Properties().stacksTo(1).durability(128));
	public static final DeferredItem<Item> LIFE_CRYSTAL_FRAGMENT = register("life_crystal_fragment", properties -> new LifeCrystalItem(false, properties), new Item.Properties().stacksTo(1).durability(64));
	public static final DeferredItem<Item> PYRAD_FLAME = register("pyrad_flame");
	public static final DeferredItem<MobItem<Firefly>> FIREFLY = register("firefly", properties -> new MobItem<>(4.0D, EntityRegistry.FIREFLY.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<MireSnail>> MIRE_SNAIL = register("mire_snail", properties -> new MobItem<>(6.0D, EntityRegistry.MIRE_SNAIL.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<Gecko>> GECKO = register("gecko", properties -> new MobItem<>(12.0D, EntityRegistry.GECKO.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<Dragonfly>> DRAGONFLY = register("dragonfly", properties -> new MobItem<>(10.0D, EntityRegistry.DRAGONFLY.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<Olm>> OLM = register("olm", properties -> new MobItem<>(8.0D, EntityRegistry.OLM.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<CaveFish>> CAVE_FISH = register("cave_fish", properties -> new MobItem<>(3.0D, EntityRegistry.CAVE_FISH.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SLUDGE_WORM_EGG_SAC = register("sludge_worm_egg_sac", new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<TinySludgeWorm>> TINY_SLUDGE_WORM = register("tiny_sludge_worm", properties -> new MobItem<>(4.0D, EntityRegistry.TINY_SLUDGE_WORM.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<TinySludgeWormHelper>> TINY_SLUDGE_WORM_HELPER = register("tiny_sludge_worm_helper", properties -> new MobItem<>(30.0D, EntityRegistry.TINY_SLUDGE_WORM_HELPER.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<Anadia>> ANADIA = register("anadia", AnadiaMobItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<Jellyfish>> JELLYFISH = register("jellyfish", properties -> new MobItem<>(5.0D, EntityRegistry.JELLYFISH.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<BubblerCrab>> BUBBLER_CRAB = register("bubbler_crab", properties -> new MobItem<>(8.0D, EntityRegistry.BUBBLER_CRAB.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<SiltCrab>> SILT_CRAB = register("silt_crab", properties -> new MobItem<>(8.0D, EntityRegistry.SILT_CRAB.get(), null, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<MobItem<FreshwaterUrchin>> FRESHWATER_URCHIN = register("freshwater_urchin", FreshwaterUrchinMobItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> CHIROMAW_EGG = register("chiromaw_egg", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SHIMMER_STONE = register("shimmer_stone", new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1));
	public static final DeferredItem<Item> TARMINION = register("tarminion", TarminionItem::new, new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(16));
	public static final DeferredItem<Item> SLUDGE_BALL = register("sludge_ball");
	//rope
	public static final DeferredItem<Item> ANGRY_PEBBLE = register("angry_pebble", properties -> new AngryPebbleItem(4.5F, properties));
	public static final DeferredItem<Item> OCTINE_INGOT = register("octine_ingot", OctineIngotItem::new);
	public static final DeferredItem<Item> SAP_SPIT = register("sap_spit", HoverTextItem::new);
	public static final DeferredItem<Item> SHAMBLER_TONGUE = register("shambler_tongue");
	public static final DeferredItem<Item> RUNE_DOOR_KEY = register("rune_door_key", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> LURKER_SKIN_PATCH = register("lurker_skin_patch", HoverTextItem::new, new Item.Properties().stacksTo(16));
	public static final DeferredItem<Item> DRAETON_BALLOON = register("draeton_balloon");
	public static final DeferredItem<Item> DRAETON_BURNER = register("draeton_burner");
	public static final DeferredItem<Item> DRAETON = register("draeton", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> DRAETON_FURNACE_UPGRADE = register("draeton_furnace_upgrade", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> DRAETON_ANCHOR_UPGRADE = register("draeton_anchor_upgrade", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> DRAETON_CRAFTING_UPGRADE = register("draeton_crafting_upgrade", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> WEEDWOOD_ROWBOAT_LANTERN_UPGRADE = register("weedwood_rowboat_lantern_upgrade", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> AMATE_NAME_TAG = register("amate_name_tag", AmateNameTagItem::new);
	public static final DeferredItem<Item> DULL_LAVENDER_DYE = register("dull_lavender_dye", properties -> new BLDyeItem(BLDyeColor.DULL_LAVENDER, properties));
	public static final DeferredItem<Item> MAROON_DYE = register("maroon_dye", properties -> new BLDyeItem(BLDyeColor.MAROON, properties));
	public static final DeferredItem<Item> SHADOW_GREEN_DYE = register("shadow_green_dye", properties -> new BLDyeItem(BLDyeColor.SHADOW_GREEN, properties));
	public static final DeferredItem<Item> CAMELOT_MAGENTA_DYE = register("camelot_magenta_dye", properties -> new BLDyeItem(BLDyeColor.CAMELOT_MAGENTA, properties));
	public static final DeferredItem<Item> SAFFRON_DYE = register("saffron_dye", properties -> new BLDyeItem(BLDyeColor.SAFFRON, properties));
	public static final DeferredItem<Item> CARIBBEAN_GREEN_DYE = register("caribbean_green_dye", properties -> new BLDyeItem(BLDyeColor.CARIBBEAN_GREEN, properties));
	public static final DeferredItem<Item> VIVID_TANGERINE_DYE = register("vivid_tangerine_dye", properties -> new BLDyeItem(BLDyeColor.VIVID_TANGERINE, properties));
	public static final DeferredItem<Item> CHAMPAGNE_DYE = register("champagne_dye", properties -> new BLDyeItem(BLDyeColor.CHAMPAGNE, properties));
	public static final DeferredItem<Item> RAISIN_BLACK_DYE = register("raisin_black_dye", properties -> new BLDyeItem(BLDyeColor.RAISIN_BLACK, properties));
	public static final DeferredItem<Item> SUSHI_GREEN_DYE = register("sushi_green_dye", properties -> new BLDyeItem(BLDyeColor.SUSHI_GREEN, properties));
	public static final DeferredItem<Item> ELM_CYAN_DYE = register("elm_cyan_dye", properties -> new BLDyeItem(BLDyeColor.ELM_CYAN, properties));
	public static final DeferredItem<Item> CADMIUM_GREEN_DYE = register("cadmium_green_dye", properties -> new BLDyeItem(BLDyeColor.CADMIUM_GREEN, properties));
	public static final DeferredItem<Item> LAVENDER_BLUE_DYE = register("lavender_blue_dye", properties -> new BLDyeItem(BLDyeColor.LAVENDER_BLUE, properties));
	public static final DeferredItem<Item> BROWN_RUST_DYE = register("brown_rust_dye", properties -> new BLDyeItem(BLDyeColor.BROWN_RUST, properties));
	public static final DeferredItem<Item> MIDNIGHT_PURPLE_DYE = register("midnight_purple_dye", properties -> new BLDyeItem(BLDyeColor.MIDNIGHT_PURPLE, properties));
	public static final DeferredItem<Item> PEWTER_GREY_DYE = register("pewter_grey_dye", properties -> new BLDyeItem(BLDyeColor.PEWTER_GREY, properties));
	public static final DeferredItem<Item> DULL_LAVENDER_ITEM_FRAME = register("dull_lavender_item_frame", properties -> new BLItemFrameItem(BLDyeColor.DULL_LAVENDER, properties));
	public static final DeferredItem<Item> MAROON_ITEM_FRAME = register("maroon_item_frame", properties -> new BLItemFrameItem(BLDyeColor.MAROON, properties));
	public static final DeferredItem<Item> SHADOW_GREEN_ITEM_FRAME = register("shadow_green_item_frame", properties -> new BLItemFrameItem(BLDyeColor.SHADOW_GREEN, properties));
	public static final DeferredItem<Item> CAMELOT_MAGENTA_ITEM_FRAME = register("camelot_magenta_item_frame", properties -> new BLItemFrameItem(BLDyeColor.CAMELOT_MAGENTA, properties));
	public static final DeferredItem<Item> SAFFRON_ITEM_FRAME = register("saffron_item_frame", properties -> new BLItemFrameItem(BLDyeColor.SAFFRON, properties));
	public static final DeferredItem<Item> CARIBBEAN_GREEN_ITEM_FRAME = register("caribbean_green_item_frame", properties -> new BLItemFrameItem(BLDyeColor.CARIBBEAN_GREEN, properties));
	public static final DeferredItem<Item> VIVID_TANGERINE_ITEM_FRAME = register("vivid_tangerine_item_frame", properties -> new BLItemFrameItem(BLDyeColor.VIVID_TANGERINE, properties));
	public static final DeferredItem<Item> CHAMPAGNE_ITEM_FRAME = register("champagne_item_frame", properties -> new BLItemFrameItem(BLDyeColor.CHAMPAGNE, properties));
	public static final DeferredItem<Item> RAISIN_BLACK_ITEM_FRAME = register("raisin_black_item_frame", properties -> new BLItemFrameItem(BLDyeColor.RAISIN_BLACK, properties));
	public static final DeferredItem<Item> SUSHI_GREEN_ITEM_FRAME = register("sushi_green_item_frame", properties -> new BLItemFrameItem(BLDyeColor.SUSHI_GREEN, properties));
	public static final DeferredItem<Item> ELM_CYAN_ITEM_FRAME = register("elm_cyan_item_frame", properties -> new BLItemFrameItem(BLDyeColor.ELM_CYAN, properties));
	public static final DeferredItem<Item> CADMIUM_GREEN_ITEM_FRAME = register("cadmium_green_item_frame", properties -> new BLItemFrameItem(BLDyeColor.CADMIUM_GREEN, properties));
	public static final DeferredItem<Item> LAVENDER_BLUE_ITEM_FRAME = register("lavender_blue_item_frame", properties -> new BLItemFrameItem(BLDyeColor.LAVENDER_BLUE, properties));
	public static final DeferredItem<Item> BROWN_RUST_ITEM_FRAME = register("brown_rust_item_frame", properties -> new BLItemFrameItem(BLDyeColor.BROWN_RUST, properties));
	public static final DeferredItem<Item> MIDNIGHT_PURPLE_ITEM_FRAME = register("midnight_purple_item_frame", properties -> new BLItemFrameItem(BLDyeColor.MIDNIGHT_PURPLE, properties));
	public static final DeferredItem<Item> PEWTER_GREY_ITEM_FRAME = register("pewter_grey_item_frame", properties -> new BLItemFrameItem(BLDyeColor.PEWTER_GREY, properties));
	public static final DeferredItem<Item> PHEROMONE_THORAX = register("pheromone_thorax");
	public static final DeferredItem<Item> MOSS_FILTER = register("moss_filter", new Item.Properties().stacksTo(1).stacksTo(1).durability(400));
	public static final DeferredItem<Item> SILK_FILTER = register("silk_filter", new Item.Properties().stacksTo(1).stacksTo(1).durability(2000));
	public static final DeferredItem<Item> SILKY_PEBBLE = register("silky_pebble", properties -> new AngryPebbleItem(3.0F, properties));

	//TODO durability/attribute checks on tools and and armors
	public static final DeferredItem<Item> BONE_HELMET = register("bone_helmet", properties -> new ArmorItem(ArmorMaterialRegistry.BONE, ArmorType.HELMET, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> BONE_CHESTPLATE = register("bone_chestplate", properties -> new ArmorItem(ArmorMaterialRegistry.BONE, ArmorType.CHESTPLATE, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> BONE_LEGGINGS = register("bone_leggings", properties -> new ArmorItem(ArmorMaterialRegistry.BONE, ArmorType.LEGGINGS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> BONE_BOOTS = register("bone_boots", properties -> new ArmorItem(ArmorMaterialRegistry.BONE, ArmorType.BOOTS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> LURKER_SKIN_HELMET = register("lurker_skin_helmet", properties -> new LurkerSkinArmorItem(ArmorType.HELMET, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> LURKER_SKIN_CHESTPLATE = register("lurker_skin_chestplate", properties -> new LurkerSkinArmorItem(ArmorType.CHESTPLATE, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> LURKER_SKIN_LEGGINGS = register("lurker_skin_leggings", properties -> new LurkerSkinArmorItem(ArmorType.LEGGINGS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> LURKER_SKIN_BOOTS = register("lurker_skin_boots", properties -> new LurkerSkinArmorItem(ArmorType.BOOTS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SYRMORITE_HELMET = register("syrmorite_helmet", properties -> new ArmorItem(ArmorMaterialRegistry.SYRMORITE, ArmorType.HELMET, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SYRMORITE_CHESTPLATE = register("syrmorite_chestplate", properties -> new ArmorItem(ArmorMaterialRegistry.SYRMORITE, ArmorType.CHESTPLATE, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SYRMORITE_LEGGINGS = register("syrmorite_leggings", properties -> new ArmorItem(ArmorMaterialRegistry.SYRMORITE, ArmorType.LEGGINGS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SYRMORITE_BOOTS = register("syrmorite_boots", properties -> new ArmorItem(ArmorMaterialRegistry.SYRMORITE, ArmorType.BOOTS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_HELMET = register("valonite_helmet", properties -> new ArmorItem(ArmorMaterialRegistry.VALONITE, ArmorType.HELMET, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_CHESTPLATE = register("valonite_chestplate", properties -> new ArmorItem(ArmorMaterialRegistry.VALONITE, ArmorType.CHESTPLATE, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_LEGGINGS = register("valonite_leggings", properties -> new ArmorItem(ArmorMaterialRegistry.VALONITE, ArmorType.LEGGINGS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_BOOTS = register("valonite_boots", properties -> new ArmorItem(ArmorMaterialRegistry.VALONITE, ArmorType.BOOTS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> ANCIENT_HELMET = register("ancient_helmet", properties -> new AncientArmorItem(ArmorType.HELMET, properties), new Item.Properties().rarity(Rarity.EPIC).stacksTo(1));
	public static final DeferredItem<Item> ANCIENT_CHESTPLATE = register("ancient_chestplate", properties -> new AncientArmorItem(ArmorType.CHESTPLATE, properties), new Item.Properties().rarity(Rarity.EPIC).stacksTo(1));
	public static final DeferredItem<Item> ANCIENT_LEGGINGS = register("ancient_leggings", properties -> new AncientArmorItem(ArmorType.LEGGINGS, properties), new Item.Properties().rarity(Rarity.EPIC).stacksTo(1));
	public static final DeferredItem<Item> ANCIENT_BOOTS = register("ancient_boots", properties -> new AncientArmorItem(ArmorType.BOOTS, properties), new Item.Properties().rarity(Rarity.EPIC).stacksTo(1));
	public static final DeferredItem<Item> AMPHIBIOUS_HELMET = register("amphibious_helmet", properties -> new AmphibiousArmorItem(ArmorType.HELMET, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> AMPHIBIOUS_CHESTPLATE = register("amphibious_chestplate", properties -> new AmphibiousArmorItem(ArmorType.CHESTPLATE, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> AMPHIBIOUS_LEGGINGS = register("amphibious_leggings", properties -> new AmphibiousArmorItem(ArmorType.LEGGINGS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> AMPHIBIOUS_BOOTS = register("amphibious_boots", properties -> new AmphibiousArmorItem(ArmorType.BOOTS, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> RUBBER_BOOTS = register("rubber_boots", RubberBootsItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> MARSH_RUNNER_BOOTS = register("marsh_runner_boots", MarshRunnerBootsItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> WEEDWOOD_SWORD = register("weedwood_sword", properties -> new SwordItem(ToolMaterialRegistry.WEEDWOOD, 3.0F, -2.4F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> WEEDWOOD_PICKAXE = register("weedwood_pickaxe", properties -> new PickaxeItem(ToolMaterialRegistry.WEEDWOOD, 1.0F, -2.8F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> WEEDWOOD_AXE = register("weedwood_axe", properties -> new AxeItem(ToolMaterialRegistry.WEEDWOOD, 5.0F, -3.0F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> WEEDWOOD_SHOVEL = register("weedwood_shovel", properties -> new ShovelItem(ToolMaterialRegistry.WEEDWOOD, 1.5F, -3.0F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> BONE_SWORD = register("bone_sword", properties -> new SwordItem(ToolMaterialRegistry.BONE, 3.0F, -2.4F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> BONE_PICKAXE = register("bone_pickaxe", properties -> new PickaxeItem(ToolMaterialRegistry.BONE, 1.0F, -2.8F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> BONE_AXE = register("bone_axe", properties -> new AxeItem(ToolMaterialRegistry.BONE, 5.0F, -3.0F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> BONE_SHOVEL = register("bone_shovel", properties -> new ShovelItem(ToolMaterialRegistry.BONE, 1.5F, -3.0F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> OCTINE_SWORD = register("octine_sword", properties -> new SwordItem(ToolMaterialRegistry.OCTINE, 3.0F, -2.4F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> OCTINE_PICKAXE = register("octine_pickaxe", properties -> new PickaxeItem(ToolMaterialRegistry.OCTINE, 1.0F, -2.8F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> OCTINE_AXE = register("octine_axe", properties -> new AxeItem(ToolMaterialRegistry.OCTINE, 5.0F, -3.0F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> OCTINE_SHOVEL = register("octine_shovel", properties -> new ShovelItem(ToolMaterialRegistry.OCTINE, 1.5F, -3.0F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_SWORD = register("valonite_sword", properties -> new SwordItem(ToolMaterialRegistry.VALONITE, 3.0F, -2.4F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_PICKAXE = register("valonite_pickaxe", properties -> new PickaxeItem(ToolMaterialRegistry.VALONITE, 1.0F, -2.8F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_AXE = register("valonite_axe", properties -> new AxeItem(ToolMaterialRegistry.VALONITE, 5.0F, -3.0F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_GREATAXE = register("valonite_greataxe", properties -> new ValoniteGreataxeItem(ToolMaterialRegistry.VALONITE, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_SHOVEL = register("valonite_shovel", properties -> new ShovelItem(ToolMaterialRegistry.VALONITE, 1.5F, -3.0F, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> OCTINE_SHIELD = register("octine_shield", OctineShieldItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> VALONITE_SHIELD = register("valonite_shield", ValoniteShieldItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> WEEDWOOD_SHIELD = register("weedwood_shield", WeedwoodShieldItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> LIVING_WEEDWOOD_SHIELD = register("living_weedwood_shield", LivingWeedwoodShieldItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SYRMORITE_SHIELD = register("syrmorite_shield", SyrmoriteShieldItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> BONE_SHIELD = register("bone_shield", properties -> new BaseShieldItem(ToolMaterialRegistry.BONE, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> GREEN_DENTROTHYST_SHIELD = register("green_dentrothyst_shield", properties -> new DentrothystShieldItem(ToolMaterialRegistry.GREEN_DENTROTHYST, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> POLISHED_GREEN_DENTROTHYST_SHIELD = register("polished_green_dentrothyst_shield", properties -> new DentrothystShieldItem(ToolMaterialRegistry.GREEN_DENTROTHYST, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> ORANGE_DENTROTHYST_SHIELD = register("orange_dentrothyst_shield", properties -> new DentrothystShieldItem(ToolMaterialRegistry.ORANGE_DENTROTHYST, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> POLISHED_ORANGE_DENTROTHYST_SHIELD = register("polished_orange_dentrothyst_shield", properties -> new DentrothystShieldItem(ToolMaterialRegistry.ORANGE_DENTROTHYST, properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> LURKER_SKIN_SHIELD = register("lurker_skin_shield", LurkerSkinShieldItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SYRMORITE_SHEARS = register("syrmorite_shears", ShearsItem::new, new Item.Properties().component(DataComponents.TOOL, ShearsItem.createToolProperties()));
	public static final DeferredItem<Item> SICKLE = register("sickle", SickleItem::new, new Item.Properties().durability(2500));
	//shockwave sword
	public static final DeferredItem<Item> ANGLER_TOOTH_ARROW = register("angler_tooth_arrow", AnglerToothArrowItem::new);
	public static final DeferredItem<Item> POISONED_ANGLER_TOOTH_ARROW = register("poisoned_angler_tooth_arrow", PoisonAnglerToothArrowItem::new);
	public static final DeferredItem<Item> OCTINE_ARROW = register("octine_arrow", OctineArrowItem::new);
	public static final DeferredItem<Item> BASILISK_ARROW = register("basilisk_arrow", BasiliskArrowItem::new);
	public static final DeferredItem<Item> SLUDGE_WORM_ARROW = register("sludge_worm_arrow", SludgeWormArrowItem::new);
	public static final DeferredItem<Item> SHOCK_ARROW = register("shock_arrow", ShockArrowItem::new);
	public static final DeferredItem<Item> CHIROMAW_BARB = register("chiromaw_barb", ChiromawBarbItem::new);
	public static final DeferredItem<Item> WEEDWOOD_BOW = register("weedwood_bow", WeedwoodBowItem::new, new Item.Properties().stacksTo(1).durability(600));
	public static final DeferredItem<Item> PREDATOR_BOW = register("predator_bow", PredatorBowItem::new, new Item.Properties().stacksTo(1).durability(600).rarity(Rarity.RARE));
	//ancient weapons
	public static final DeferredItem<Item> PESTLE = register("pestle", PestleItem::new, new Item.Properties().stacksTo(1).durability(128));
	public static final DeferredItem<Item> NET = register("net", NetItem::new, new Item.Properties().stacksTo(1).durability(32));
	public static final DeferredItem<Item> SMALL_LURKER_SKIN_POUCH = register("small_lurker_skin_pouch", properties -> new LurkerSkinPouchItem(9, properties), new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.fromItems(new ArrayList<>(9))));
	public static final DeferredItem<Item> MEDIUM_LURKER_SKIN_POUCH = register("medium_lurker_skin_pouch", properties -> new LurkerSkinPouchItem(18, properties), new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.fromItems(new ArrayList<>(18))));
	public static final DeferredItem<Item> LARGE_LURKER_SKIN_POUCH = register("large_lurker_skin_pouch", properties -> new LurkerSkinPouchItem(27, properties), new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.fromItems(new ArrayList<>(27))));
	public static final DeferredItem<Item> XL_LURKER_SKIN_POUCH = register("xl_lurker_skin_pouch", properties -> new LurkerSkinPouchItem(36, properties), new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.fromItems(new ArrayList<>(36))));
	public static final DeferredItem<Item> CAVING_ROPE = register("caving_rope");
	//grapples
	public static final DeferredItem<Item> VOLARKITE = register("volarkite", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SLINGSHOT = register("simple_slingshot", SlingshotItem::new, new Item.Properties().stacksTo(1).durability(64));
	public static final DeferredItem<Item> WEEDWOOD_FISHING_ROD = register("weedwood_fishing_rod", BLFishingRodItem::new, new Item.Properties().stacksTo(1).durability(256));
	//spears
	public static final DeferredItem<Item> WEEDWOOD_BUCKET = register("weedwood_bucket", properties -> new BLBucketItem(false, BlockRegistry.WEEDWOOD_RUBBER_TAP.get(), properties));
	public static final DeferredItem<Item> SYRMORITE_BUCKET = register("syrmorite_bucket", properties -> new BLBucketItem(true, BlockRegistry.SYRMORITE_RUBBER_TAP.get(), properties));
	public static final DeferredItem<Item> WEEDWOOD_INFUSION_BUCKET = register("weedwood_infusion_bucket", InfusionBucketItem::new, new Item.Properties().stacksTo(1).craftRemainder(WEEDWOOD_BUCKET.get()));
	public static final DeferredItem<Item> SYRMORITE_INFUSION_BUCKET = register("syrmorite_infusion_bucket", InfusionBucketItem::new, new Item.Properties().stacksTo(1).craftRemainder(SYRMORITE_BUCKET.get()));
	public static final DeferredItem<Item> SOLID_RUBBER_SYRMORITE_BUCKET = register("solid_rubber_syrmorite_bucket", RubberBucketItem::new, new Item.Properties().stacksTo(1).craftRemainder(SYRMORITE_BUCKET.get()));
	public static final DeferredItem<Item> ELECTRIC_UPGRADE = register("electric_upgrade");
	public static final DeferredItem<Item> GLIDE_UPGRADE = register("glide_upgrade");
	public static final DeferredItem<Item> ASCENT_UPGRADE = register("ascent_upgrade");
	public static final DeferredItem<Item> URCHIN_SPIKE_UPGRADE = register("urchin_spike_upgrade");
	public static final DeferredItem<Item> FISH_VORTEX_UPGRADE = register("fish_vortex_upgrade");
	public static final DeferredItem<Item> BIOPATHIC_TRIGGERSTONE = register("biopathic_triggerstone", UpgradeTriggerItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> BIOPATHIC_LINKSTONE = register("biopathic_linkstone", UpgradeToggleItem::new, new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SILK_BUNDLE = register("silk_bundle", SilkBundleItem::new, new Item.Properties().component(DataComponents.CONTAINER, ItemContainerContents.fromItems(new ArrayList<>(4))).stacksTo(1));

	public static final DeferredItem<Item> SKULL_MASK = register("skull_mask", properties -> new ArmorItem(ArmorMaterialRegistry.SKULL_MASK, ArmorType.HELMET, properties), new Item.Properties().rarity(Rarity.RARE));
	//explorer hat
	public static final DeferredItem<Item> SMALL_SPIRIT_TREE_FACE_MASK = register("small_spirit_tree_face_mask", new Item.Properties().rarity(Rarity.RARE).stacksTo(1));
	public static final DeferredItem<Item> ANIMATED_SMALL_SPIRIT_TREE_FACE_MASK = register("animated_small_spirit_tree_face_mask", new Item.Properties().rarity(Rarity.RARE).stacksTo(1));
	//gallery frames
	public static final DeferredItem<Item> SILK_MASK = register("silk_mask", new Item.Properties().rarity(Rarity.RARE).stacksTo(1));
	public static final DeferredItem<Item> WIGHTS_BANE = register("wights_bane", properties -> new InstakillWeaponItem(ToolMaterialRegistry.WEEDWOOD, BLEntityTagProvider.WIGHTS_BANE_INSTAKILLS, properties), new Item.Properties().rarity(Rarity.RARE).stacksTo(1));
	public static final DeferredItem<Item> SLUDGE_SLICER = register("sludge_slicer", properties -> new InstakillWeaponItem(ToolMaterialRegistry.WEEDWOOD, BLEntityTagProvider.SLUDGE_SLICER_INSTAKILLS, properties), new Item.Properties().rarity(Rarity.RARE).stacksTo(1));
	public static final DeferredItem<Item> CRITTER_CRUNCHER = register("critter_cruncher", properties -> new InstakillWeaponItem(ToolMaterialRegistry.WEEDWOOD, BLEntityTagProvider.CRITTER_CRUNCHER_INSTAKILLS, properties), new Item.Properties().rarity(Rarity.RARE).stacksTo(1));
	public static final DeferredItem<Item> HAG_HACKER = register("hag_hacker", HagHackerItem::new, new Item.Properties().rarity(Rarity.RARE).stacksTo(1));
	public static final DeferredItem<Item> VOODOO_DOLL = register("voodoo_doll", VoodooDollItem::new, new Item.Properties().rarity(Rarity.RARE).durability(24).stacksTo(1));
	public static final DeferredItem<Item> SWIFT_PICK = register("swift_pick", properties -> new SwiftPickItem(ToolMaterialRegistry.VALONITE, properties), new Item.Properties().rarity(Rarity.EPIC).durability(2500).stacksTo(1));
	//barb erupters
	public static final DeferredItem<Item> MIST_STAFF = register("mist_staff", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> SHADOW_STAFF = register("shadow_staff", new Item.Properties().stacksTo(1));
	public static final DeferredItem<Item> RECORD_ASTATOS = register("music_disc_astatos", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.ASTATOS));
	public static final DeferredItem<Item> RECORD_BETWEEN_YOU_AND_ME = register("music_disc_between_you_and_me", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.BETWEEN_YOU_AND_ME));
	public static final DeferredItem<Item> RECORD_CHRISTMAS_ON_THE_MARSH = register("music_disc_christmas_on_the_marsh", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.CHRISTMAS_ON_THE_MARSH));
	public static final DeferredItem<Item> RECORD_THE_EXPLORER = register("music_disc_the_explorer", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.THE_EXPLORER));
	public static final DeferredItem<Item> RECORD_HAG_DANCE = register("music_disc_hag_dance", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.HAG_DANCE));
	public static final DeferredItem<Item> RECORD_LONELY_FIRE = register("music_disc_lonely_fire", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.LONELY_FIRE));
	public static final DeferredItem<Item> MYSTERIOUS_RECORD = register("mysterious_record", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.MYSTERIOUS_RECORD));
	public static final DeferredItem<Item> RECORD_ANCIENT = register("music_disc_ancient", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.ANCIENT));
	public static final DeferredItem<Item> RECORD_BENEATH_A_GREEN_SKY = register("music_disc_beneath_a_green_sky", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.BENEATH_A_GREEN_SKY));
	public static final DeferredItem<Item> RECORD_DJ_WIGHTS_MIXTAPE = register("dj_wights_mixtape", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.DJ_WIGHTS_MIXTAPE));
	public static final DeferredItem<Item> RECORD_ONWARDS = register("music_disc_onwards", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.ONWARDS));
	public static final DeferredItem<Item> RECORD_STUCK_IN_THE_MUD = register("music_disc_stuck_in_the_mud", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.STUCK_IN_THE_MUD));
	public static final DeferredItem<Item> RECORD_WANDERING_WISPS = register("music_disc_wandering_wisps", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.WANDERING_WISPS));
	public static final DeferredItem<Item> RECORD_WATERLOGGED = register("music_disc_waterlogged", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.WATERLOGGED));
	public static final DeferredItem<Item> RECORD_DEEP_WATER_THEME = register("deep_water_theme", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(MusicRegistry.DEEP_WATER_THEME));
	//amulets
	public static final DeferredItem<Item> AMULET_SLOT = register("amulet_slot", new Item.Properties().stacksTo(1).durability(30).rarity(Rarity.EPIC));
	public static final DeferredItem<Item> RING_OF_POWER = register("ring_of_power", new Item.Properties().stacksTo(1).rarity(Rarity.EPIC));
	public static final DeferredItem<Item> RING_OF_ASCENT = register("ring_of_ascent", new Item.Properties().stacksTo(1).rarity(Rarity.EPIC));
	public static final DeferredItem<Item> RING_OF_RECRUITMENT = register("ring_of_recruitment", new Item.Properties().stacksTo(1).rarity(Rarity.EPIC));
	public static final DeferredItem<Item> RING_OF_SUMMONING = register("ring_of_summoning", new Item.Properties().stacksTo(1).rarity(Rarity.EPIC));
	public static final DeferredItem<Item> RING_OF_DISPERSION = register("ring_of_dispersion", new Item.Properties().stacksTo(1).rarity(Rarity.EPIC));
	public static final DeferredItem<Item> RING_OF_GATHERING = register("ring_of_gathering", new Item.Properties().stacksTo(1).rarity(Rarity.EPIC));
	public static final DeferredItem<Item> THEM_SCRAP = register("them_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> MUTANTS_SCRAP = register("mutants_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> SHADOWS_SCRAP = register("shadows_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> RUINS_SCRAP = register("ruins_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> HEADS_SCRAP = register("heads_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> TAR_SCRAP = register("tar_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> DUNGEON_SCRAP = register("dungeon_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> PITSTONE_SCRAP = register("pitstone_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> TOWER_SCRAP = register("tower_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> FORT_SCRAP = register("fort_lore_scrap", LoreScrapItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> MUMMY_BAIT = register("mummy_bait", MummyBaitItem::new, new Item.Properties().rarity(Rarity.UNCOMMON));
	public static final DeferredItem<Item> BARK_AMULET = register("bark_amulet", new Item.Properties().rarity(Rarity.RARE));
	public static final DeferredItem<Item> AMATE_MAP = register("amate_map", EmptyAmateMapItem::new, new Item.Properties().rarity(Rarity.UNCOMMON));
	public static final DeferredItem<Item> FILLED_AMATE_MAP = register("filled_amate_map", AmateMapItem::new, new Item.Properties().rarity(Rarity.UNCOMMON));
	public static final DeferredItem<Item> BONE_WAYFINDER = register("bone_wayfinder", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON));
	public static final DeferredItem<Item> MAGIC_ITEM_MAGNET = register("magic_item_magnet", new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> GEM_SINGER = register("gem_singer", GemSingerItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.RARE));
	public static final DeferredItem<Item> SNOT_POD = register("snot_pod", new Item.Properties().stacksTo(1));

	public static final DeferredItem<Item> GROUND_LEAF = register("ground_leaf");
	public static final DeferredItem<Item> GROUND_CATTAIL = register("ground_cattail");
	public static final DeferredItem<Item> GROUND_SWAMP_GRASS = register("ground_swamp_grass");
	public static final DeferredItem<Item> GROUND_SHOOTS = register("ground_shoots");
	public static final DeferredItem<Item> GROUND_ARROW_ARUM = register("ground_arrow_arum");
	public static final DeferredItem<Item> GROUND_BUTTON_BUSH = register("ground_button_bush");
	public static final DeferredItem<Item> GROUND_MARSH_HIBUSCUS = register("ground_marsh_hibiscus");
	public static final DeferredItem<Item> GROUND_PICKERELWEED = register("ground_pickerelweed");
	public static final DeferredItem<Item> GROUND_SOFT_RUSH = register("ground_soft_rush");
	public static final DeferredItem<Item> GROUND_MARSH_MALLOW = register("ground_marsh_mallow");
	public static final DeferredItem<Item> GROUND_MILKWEED = register("ground_milkweed");
	public static final DeferredItem<Item> GROUND_BLUE_IRIS = register("ground_blue_iris");
	public static final DeferredItem<Item> GROUND_COPPER_IRIS = register("ground_copper_iris");
	public static final DeferredItem<Item> GROUND_BLUE_EYED_GRASS = register("ground_blue_eyed_grass");
	public static final DeferredItem<Item> GROUND_BONESET = register("ground_boneset");
	public static final DeferredItem<Item> GROUND_BOTTLE_BRUSH_GRASS = register("ground_bottle_brush_grass");
	public static final DeferredItem<Item> GROUND_WEEDWOOD_BARK = register("ground_weedwood_bark");
	public static final DeferredItem<Item> GROUND_DRIED_SWAMP_REED = register("ground_dried_swamp_reed", DriedSwampReedItem::new);
	public static final DeferredItem<Item> GROUND_ALGAE = register("ground_algae");
	public static final DeferredItem<Item> GROUND_ANGLER_TOOTH = register("ground_angler_tooth");
	public static final DeferredItem<Item> GROUND_BLACKHAT_MUSHROOM = register("ground_blackhat_mushroom");
	public static final DeferredItem<Item> GROUND_CRIMSON_SNAIL_SHELL = register("ground_crimson_snail_shell");
	public static final DeferredItem<Item> GROUND_BOG_BEAN = register("ground_bog_bean");
	public static final DeferredItem<Item> GROUND_BROOMSEDGE = register("ground_broomsedge");
	public static final DeferredItem<Item> GROUND_BULB_CAPPED_MUSHROOM = register("ground_bulb_capped_mushroom");
	public static final DeferredItem<Item> GROUND_CARDINAL_FLOWER = register("ground_cardinal_flower");
	public static final DeferredItem<Item> GROUND_CAVE_GRASS = register("ground_cave_grass");
	public static final DeferredItem<Item> GROUND_CAVE_MOSS = register("ground_cave_moss");
	public static final DeferredItem<Item> GROUND_CRIMSON_MIDDLE_GEM = register("ground_crimson_middle_gem");
	public static final DeferredItem<Item> GROUND_DEEP_WATER_CORAL = register("ground_deep_water_coral");
	public static final DeferredItem<Item> GROUND_FLATHEAD_MUSHROOM = register("ground_flathead_mushroom");
	public static final DeferredItem<Item> GROUND_GOLDEN_CLUB = register("ground_golden_club");
	public static final DeferredItem<Item> GROUND_GREEN_MIDDLE_GEM = register("ground_green_middle_gem");
	public static final DeferredItem<Item> GROUND_HANGER = register("ground_hanger");
	public static final DeferredItem<Item> GROUND_LICHEN = register("ground_lichen");
	public static final DeferredItem<Item> GROUND_MARSH_MARIGOLD = register("ground_marsh_marigold");
	public static final DeferredItem<Item> GROUND_MIRE_CORAL = register("ground_mire_coral");
	public static final DeferredItem<Item> GROUND_OCHRE_SNAIL_SHELL = register("ground_ochre_snail_shell");
	public static final DeferredItem<Item> GROUND_MOSS = register("ground_moss");
	public static final DeferredItem<Item> GROUND_NETTLE = register("ground_nettle");
	public static final DeferredItem<Item> GROUND_PHRAGMITES = register("ground_phragmites");
	public static final DeferredItem<Item> GROUND_SLUDGECREEP = register("ground_sludgecreep");
	public static final DeferredItem<Item> GROUND_SUNDEW = register("ground_sundew");
	public static final DeferredItem<Item> GROUND_SWAMP_KELP = register("ground_swamp_kelp");
	public static final DeferredItem<Item> GROUND_ROOTS = register("ground_roots");
	public static final DeferredItem<Item> GROUND_AQUA_MIDDLE_GEM = register("ground_aqua_middle_gem");
	public static final DeferredItem<Item> GROUND_PITCHER_PLANT = register("ground_pitcher_plant");
	public static final DeferredItem<Item> GROUND_WATER_WEEDS = register("ground_water_weeds");
	public static final DeferredItem<Item> GROUND_VENUS_FLY_TRAP = register("ground_venus_fly_trap");
	public static final DeferredItem<Item> GROUND_VOLARPAD = register("ground_volarpad");
	public static final DeferredItem<Item> GROUND_THORNS = register("ground_thorns");
	public static final DeferredItem<Item> GROUND_POISON_IVY = register("ground_poison_ivy");
	public static final DeferredItem<Item> GROUND_BLADDERWORT_FLOWER = register("ground_bladderwort_flower");
	public static final DeferredItem<Item> GROUND_BLADDERWORT_STALK = register("ground_bladderwort_stalk");
	public static final DeferredItem<Item> GROUND_EDGE_SHROOM = register("ground_edge_shroom");
	public static final DeferredItem<Item> GROUND_EDGE_MOSS = register("ground_edge_moss");
	public static final DeferredItem<Item> GROUND_EDGE_LEAF = register("ground_edge_leaf");
	public static final DeferredItem<Item> GROUND_ROTBULB = register("ground_rotbulb");
	public static final DeferredItem<Item> GROUND_PALE_GRASS = register("ground_pale_grass");
	public static final DeferredItem<Item> GROUND_STRING_ROOTS = register("ground_string_roots");
	public static final DeferredItem<Item> GROUND_CRYPTWEED = register("ground_cryptweed");
	public static final DeferredItem<Item> GROUND_BETWEENSTONE_PEBBLE = register("ground_betweenstone_pebble");
	public static final DeferredItem<Item> LEAF = register("leaf");
	public static final DeferredItem<Item> ALGAE_CLUMP = register("algae_clump");
	public static final DeferredItem<Item> ARROW_ARUM_LEAF = register("arrow_arum_leaf");
	public static final DeferredItem<Item> BLUE_EYED_GRASS_FLOWERS = register("blue_eyed_grass_flowers");
	public static final DeferredItem<Item> BLUE_IRIS_PETAL = register("blue_iris_petal");
	public static final DeferredItem<Item> MIRE_CORAL_STALK = register("mire_coral_stalk");
	public static final DeferredItem<Item> DEEP_WATER_CORAL_STALK = register("deep_water_coral_stalk");
	public static final DeferredItem<Item> BOG_BEAN_FLOWER_DROP = register("bog_bean_flower_drop");
	public static final DeferredItem<Item> BONESET_FLOWERS = register("boneset_flowers");
	public static final DeferredItem<Item> BOTTLE_BRUSH_GRASS_BLADES = register("bottle_brush_grass_blades");
	public static final DeferredItem<Item> BROOMSEDGE_LEAVES = register("broomsedge_leaves");
	public static final DeferredItem<Item> BUTTON_BUSH_FLOWERS = register("button_bush_flowers");
	public static final DeferredItem<Item> CARDINAL_FLOWER_PETALS = register("cardinal_flower_petals");
	public static final DeferredItem<Item> CATTAIL_HEAD = register("cattail_head");
	public static final DeferredItem<Item> CAVE_GRASS_BLADES = register("cave_grass_blades");
	public static final DeferredItem<Item> COPPER_IRIS_PETALS = register("copper_iris_petals");
	public static final DeferredItem<Item> GOLDEN_CLUB_FLOWERS = register("golden_club_flowers");
	public static final DeferredItem<Item> LICHEN_CLUMP = register("lichen_clump");
	public static final DeferredItem<Item> MARSH_HIBISCUS_FLOWER = register("marsh_hibiscus_flower");
	public static final DeferredItem<Item> MARSH_MALLOW_FLOWER = register("marsh_mallow_flower");
	public static final DeferredItem<Item> MARSH_MARIGOLD_FLOWER_DROP = register("marsh_marigold_flower_drop");
	public static final DeferredItem<Item> NETTLE_LEAF = register("nettle_leaf");
	public static final DeferredItem<Item> PHRAGMITE_STEMS = register("phragmite_stems");
	public static final DeferredItem<Item> PICKERELWEED_FLOWER = register("pickerelweed_flower");
	public static final DeferredItem<Item> SHOOT_LEAVES = register("shoot_leaves");
	public static final DeferredItem<Item> SLUDGECREEP_LEAVES = register("sludgecreep_leaves");
	public static final DeferredItem<Item> SOFT_RUSH_LEAVES = register("soft_rush_leaves");
	public static final DeferredItem<Item> SUNDEW_HEAD = register("sundew_head");
	public static final DeferredItem<Item> SWAMP_GRASS_BLADES = register("swamp_grass_blades");
	public static final DeferredItem<Item> CAVE_MOSS_CLUMP = register("cave_moss_clump");
	public static final DeferredItem<Item> MOSS_CLUMP = register("moss_clump");
	public static final DeferredItem<Item> MILKWEED_FLOWER = register("milkweed_flower");
	public static final DeferredItem<Item> HANGER_DROP = register("hanger_drop");
	public static final DeferredItem<Item> PITCHER_PLANT_TRAP = register("pitcher_plant_trap");
	public static final DeferredItem<Item> WATER_WEEDS_DROP = register("water_weeds_drop");
	public static final DeferredItem<Item> VENUS_FLY_TRAP_HEAD = register("venus_fly_trap_head");
	public static final DeferredItem<Item> VOLARPAD_LEAF = register("volarpad_leaf");
	public static final DeferredItem<Item> THORN_BRANCH = register("thorn_branch");
	public static final DeferredItem<Item> POISON_IVY_LEAF = register("poison_ivy_leaf");
	public static final DeferredItem<Item> BLADDERWORT_STALK_DROP = register("bladderwort_stalk_drop");
	public static final DeferredItem<Item> BLADDERWORT_FLOWER_DROP = register("bladderwort_flower_drop");
	public static final DeferredItem<Item> EDGE_SHROOM_GILLS = register("edge_shroom_gills");
	public static final DeferredItem<Item> EDGE_MOSS_CLUMP = register("edge_moss_clump");
	public static final DeferredItem<Item> EDGE_LEAF_DROP = register("edge_leaf_drop");
	public static final DeferredItem<Item> ROTBULB_STALK = register("rotbulb_stalk");
	public static final DeferredItem<Item> PALE_GRASS_BLADES = register("pale_grass_blades");
	public static final DeferredItem<Item> STRING_ROOT_FIBERS = register("string_root_fibers");
	public static final DeferredItem<Item> CRYPTWEED_BLADES = register("cryptweed_blades");
	public static final DeferredItem<Item> ASPECTRUS_FRUIT = register("apsectrus_fruit", AspectrusFruitItem::new, new Item.Properties().component(DataComponentRegistry.ASPECT_CONTENTS, AspectContents.EMPTY));
	public static final DeferredItem<Item> GREEN_DENTROTHYST_VIAL = register("green_dentrothyst_vial", properties -> new DentrothystVialItem(ItemRegistry.GREEN_ASPECT_VIAL, ItemRegistry.GREEN_ELIXIR, properties));
	public static final DeferredItem<Item> DIRTY_DENTROTHYST_VIAL = register("dirty_dentrothyst_vial");
	public static final DeferredItem<Item> ORANGE_DENTROTHYST_VIAL = register("orange_dentrothyst_vial", properties -> new DentrothystVialItem(ItemRegistry.ORANGE_ASPECT_VIAL, ItemRegistry.ORANGE_ELIXIR, properties));
	public static final DeferredItem<Item> GREEN_ASPECT_VIAL = register("green_aspect_vial", AspectVialItem::new, new Item.Properties().stacksTo(1).craftRemainder(GREEN_DENTROTHYST_VIAL.get()).component(DataComponentRegistry.ASPECT_CONTENTS, AspectContents.EMPTY));
	public static final DeferredItem<Item> ORANGE_ASPECT_VIAL = register("orange_aspect_vial", AspectVialItem::new, new Item.Properties().stacksTo(1).craftRemainder(ORANGE_DENTROTHYST_VIAL.get()).component(DataComponentRegistry.ASPECT_CONTENTS, AspectContents.EMPTY));
	public static final DeferredItem<Item> GREEN_ELIXIR = register("green_elixir", ElixirItem::new, new Item.Properties().stacksTo(1).craftRemainder(DIRTY_DENTROTHYST_VIAL.get()).component(DataComponentRegistry.ELIXIR_CONTENTS, ElixirContents.EMPTY));
	public static final DeferredItem<Item> ORANGE_ELIXIR = register("orange_elixir", ElixirItem::new, new Item.Properties().stacksTo(1).craftRemainder(ORANGE_DENTROTHYST_VIAL.get()).component(DataComponentRegistry.ELIXIR_CONTENTS, ElixirContents.EMPTY));

	//debug items
	public static final DeferredItem<Item> GLUE = register("glue", GlueItem::new);
	public static final DeferredItem<Item> TEST_CHIMP = register("test_chimp", TestChimpItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.EPIC).component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true));
	public static final DeferredItem<Item> TEST_FLAG = register("test_flag", TestFlagItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.EPIC).component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true));

	public static final DeferredItem<BucketItem> SWAMP_WATER_BUCKET = register("swamp_water_bucket", properties -> new BucketItem(FluidRegistry.SWAMP_WATER_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> STAGNANT_WATER_BUCKET = register("stagnant_water_bucket", properties -> new BucketItem(FluidRegistry.STAGNANT_WATER_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> TAR_BUCKET = register("tar_bucket", properties -> new BucketItem(FluidRegistry.TAR_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> RUBBER_BUCKET = register("rubber_bucket", properties -> new BucketItem(FluidRegistry.RUBBER_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> CLEAN_WATER_BUCKET = register("clean_water_bucket", properties -> new BucketItem(FluidRegistry.CLEAN_WATER_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> FISH_OIL_BUCKET = register("fish_oil_bucket", properties -> new BucketItem(FluidRegistry.FISH_OIL_STILL.get(), properties), new Item.Properties().stacksTo(1));

	public static final DeferredItem<BucketItem> DULL_LAVENDER_DYE_BUCKET = register("dull_lavender_dye_bucket", properties -> new BucketItem(FluidRegistry.DULL_LAVENDER_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> MAROON_DYE_BUCKET = register("maroon_dye_bucket", properties -> new BucketItem(FluidRegistry.MAROON_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> SHADOW_GREEN_DYE_BUCKET = register("shadow_green_dye_bucket", properties -> new BucketItem(FluidRegistry.SHADOW_GREEN_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> CAMELOT_MAGENTA_DYE_BUCKET = register("camelot_magenta_dye_bucket", properties -> new BucketItem(FluidRegistry.CAMELOT_MAGENTA_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> SAFFRON_DYE_BUCKET = register("saffron_dye_bucket", properties -> new BucketItem(FluidRegistry.SAFFRON_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> CARIBBEAN_GREEN_DYE_BUCKET = register("caribbean_green_dye_bucket", properties -> new BucketItem(FluidRegistry.CARIBBEAN_GREEN_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> VIVID_TANGERINE_DYE_BUCKET = register("vivid_tangerine_dye_bucket", properties -> new BucketItem(FluidRegistry.VIVID_TANGERINE_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> CHAMPAGNE_DYE_BUCKET = register("champagne_dye_bucket", properties -> new BucketItem(FluidRegistry.CHAMPAGNE_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> RAISIN_BLACK_DYE_BUCKET = register("raisin_black_dye_bucket", properties -> new BucketItem(FluidRegistry.RAISIN_BLACK_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> SUSHI_GREEN_DYE_BUCKET = register("sushi_green_dye_bucket", properties -> new BucketItem(FluidRegistry.SUSHI_GREEN_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> ELM_CYAN_DYE_BUCKET = register("elm_cyan_dye_bucket", properties -> new BucketItem(FluidRegistry.ELM_CYAN_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> CADMIUM_GREEN_DYE_BUCKET = register("cadmium_green_dye_bucket", properties -> new BucketItem(FluidRegistry.CADMIUM_GREEN_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> LAVENDER_BLUE_DYE_BUCKET = register("lavender_blue_dye_bucket", properties -> new BucketItem(FluidRegistry.LAVENDER_BLUE_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> BROWN_RUST_DYE_BUCKET = register("brown_rust_dye_bucket", properties -> new BucketItem(FluidRegistry.BROWN_RUST_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> MIDNIGHT_PURPLE_DYE_BUCKET = register("midnight_purple_dye_bucket", properties -> new BucketItem(FluidRegistry.MIDNIGHT_PURPLE_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> PEWTER_GREY_DYE_BUCKET = register("pewter_grey_dye_bucket", properties -> new BucketItem(FluidRegistry.PEWTER_GREY_DYE_STILL.get(), properties), new Item.Properties().stacksTo(1));

	public static final DeferredItem<BucketItem> NETTLE_SOUP_BUCKET = register("nettle_soup_bucket", properties -> new BucketItem(FluidRegistry.NETTLE_SOUP_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> NETTLE_TEA_BUCKET = register("nettle_tea_bucket", properties -> new BucketItem(FluidRegistry.NETTLE_TEA_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> PHEROMONE_EXTRACT_BUCKET = register("pheromone_extract_bucket", properties -> new BucketItem(FluidRegistry.PHEROMONE_EXTRACT_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> SWAMP_BROTH_BUCKET = register("swamp_broth_bucket", properties -> new BucketItem(FluidRegistry.SWAMP_BROTH_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> STURDY_STOCK_BUCKET = register("sturdy_stock_bucket", properties -> new BucketItem(FluidRegistry.STURDY_STOCK_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> PEAR_CORDIAL_BUCKET = register("pear_cordial_bucket", properties -> new BucketItem(FluidRegistry.PEAR_CORDIAL_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> SHAMANS_BREW_BUCKET = register("shamans_brew_bucket", properties -> new BucketItem(FluidRegistry.SHAMANS_BREW_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> LAKE_BROTH_BUCKET = register("lake_broth_bucket", properties -> new BucketItem(FluidRegistry.LAKE_BROTH_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> SHELL_STOCK_BUCKET = register("shell_stock_bucket", properties -> new BucketItem(FluidRegistry.SHELL_STOCK_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> FROG_LEG_EXTRACT_BUCKET = register("frog_leg_extract_bucket", properties -> new BucketItem(FluidRegistry.FROG_LEG_EXTRACT_STILL.get(), properties), new Item.Properties().stacksTo(1));
	public static final DeferredItem<BucketItem> WITCH_TEA_BUCKET = register("witch_tea_bucket", properties -> new BucketItem(FluidRegistry.WITCH_TEA_STILL.get(), properties), new Item.Properties().stacksTo(1));

	public static final DeferredItem<Item> DAMP_TORCH = register("damp_torch", properties -> new StandingAndWallBlockItem(BlockRegistry.DAMP_TORCH.get(), BlockRegistry.DAMP_WALL_TORCH.get(), Direction.DOWN, properties));
	public static final DeferredItem<Item> SULFUR_TORCH = register("sulfur_torch", properties -> new StandingAndWallBlockItem(BlockRegistry.SULFUR_TORCH.get(), BlockRegistry.SULFUR_WALL_TORCH.get(), Direction.DOWN, properties));
	public static final DeferredItem<Item> EXTINGUISHED_SULFUR_TORCH = register("extinguished_sulfur_torch", properties -> new StandingAndWallBlockItem(BlockRegistry.EXTINGUISHED_SULFUR_TORCH.get(), BlockRegistry.EXTINGUISHED_SULFUR_WALL_TORCH.get(), Direction.DOWN, properties));
	public static final DeferredItem<Item> WEEDWOOD_SIGN = register("weedwood_sign", properties -> new SignItem(BlockRegistry.WEEDWOOD_SIGN.get(), BlockRegistry.WEEDWOOD_WALL_SIGN.get(), properties));

	public static final DeferredItem<Item> CRYPT_CRAWLER_SPAWN_EGG = EntityRegistry.SPAWN_EGGS.register("crypt_crawler_spawn_egg", () -> new CryptCrawlerSpawnEggItem(new Item.Properties().setId(ResourceKey.create(Registries.ITEM, TheBetweenlands.prefix("crypt_crawler_spawn_egg")))));

	public static DeferredItem<Item> register(String name) {
		return register(name, Item::new);
	}

	public static DeferredItem<Item> register(String name, Item.Properties properties) {
		return register(name, Item::new, properties);
	}

	public static <T extends Item> DeferredItem<T> register(String name, Function<Item.Properties, T> item) {
		return register(name, item, new Item.Properties());
	}

	public static <T extends Item> DeferredItem<T> register(String name, Function<Item.Properties, T> item, Item.Properties properties) {
		return ITEMS.register(name, () -> item.apply(properties.setId(ResourceKey.create(Registries.ITEM, TheBetweenlands.prefix(name)))));
	}
}
package thebetweenlands.common.registries;

import net.minecraft.core.BlockPos;
import net.minecraft.core.registries.Registries;
import net.minecraft.resources.ResourceKey;
import net.minecraft.util.valueproviders.ConstantInt;
import net.minecraft.util.valueproviders.UniformInt;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.item.*;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.block.state.properties.NoteBlockInstrument;
import net.minecraft.world.level.material.MapColor;
import net.minecraft.world.level.material.PushReaction;
import net.neoforged.neoforge.registries.DeferredBlock;
import net.neoforged.neoforge.registries.DeferredRegister;
import thebetweenlands.common.TheBetweenlands;
import thebetweenlands.common.block.container.*;
import thebetweenlands.common.block.container.BarrelBlock;
import thebetweenlands.common.block.farming.BarnacleBlock;
import thebetweenlands.common.block.farming.DugDirtBlock;
import thebetweenlands.common.block.farming.DugGrassBlock;
import thebetweenlands.common.block.misc.*;
import thebetweenlands.common.block.plant.*;
import thebetweenlands.common.block.structure.*;
import thebetweenlands.common.block.terrain.*;
import thebetweenlands.common.block.terrain.MudBlock;
import thebetweenlands.common.block.waterlog.*;
import thebetweenlands.common.component.entity.circlegem.CircleGemType;
import thebetweenlands.common.world.BLTreeGrowers;
import thebetweenlands.util.BLDyeColor;
import thebetweenlands.util.BLWoodTypes;

import java.util.function.Function;

//TODO improve map colors
public class BlockRegistry {

	public static final DeferredRegister.Blocks BLOCKS = DeferredRegister.createBlocks(TheBetweenlands.ID);

	public static final DeferredBlock<LiquidBlock> SWAMP_WATER = register("swamp_water", properties -> new LiquidBlock(FluidRegistry.SWAMP_WATER_STILL.get(), properties), BlockBehaviour.Properties.of().mapColor(MapColor.WATER).replaceable().noCollission().strength(100.0F).pushReaction(PushReaction.DESTROY).noLootTable().liquid().sound(SoundType.EMPTY));
	public static final DeferredBlock<LiquidBlock> STAGNANT_WATER = register("stagnant_water", properties -> new StagnantWaterBlock(FluidRegistry.STAGNANT_WATER_STILL.get(), properties), BlockBehaviour.Properties.of().mapColor(MapColor.WATER).replaceable().noCollission().strength(100.0F).pushReaction(PushReaction.DESTROY).noLootTable().liquid().sound(SoundType.EMPTY));
	public static final DeferredBlock<LiquidBlock> TAR = register("tar", properties -> new TarBlock(FluidRegistry.TAR_STILL.get(), properties), BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).replaceable().noCollission().strength(100.0F).pushReaction(PushReaction.DESTROY).noLootTable().liquid().sound(SoundType.EMPTY));
	public static final DeferredBlock<LiquidBlock> RUBBER = register("rubber", properties -> new LiquidBlock(FluidRegistry.RUBBER_STILL.get(), properties), BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).replaceable().noCollission().strength(100.0F).pushReaction(PushReaction.DESTROY).noLootTable().liquid().sound(SoundType.EMPTY));
	public static final DeferredBlock<Block> DRUID_STONE_1 = registerWithItem("druid_stone_1", DruidStoneBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F).lightLevel(value -> 12));
	public static final DeferredBlock<Block> DRUID_STONE_2 = registerWithItem("druid_stone_2", DruidStoneBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F).lightLevel(value -> 12));
	public static final DeferredBlock<Block> DRUID_STONE_3 = registerWithItem("druid_stone_3", DruidStoneBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F).lightLevel(value -> 12));
	public static final DeferredBlock<Block> DRUID_STONE_4 = registerWithItem("druid_stone_4", DruidStoneBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F).lightLevel(value -> 12));
	public static final DeferredBlock<Block> DRUID_STONE_5 = registerWithItem("druid_stone_5", DruidStoneBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F).lightLevel(value -> 12));
	public static final DeferredBlock<Block> DRUID_STONE_6 = registerWithItem("druid_stone_6", DruidStoneBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F).lightLevel(value -> 12));

	//terrain
	public static final DeferredBlock<Block> BETWEENLANDS_BEDROCK = registerWithItem("bedrock", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BEDROCK));
	public static final DeferredBlock<Block> BETWEENSTONE = registerWithItem("betweenstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F));
	public static final DeferredBlock<Block> CORRUPT_BETWEENSTONE = registerWithItem("corrupt_betweenstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F));
	public static final DeferredBlock<Block> MUD = registerWithItem("mud", MudBlock::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.MUD).isValidSpawn((state, level, pos, type) -> true).isRedstoneConductor((state, level, pos) -> true).isViewBlocking((state, level, pos) -> true).isSuffocating((state, level, pos) -> true));
	public static final DeferredBlock<Block> PEAT = registerWithItem("peat", PeatBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).strength(0.5F).sound(SoundType.PACKED_MUD));
	public static final DeferredBlock<Block> SMOULDERING_PEAT = registerWithItem("smouldering_peat", SmoulderingPeatBlock::new, BlockBehaviour.Properties.ofFullCopy(PEAT.get()));
	public static final DeferredBlock<Block> SLUDGY_DIRT = registerWithItem("sludgy_dirt", SludgyDirtBlock::new, BlockBehaviour.Properties.of().strength(0.5F).randomTicks().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> SPREADING_SLUDGY_DIRT = register("spreading_sludgy_dirt", SpreadingSludgyDirtBlock::new, BlockBehaviour.Properties.of().strength(0.5F).randomTicks().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> SLIMY_DIRT = registerWithItem("slimy_dirt", Block::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> SLIMY_GRASS = registerWithItem("slimy_grass", SlimyGrassBlock::new, BlockBehaviour.Properties.of().strength(0.5F).randomTicks().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> CRAGROCK = registerWithItem("cragrock", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F));
	public static final DeferredBlock<Block> MOSSY_CRAGROCK_BOTTOM = registerWithItem("mossy_cragrock_bottom", MossyCragrockBottomBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).randomTicks().sound(SoundType.STONE));
	public static final DeferredBlock<Block> MOSSY_CRAGROCK_TOP = registerWithItem("mossy_cragrock_top", MossyCragrockBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).randomTicks().sound(SoundType.STONE));
	public static final DeferredBlock<Block> PITSTONE = registerWithItem("pitstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.5F, 10.0F));
	public static final DeferredBlock<Block> LIMESTONE = registerWithItem("limestone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE).strength(1.2F, 8.0F));
	public static final DeferredBlock<Block> SWAMP_DIRT = registerWithItem("swamp_dirt", Block::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.ROOTED_DIRT));
	public static final DeferredBlock<Block> COARSE_SWAMP_DIRT = registerWithItem("coarse_swamp_dirt", Block::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.ROOTED_DIRT));
	public static final DeferredBlock<Block> SWAMP_GRASS = registerWithItem("swamp_grass", SwampGrassBlock::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> WISP = registerWithItem("wisp", WispBlock::new, BlockBehaviour.Properties.of().instabreak().noCollission().noOcclusion().sound(SoundType.STONE).replaceable());
	public static final DeferredBlock<Block> OCTINE_ORE = registerWithItem("octine_ore", properties -> new OctineOreBlock(ConstantInt.of(0), properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().lightLevel(value -> 13).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> VALONITE_ORE = registerWithItem("valonite_ore", properties -> new DropExperienceBlock(UniformInt.of(5, 12), properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SULFUR_ORE = registerWithItem("sulfur_ore", properties -> new SulfurOreBlock(UniformInt.of(0, 2), properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLIMY_BONE_ORE = registerWithItem("slimy_bone_ore", properties -> new DropExperienceBlock(UniformInt.of(1, 4), properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SCABYST_ORE = registerWithItem("scabyst_ore", properties -> new DropExperienceBlock(UniformInt.of(4, 10), properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SYRMORITE_ORE = registerWithItem("syrmorite_ore", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> AQUA_MIDDLE_GEM_ORE = registerWithItem("aqua_middle_gem_ore", properties -> new CircleGemBlock(CircleGemType.AQUA, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRIMSON_MIDDLE_GEM_ORE = registerWithItem("crimson_middle_gem_ore", properties -> new CircleGemBlock(CircleGemType.CRIMSON, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> GREEN_MIDDLE_GEM_ORE = registerWithItem("green_middle_gem_ore", properties -> new CircleGemBlock(CircleGemType.GREEN, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));

	//stalactites and roots
	public static final DeferredBlock<Block> STALACTITE = registerWithItem("stalactite", StalactiteBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never));
	public static final DeferredBlock<Block> LIFE_CRYSTAL_STALACTITE = registerWithItem("life_crystal_stalactite", properties -> new LifeCrystalStalactiteBlock(false, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(2.5F, 10.0F).sound(SoundType.STONE).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never));
	public static final DeferredBlock<Block> LIFE_CRYSTAL_ORE_STALACTITE = registerWithItem("life_crystal_ore_stalactite", properties -> new LifeCrystalStalactiteBlock(true, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(2.5F, 10.0F).sound(SoundType.STONE).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never).lightLevel((state) -> 6));
	public static final DeferredBlock<Block> ROOT = registerWithItem("root", StalactiteBlock::new, BlockBehaviour.Properties.of().strength(1.5F, 10.0F).sound(SoundType.WOOD).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never));

	public static final DeferredBlock<Block> SILT = registerWithItem("silt", SiltBlock::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.SAND));
	public static final DeferredBlock<Block> FILTERED_SILT = registerWithItem("filtered_silt", SiltBlock::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.SAND));
	public static final DeferredBlock<Block> DEAD_GRASS = registerWithItem("dead_grass", DeadGrassBlock::new, BlockBehaviour.Properties.of().strength(0.5F).randomTicks().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SOLID_TAR = registerWithItem("solid_tar", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> PUDDLE = registerWithItem("puddle", PuddleBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().randomTicks().strength(0.1F));
	public static final DeferredBlock<Block> PEARL_BLOCK = registerWithItem("pearl_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.2F, 8.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> ANCIENT_REMNANT_BLOCK = registerWithItem("ancient_remnant_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.2F, 8.0F).sound(SoundType.STONE));

	//trees
	public static final DeferredBlock<Block> WEEDWOOD_LOG = registerWithItem("weedwood_log", RotatedPillarBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> WEEDWOOD_BARK = registerWithItem("weedwood_bark", RotatedPillarBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> WEEDWOOD = registerWithItem("weedwood", Block::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> ROTTEN_BARK = registerWithItem("rotten_bark", RottenLogBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> SPREADING_ROTTEN_BARK = registerWithItem("spreading_rotten_bark", SpreadingRottenLogBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> RUBBER_LOG = registerWithItem("rubber_log", RubberLogBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> HEARTHGROVE_LOG = registerWithItem("hearthgrove_log", HearthgroveLogBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> HEARTHGROVE_BARK = registerWithItem("hearthgrove_bark", HearthgroveLogBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> TARRED_HEARTHGROVE_LOG = registerWithItem("tarred_hearthgrove_log", TarredHearthgroveLogBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> TARRED_HEARTHGROVE_BARK = registerWithItem("tarred_hearthgrove_bark", TarredHearthgroveLogBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> NIBBLETWIG_LOG = registerWithItem("nibbletwig_log", RotatedPillarBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> NIBBLETWIG_BARK = registerWithItem("nibbletwig_bark", RotatedPillarBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> SPIRIT_TREE_LOG = registerWithItem("spirit_tree_log", RotatedPillarBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> SPIRIT_TREE_BARK = registerWithItem("spirit_tree_bark", RotatedPillarBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> SAP_LOG = registerWithItem("sap_log", RotatedPillarBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> SAP_BARK = registerWithItem("sap_bark", RotatedPillarBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> WEEDWOOD_SAPLING = registerWithItem("weedwood_sapling", properties -> new SaplingBlock(BLTreeGrowers.WEEDWOOD, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.GRASS).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> SAP_SAPLING = registerWithItem("sap_sapling", properties -> new SaplingBlock(BLTreeGrowers.SAP, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.GRASS).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> RUBBER_SAPLING = registerWithItem("rubber_sapling", properties -> new SaplingBlock(BLTreeGrowers.RUBBER, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.GRASS).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> HEARTHGROVE_SAPLING = registerWithItem("hearthgrove_sapling", properties -> new SaplingBlock(BLTreeGrowers.HEARTHGROVE, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.GRASS).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> NIBBLETWIG_SAPLING = registerWithItem("nibbletwig_sapling", properties -> new SaplingBlock(BLTreeGrowers.NIBBLETWIG, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.GRASS).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> SPIRIT_TREE_SAPLING = registerWithItem("spirit_tree_sapling", properties -> new SaplingBlock(BLTreeGrowers.SPIRIT_TREE, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.GRASS).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> ROOT_POD = registerWithItem("root_pod", properties -> new SaplingBlock(BLTreeGrowers.ROOT_POD, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.GRASS).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> WEEDWOOD_LEAVES = registerWithItem("weedwood_leaves", SwampLeavesBlock::new, BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never).ignitedByLava().pushReaction(PushReaction.DESTROY).isRedstoneConductor(BlockRegistry::never));
	public static final DeferredBlock<Block> SAP_LEAVES = registerWithItem("sap_leaves", SwampLeavesBlock::new, BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never).ignitedByLava().pushReaction(PushReaction.DESTROY).isRedstoneConductor(BlockRegistry::never));
	public static final DeferredBlock<Block> RUBBER_TREE_LEAVES = registerWithItem("rubber_tree_leaves", SwampLeavesBlock::new, BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never).ignitedByLava().pushReaction(PushReaction.DESTROY).isRedstoneConductor(BlockRegistry::never));
	public static final DeferredBlock<Block> HEARTHGROVE_LEAVES = registerWithItem("hearthgrove_leaves", SwampLeavesBlock::new, BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never).ignitedByLava().pushReaction(PushReaction.DESTROY).isRedstoneConductor(BlockRegistry::never));
	public static final DeferredBlock<Block> NIBBLETWIG_LEAVES = registerWithItem("nibbletwig_leaves", SwampLeavesBlock::new, BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never).ignitedByLava().pushReaction(PushReaction.DESTROY).isRedstoneConductor(BlockRegistry::never));
	public static final DeferredBlock<Block> TOP_SPIRIT_TREE_LEAVES = registerWithItem("top_spirit_tree_leaves", properties -> new SpiritTreeLeavesBlock(SpiritTreeLeavesBlock.LeafType.TOP, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never).ignitedByLava().pushReaction(PushReaction.DESTROY).isRedstoneConductor(BlockRegistry::never));
	public static final DeferredBlock<Block> MIDDLE_SPIRIT_TREE_LEAVES = registerWithItem("middle_spirit_tree_leaves", properties -> new SpiritTreeLeavesBlock(SpiritTreeLeavesBlock.LeafType.MIDDLE, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never).ignitedByLava().pushReaction(PushReaction.DESTROY).isRedstoneConductor(BlockRegistry::never));
	public static final DeferredBlock<Block> BOTTOM_SPIRIT_TREE_LEAVES = registerWithItem("bottom_spirit_tree_leaves", properties -> new SpiritTreeLeavesBlock(SpiritTreeLeavesBlock.LeafType.BOTTOM, properties), BlockBehaviour.Properties.of().ignitedByLava().mapColor(MapColor.PLANT).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().isValidSpawn(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never).ignitedByLava().pushReaction(PushReaction.DESTROY).isRedstoneConductor(BlockRegistry::never));

	public static final DeferredBlock<Block> WEEDWOOD_PLANKS = registerWithItem("weedwood_planks", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> RUBBER_TREE_PLANKS = registerWithItem("rubber_tree_planks", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(1.75F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> GIANT_ROOT_PLANKS = registerWithItem("giant_root_planks", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(1.75F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> HEARTHGROVE_PLANKS = registerWithItem("hearthgrove_planks", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(1.75F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> NIBBLETWIG_PLANKS = registerWithItem("nibbletwig_planks", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(1.75F, 5.0F).sound(SoundType.WOOD));

	public static final DeferredBlock<Block> ANGRY_BETWEENSTONE = registerWithItem("angry_betweenstone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().lightLevel(value -> 12).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> BETWEENSTONE_BRICKS = registerWithItem("betweenstone_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MIRAGE_BETWEENSTONE_BRICKS = registerWithItem("mirage_betweenstone_bricks", properties -> new MirageBlock(BETWEENSTONE_BRICKS.get(), properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> BETWEENSTONE_TILES = registerWithItem("betweenstone_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CHISELED_BETWEENSTONE = registerWithItem("chiseled_betweenstone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CHISELED_CRAGROCK = registerWithItem("chiseled_cragrock", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRACKED_CHISELED_CRAGROCK = registerWithItem("cracked_chiseled_cragrock", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MOSSY_CHISELED_CRAGROCK = registerWithItem("mossy_chiseled_cragrock", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CHISELED_LIMESTONE = registerWithItem("chiseled_limestone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CHISELED_PITSTONE = registerWithItem("chiseled_pitstone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CHISELED_SCABYST_1 = registerWithItem("chiseled_scabyst_1", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CHISELED_SCABYST_2 = registerWithItem("chiseled_scabyst_2", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CHISELED_SCABYST_3 = registerWithItem("chiseled_scabyst_3", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DOTTED_SCABYST_PITSTONE = registerWithItem("dotted_scabyst_pitstone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> HORIZONTAL_SCABYST_PITSTONE = registerWithItem("horizontal_scabyst_pitstone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SCABYST_BRICKS = registerWithItem("scabyst_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRACKED_BETWEENSTONE_BRICKS = registerWithItem("cracked_betweenstone_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRACKED_BETWEENSTONE_TILES = registerWithItem("cracked_betweenstone_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRACKED_LIMESTONE_BRICKS = registerWithItem("cracked_limestone_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRAGROCK_BRICKS = registerWithItem("cragrock_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRACKED_CRAGROCK_BRICKS = registerWithItem("cracked_cragrock_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MOSSY_CRAGROCK_BRICKS = registerWithItem("mossy_cragrock_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRAGROCK_TILES = registerWithItem("cragrock_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRACKED_CRAGROCK_TILES = registerWithItem("cracked_cragrock_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MOSSY_CRAGROCK_TILES = registerWithItem("mossy_cragrock_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> GLOWING_BETWEENSTONE_TILE = registerWithItem("glowing_betweenstone_tile", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().lightLevel(value -> 13).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> INACTIVE_GLOWING_SMOOTH_CRAGROCK = registerWithItem("inactive_glowing_smooth_cragrock", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> GLOWING_SMOOTH_CRAGROCK = registerWithItem("glowing_smooth_cragrock", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().lightLevel(value -> 13).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> LIMESTONE_BRICKS = registerWithItem("limestone_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> LIMESTONE_TILES = registerWithItem("limestone_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MOSSY_BETWEENSTONE_BRICKS = registerWithItem("mossy_betweenstone_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MOSSY_BETWEENSTONE_TILES = registerWithItem("mossy_betweenstone_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MOSSY_LIMESTONE_BRICKS = registerWithItem("mossy_limestone_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MOSSY_SMOOTH_BETWEENSTONE = registerWithItem("mossy_smooth_betweenstone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MUD_BRICKS = registerWithItem("mud_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MUD_BRICK_SHINGLES = registerWithItem("mud_brick_shingles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> RUBBER_BLOCK = registerWithItem("rubber_block", RubberBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.0F).sound(SoundType.SLIME_BLOCK));
	public static final DeferredBlock<Block> PITSTONE_BRICKS = registerWithItem("pitstone_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> PITSTONE_TILES = registerWithItem("pitstone_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> POLISHED_LIMESTONE = registerWithItem("polished_limestone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SMOOTH_BETWEENSTONE = registerWithItem("smooth_betweenstone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SMOOTH_CRAGROCK = registerWithItem("smooth_cragrock", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> OCTINE_BLOCK = registerWithItem("octine_block", OctineBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().lightLevel(value -> 13).strength(1.5F, 10.0F).sound(SoundType.METAL));
	public static final DeferredBlock<Block> SYRMORITE_BLOCK = registerWithItem("syrmorite_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.METAL));
	public static final DeferredBlock<Block> VALONITE_BLOCK = registerWithItem("valonite_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.METAL));
	public static final DeferredBlock<Block> SCABYST_BLOCK = registerWithItem("scabyst_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> WEAK_BETWEENSTONE_TILES = registerWithItem("weak_betweenstone_tiles", CollapsingBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> WEAK_POLISHED_LIMESTONE = registerWithItem("weak_polished_limestone", CollapsingBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> WEAK_MOSSY_BETWEENSTONE_TILES = registerWithItem("weak_mossy_betweenstone_tiles", CollapsingBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> WEAK_SMOOTH_CRAGROCK = registerWithItem("weak_smooth_cragrock", CollapsingBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> GREEN_DENTROTHYST = registerWithItem("green_dentrothyst", properties -> new StainedGlassBlock(DyeColor.GREEN, properties), BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> ORANGE_DENTROTHYST = registerWithItem("orange_dentrothyst", properties -> new StainedGlassBlock(DyeColor.ORANGE, properties), BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> LOOT_POT_1 = registerWithItem("loot_pot_1", properties -> new LootPotBlock(LootPotBlock.POT_1, properties), BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> LOOT_POT_2 = registerWithItem("loot_pot_2", properties -> new LootPotBlock(LootPotBlock.POT_2, properties), BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> LOOT_POT_3 = registerWithItem("loot_pot_3", properties -> new LootPotBlock(LootPotBlock.POT_3, properties), BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> MOB_SPAWNER = registerWithItem("mob_spawner", MobSpawnerBlock::new, BlockBehaviour.Properties.of().noOcclusion().requiresCorrectToolForDrops().strength(10.0F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> TEMPLE_PILLAR = registerWithItem("temple_pillar", TemplePillarBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> BETWEENSTONE_PILLAR = registerWithItem("betweenstone_pillar", TemplePillarBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> PITSTONE_PILLAR = registerWithItem("pitstone_pillar", TemplePillarBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> LIMESTONE_PILLAR = registerWithItem("limestone_pillar", TemplePillarBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRAGROCK_PILLAR = registerWithItem("cragrock_pillar", TemplePillarBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	//TODO tar beast spawner
	public static final DeferredBlock<Block> TAR_LOOT_POT_1 = registerWithItem("tar_loot_pot_1", BuriedLootPotBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> TAR_LOOT_POT_2 = registerWithItem("tar_loot_pot_2", BuriedLootPotBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> TAR_LOOT_POT_3 = registerWithItem("tar_loot_pot_3", BuriedLootPotBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> CRAGROCK_STAIRS = registerWithItem("cragrock_stairs", properties -> new SwampStairBlock(CRAGROCK.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(CRAGROCK.get()));
	public static final DeferredBlock<Block> PITSTONE_STAIRS = registerWithItem("pitstone_stairs", properties -> new SwampStairBlock(PITSTONE.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(PITSTONE.get()));
	public static final DeferredBlock<Block> BETWEENSTONE_STAIRS = registerWithItem("betweenstone_stairs", properties -> new SwampStairBlock(BETWEENSTONE.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(BETWEENSTONE.get()));
	public static final DeferredBlock<Block> BETWEENSTONE_BRICK_STAIRS = registerWithItem("betweenstone_brick_stairs", properties -> new SwampStairBlock(BETWEENSTONE_BRICKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(BETWEENSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> MUD_BRICK_STAIRS = registerWithItem("mud_brick_stairs", properties -> new SwampStairBlock(MUD_BRICKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICKS.get()));
	public static final DeferredBlock<Block> CRAGROCK_BRICK_STAIRS = registerWithItem("cragrock_brick_stairs", properties -> new SwampStairBlock(CRAGROCK_BRICKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(CRAGROCK_BRICKS.get()));
	public static final DeferredBlock<Block> LIMESTONE_BRICK_STAIRS = registerWithItem("limestone_brick_stairs", properties -> new SwampStairBlock(LIMESTONE_BRICKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(LIMESTONE_BRICKS.get()));
	public static final DeferredBlock<Block> PITSTONE_BRICK_STAIRS = registerWithItem("pitstone_brick_stairs", properties -> new SwampStairBlock(PITSTONE_BRICKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(PITSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> LIMESTONE_STAIRS = registerWithItem("limestone_stairs", properties -> new SwampStairBlock(LIMESTONE.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(LIMESTONE.get()));
	public static final DeferredBlock<Block> SMOOTH_BETWEENSTONE_STAIRS = registerWithItem("smooth_betweenstone_stairs", properties -> new SwampStairBlock(SMOOTH_BETWEENSTONE.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMOOTH_BETWEENSTONE.get()));
	public static final DeferredBlock<Block> SMOOTH_CRAGROCK_STAIRS = registerWithItem("smooth_cragrock_stairs", properties -> new SwampStairBlock(SMOOTH_CRAGROCK.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMOOTH_CRAGROCK.get()));
	public static final DeferredBlock<Block> POLISHED_LIMESTONE_STAIRS = registerWithItem("polished_limestone_stairs", properties -> new SwampStairBlock(POLISHED_LIMESTONE.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(POLISHED_LIMESTONE.get()));
	public static final DeferredBlock<Block> MOSSY_BETWEENSTONE_BRICK_STAIRS = registerWithItem("mossy_betweenstone_brick_stairs", properties -> new SwampStairBlock(MOSSY_BETWEENSTONE_BRICKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MOSSY_BETWEENSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> MOSSY_SMOOTH_BETWEENSTONE_STAIRS = registerWithItem("mossy_smooth_betweenstone_stairs", properties -> new SwampStairBlock(MOSSY_SMOOTH_BETWEENSTONE.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MOSSY_SMOOTH_BETWEENSTONE.get()));
	public static final DeferredBlock<Block> CRACKED_BETWEENSTONE_BRICK_STAIRS = registerWithItem("cracked_betweenstone_brick_stairs", properties -> new SwampStairBlock(CRACKED_BETWEENSTONE_BRICKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(CRACKED_BETWEENSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> SCABYST_BRICK_STAIRS = registerWithItem("scabyst_brick_stairs", properties -> new SwampStairBlock(SCABYST_BRICKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SCABYST_BRICKS.get()));
	public static final DeferredBlock<Block> SULFUR_BLOCK = registerWithItem("sulfur_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> TEMPLE_BRICKS = registerWithItem("temple_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SMOOTH_PITSTONE = registerWithItem("smooth_pitstone", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MIRE_CORAL_BLOCK = registerWithItem("mire_coral_block", Block::new, BlockBehaviour.Properties.of().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DEEP_WATER_CORAL_BLOCK = registerWithItem("deep_water_coral_block", Block::new, BlockBehaviour.Properties.of().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLIMY_BONE_BLOCK = registerWithItem("slimy_bone_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> AQUA_MIDDLE_GEM_BLOCK = registerWithItem("aqua_middle_gem_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRIMSON_MIDDLE_GEM_BLOCK = registerWithItem("crimson_middle_gem_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> GREEN_MIDDLE_GEM_BLOCK = registerWithItem("green_middle_gem_block", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> COMPOST_BLOCK = registerWithItem("compost_block", Block::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.AZALEA));
	public static final DeferredBlock<Block> POLISHED_GREEN_DENTROTHYST = registerWithItem("polished_green_dentrothyst", properties -> new StainedGlassBlock(DyeColor.GREEN, properties), BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> POLISHED_ORANGE_DENTROTHYST = registerWithItem("polished_orange_dentrothyst", properties -> new StainedGlassBlock(DyeColor.ORANGE, properties), BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> SILT_GLASS = registerWithItem("silt_glass", TransparentBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> SILT_GLASS_PANE = registerWithItem("silt_glass_pane", SwampBarsBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> LATTICE = registerWithItem("lattice", SwampBarsBlock::new, BlockBehaviour.Properties.of().strength(1.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> FINE_LATTICE = registerWithItem("fine_lattice", SwampBarsBlock::new, BlockBehaviour.Properties.of().strength(1.5F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> FILTERED_SILT_GLASS = registerWithItem("filtered_silt_glass", FilteredSiltGlassBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS).noOcclusion().isValidSpawn(Blocks::never).isRedstoneConductor(BlockRegistry::never).isSuffocating(BlockRegistry::never).isViewBlocking(BlockRegistry::never));
	public static final DeferredBlock<Block> FILTERED_SILT_GLASS_PANE = registerWithItem("filtered_silt_glass_pane", ThickerGlassPaneBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> POLISHED_GREEN_DENTROTHYST_PANE = registerWithItem("polished_green_dentrothyst_pane", SwampBarsBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> POLISHED_ORANGE_DENTROTHYST_PANE = registerWithItem("polished_orange_dentrothyst_pane", SwampBarsBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> CONNECTED_AMATE_PAPER_PANE = registerWithItem("connected_amate_paper_pane", ThickerGlassPaneBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SQUARED_AMATE_PAPER_PANE = registerWithItem("squared_amate_paper_pane", ThickerGlassPaneBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> ROUNDED_AMATE_PAPER_PANE = registerWithItem("rounded_amate_paper_pane", ThickerGlassPaneBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SMOOTH_PITSTONE_STAIRS = registerWithItem("smooth_pitstone_stairs", properties -> new SwampStairBlock(SMOOTH_PITSTONE.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMOOTH_PITSTONE.get()));
	public static final DeferredBlock<Block> SOLID_TAR_STAIRS = registerWithItem("solid_tar_stairs", properties -> new SwampStairBlock(SOLID_TAR.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SOLID_TAR.get()));
	public static final DeferredBlock<Block> TEMPLE_BRICK_STAIRS = registerWithItem("temple_brick_stairs", properties -> new SwampStairBlock(TEMPLE_BRICKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(TEMPLE_BRICKS.get()));
	public static final DeferredBlock<Block> SPIKE_TRAP = registerWithItem("spike_trap", properties -> new SpikeTrapBlock(false, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 2000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> WEEDWOOD_STAIRS = registerWithItem("weedwood_stairs", properties -> new SwampStairBlock(WEEDWOOD_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_PLANKS.get()));
	public static final DeferredBlock<Block> RUBBER_TREE_STAIRS = registerWithItem("rubber_tree_stairs", properties -> new SwampStairBlock(RUBBER_TREE_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(RUBBER_TREE_PLANKS.get()));
	public static final DeferredBlock<Block> GIANT_ROOT_STAIRS = registerWithItem("giant_root_stairs", properties -> new SwampStairBlock(GIANT_ROOT_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(GIANT_ROOT_PLANKS.get()));
	public static final DeferredBlock<Block> HEARTHGROVE_STAIRS = registerWithItem("hearthgrove_stairs", properties -> new SwampStairBlock(HEARTHGROVE_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(HEARTHGROVE_PLANKS.get()));
	public static final DeferredBlock<Block> NIBBLETWIG_STAIRS = registerWithItem("nibbletwig_stairs", properties -> new SwampStairBlock(NIBBLETWIG_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(NIBBLETWIG_PLANKS.get()));
	public static final DeferredBlock<Block> POSSESSED_BLOCK = registerWithItem("possessed_block", PossessedBlock::new, BlockBehaviour.Properties.of().strength(10.0F, 2000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> ITEM_CAGE = registerWithItem("item_cage", ItemCageBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 12).noOcclusion().strength(10.0F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> ITEM_SHELF = registerWithItem("item_shelf", ItemShelfBlock::new, BlockBehaviour.Properties.of().noOcclusion().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> THATCH = registerWithItem("thatch", Block::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.AZALEA));
	public static final DeferredBlock<Block> CRAGROCK_SLAB = registerWithItem("cragrock_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(CRAGROCK.get()));
	public static final DeferredBlock<Block> PITSTONE_SLAB = registerWithItem("pitstone_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(PITSTONE.get()));
	public static final DeferredBlock<Block> BETWEENSTONE_SLAB = registerWithItem("betweenstone_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(BETWEENSTONE.get()));
	public static final DeferredBlock<Block> SMOOTH_PITSTONE_SLAB = registerWithItem("smooth_pitstone_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMOOTH_PITSTONE.get()));
	public static final DeferredBlock<Block> SOLID_TAR_SLAB = registerWithItem("solid_tar_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SOLID_TAR.get()));
	public static final DeferredBlock<Block> TEMPLE_BRICK_SLAB = registerWithItem("temple_brick_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(TEMPLE_BRICKS.get()));
	public static final DeferredBlock<Block> BETWEENSTONE_BRICK_SLAB = registerWithItem("betweenstone_brick_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(BETWEENSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> MUD_BRICK_SLAB = registerWithItem("mud_brick_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICKS.get()));
	public static final DeferredBlock<Block> CRAGROCK_BRICK_SLAB = registerWithItem("cragrock_brick_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(CRAGROCK_BRICKS.get()));
	public static final DeferredBlock<Block> LIMESTONE_BRICK_SLAB = registerWithItem("limestone_brick_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(LIMESTONE_BRICKS.get()));
	public static final DeferredBlock<Block> LIMESTONE_SLAB = registerWithItem("limestone_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(LIMESTONE.get()));
	public static final DeferredBlock<Block> SMOOTH_BETWEENSTONE_SLAB = registerWithItem("smooth_betweenstone_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMOOTH_BETWEENSTONE.get()));
	public static final DeferredBlock<Block> SMOOTH_CRAGROCK_SLAB = registerWithItem("smooth_cragrock_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMOOTH_CRAGROCK.get()));
	public static final DeferredBlock<Block> POLISHED_LIMESTONE_SLAB = registerWithItem("polished_limestone_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(POLISHED_LIMESTONE.get()));
	public static final DeferredBlock<Block> PITSTONE_BRICK_SLAB = registerWithItem("pitstone_brick_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(PITSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> MOSSY_BETWEENSTONE_BRICK_SLAB = registerWithItem("mossy_betweenstone_brick_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MOSSY_BETWEENSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> MOSSY_SMOOTH_BETWEENSTONE_SLAB = registerWithItem("mossy_smooth_betweenstone_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MOSSY_SMOOTH_BETWEENSTONE.get()));
	public static final DeferredBlock<Block> CRACKED_BETWEENSTONE_BRICK_SLAB = registerWithItem("cracked_betweenstone_brick_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(CRACKED_BETWEENSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> WEEDWOOD_SLAB = registerWithItem("weedwood_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_PLANKS.get()));
	public static final DeferredBlock<Block> RUBBER_TREE_SLAB = registerWithItem("rubber_tree_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(RUBBER_TREE_PLANKS.get()));
	public static final DeferredBlock<Block> GIANT_ROOT_SLAB = registerWithItem("giant_root_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(GIANT_ROOT_PLANKS.get()));
	public static final DeferredBlock<Block> HEARTHGROVE_SLAB = registerWithItem("hearthgrove_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(HEARTHGROVE_PLANKS.get()));
	public static final DeferredBlock<Block> NIBBLETWIG_SLAB = registerWithItem("nibbletwig_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(NIBBLETWIG_PLANKS.get()));
	public static final DeferredBlock<Block> MUD_BRICK_SHINGLE_SLAB = registerWithItem("mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> MUD_BRICK_SHINGLE_STAIRS = registerWithItem("mud_brick_shingle_stairs", properties -> new SwampStairBlock(MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> MUD_BRICK_SHINGLE_WALL = registerWithItem("mud_brick_shingle_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> DULL_LAVENDER_FILTERED_SILT_GLASS = registerWithItem("dull_lavender_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.DULL_LAVENDER, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> MAROON_FILTERED_SILT_GLASS = registerWithItem("maroon_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.MAROON, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> SHADOW_GREEN_FILTERED_SILT_GLASS = registerWithItem("shadow_green_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.SHADOW_GREEN, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> CAMELOT_MAGENTA_FILTERED_SILT_GLASS = registerWithItem("camelot_magenta_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.CAMELOT_MAGENTA, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> SAFFRON_FILTERED_SILT_GLASS = registerWithItem("saffron_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.SAFFRON, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> CARIBBEAN_GREEN_FILTERED_SILT_GLASS = registerWithItem("caribbean_green_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.CARIBBEAN_GREEN, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> VIVID_TANGERINE_FILTERED_SILT_GLASS = registerWithItem("vivid_tangerine_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.VIVID_TANGERINE, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> CHAMPAGNE_FILTERED_SILT_GLASS = registerWithItem("champagne_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.CHAMPAGNE, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> RAISIN_BLACK_FILTERED_SILT_GLASS = registerWithItem("raisin_black_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.RAISIN_BLACK, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> SUSHI_GREEN_FILTERED_SILT_GLASS = registerWithItem("sushi_green_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.SUSHI_GREEN, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> ELM_CYAN_FILTERED_SILT_GLASS = registerWithItem("elm_cyan_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.ELM_CYAN, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> CADMIUM_GREEN_FILTERED_SILT_GLASS = registerWithItem("cadmium_green_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.CADMIUM_GREEN, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> LAVENDER_BLUE_FILTERED_SILT_GLASS = registerWithItem("lavender_blue_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.LAVENDER_BLUE, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> BROWN_RUST_FILTERED_SILT_GLASS = registerWithItem("brown_rust_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.BROWN_RUST, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> MIDNIGHT_PURPLE_FILTERED_SILT_GLASS = registerWithItem("midnight_purple_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.MIDNIGHT_PURPLE, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> PEWTER_GREY_FILTERED_SILT_GLASS = registerWithItem("pewter_grey_filtered_silt_glass", properties -> new StainedFilteredSiltGlassBlock(BLDyeColor.PEWTER_GREY, properties), BlockBehaviour.Properties.ofFullCopy(FILTERED_SILT_GLASS.get()));
	public static final DeferredBlock<Block> DULL_LAVENDER_MUD_BRICK_SHINGLES = registerWithItem("dull_lavender_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> MAROON_MUD_BRICK_SHINGLES = registerWithItem("maroon_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> SHADOW_GREEN_MUD_BRICK_SHINGLES = registerWithItem("shadow_green_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> CAMELOT_MAGENTA_MUD_BRICK_SHINGLES = registerWithItem("camelot_magenta_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> SAFFRON_MUD_BRICK_SHINGLES = registerWithItem("saffron_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> CARIBBEAN_GREEN_MUD_BRICK_SHINGLES = registerWithItem("caribbean_green_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> VIVID_TANGERINE_MUD_BRICK_SHINGLES = registerWithItem("vivid_tangerine_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> CHAMPAGNE_MUD_BRICK_SHINGLES = registerWithItem("champagne_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> RAISIN_BLACK_MUD_BRICK_SHINGLES = registerWithItem("raisin_black_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> SUSHI_GREEN_MUD_BRICK_SHINGLES = registerWithItem("sushi_green_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> ELM_CYAN_MUD_BRICK_SHINGLES = registerWithItem("elm_cyan_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> CADMIUM_GREEN_MUD_BRICK_SHINGLES = registerWithItem("cadmium_green_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> LAVENDER_BLUE_MUD_BRICK_SHINGLES = registerWithItem("lavender_blue_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> BROWN_RUST_MUD_BRICK_SHINGLES = registerWithItem("brown_rust_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> MIDNIGHT_PURPLE_MUD_BRICK_SHINGLES = registerWithItem("midnight_purple_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> PEWTER_GREY_MUD_BRICK_SHINGLES = registerWithItem("pewter_grey_mud_brick_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLES.get()));
	public static final DeferredBlock<Block> DULL_LAVENDER_MUD_BRICK_SHINGLE_SLAB = registerWithItem("dull_lavender_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> MAROON_MUD_BRICK_SHINGLE_SLAB = registerWithItem("maroon_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> SHADOW_GREEN_MUD_BRICK_SHINGLE_SLAB = registerWithItem("shadow_green_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> CAMELOT_MAGENTA_MUD_BRICK_SHINGLE_SLAB = registerWithItem("camelot_magenta_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> SAFFRON_MUD_BRICK_SHINGLE_SLAB = registerWithItem("saffron_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> CARIBBEAN_GREEN_MUD_BRICK_SHINGLE_SLAB = registerWithItem("caribbean_green_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> VIVID_TANGERINE_MUD_BRICK_SHINGLE_SLAB = registerWithItem("vivid_tangerine_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> CHAMPAGNE_MUD_BRICK_SHINGLE_SLAB = registerWithItem("champagne_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> RAISIN_BLACK_MUD_BRICK_SHINGLE_SLAB = registerWithItem("raisin_black_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> SUSHI_GREEN_MUD_BRICK_SHINGLE_SLAB = registerWithItem("sushi_green_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> ELM_CYAN_MUD_BRICK_SHINGLE_SLAB = registerWithItem("elm_cyan_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> CADMIUM_GREEN_MUD_BRICK_SHINGLE_SLAB = registerWithItem("cadmium_green_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> LAVENDER_BLUE_MUD_BRICK_SHINGLE_SLAB = registerWithItem("lavender_blue_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> BROWN_RUST_MUD_BRICK_SHINGLE_SLAB = registerWithItem("brown_rust_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> MIDNIGHT_PURPLE_MUD_BRICK_SHINGLE_SLAB = registerWithItem("midnight_purple_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> PEWTER_GREY_MUD_BRICK_SHINGLE_SLAB = registerWithItem("pewter_grey_mud_brick_shingle_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_SLAB.get()));
	public static final DeferredBlock<Block> DULL_LAVENDER_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("dull_lavender_mud_brick_shingle_stairs", properties -> new SwampStairBlock(DULL_LAVENDER_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> MAROON_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("maroon_mud_brick_shingle_stairs", properties -> new SwampStairBlock(MAROON_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> SHADOW_GREEN_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("shadow_green_mud_brick_shingle_stairs", properties -> new SwampStairBlock(SHADOW_GREEN_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> CAMELOT_MAGENTA_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("camelot_magenta_mud_brick_shingle_stairs", properties -> new SwampStairBlock(CAMELOT_MAGENTA_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> SAFFRON_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("saffron_mud_brick_shingle_stairs", properties -> new SwampStairBlock(SAFFRON_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> CARIBBEAN_GREEN_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("caribbean_green_mud_brick_shingle_stairs", properties -> new SwampStairBlock(CARIBBEAN_GREEN_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> VIVID_TANGERINE_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("vivid_tangerine_mud_brick_shingle_stairs", properties -> new SwampStairBlock(VIVID_TANGERINE_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> CHAMPAGNE_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("champagne_mud_brick_shingle_stairs", properties -> new SwampStairBlock(CHAMPAGNE_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> RAISIN_BLACK_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("raisin_black_mud_brick_shingle_stairs", properties -> new SwampStairBlock(RAISIN_BLACK_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> SUSHI_GREEN_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("sushi_green_mud_brick_shingle_stairs", properties -> new SwampStairBlock(SUSHI_GREEN_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> ELM_CYAN_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("elm_cyan_mud_brick_shingle_stairs", properties -> new SwampStairBlock(ELM_CYAN_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> CADMIUM_GREEN_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("cadmium_green_mud_brick_shingle_stairs", properties -> new SwampStairBlock(CADMIUM_GREEN_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> LAVENDER_BLUE_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("lavender_blue_mud_brick_shingle_stairs", properties -> new SwampStairBlock(LAVENDER_BLUE_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> BROWN_RUST_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("brown_rust_mud_brick_shingle_stairs", properties -> new SwampStairBlock(BROWN_RUST_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> MIDNIGHT_PURPLE_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("midnight_purple_mud_brick_shingle_stairs", properties -> new SwampStairBlock(MIDNIGHT_PURPLE_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> PEWTER_GREY_MUD_BRICK_SHINGLE_STAIRS = registerWithItem("pewter_grey_mud_brick_shingle_stairs", properties -> new SwampStairBlock(PEWTER_GREY_MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(MUD_BRICK_SHINGLE_STAIRS.get()));
	public static final DeferredBlock<Block> THATCH_SLAB = registerWithItem("thatch_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(THATCH.get()));
	public static final DeferredBlock<Block> SCABYST_BRICK_SLAB = registerWithItem("scabyst_brick_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SCABYST_BRICKS.get()));
	public static final DeferredBlock<Block> PITSTONE_WALL = registerWithItem("pitstone_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(PITSTONE.get()));
	public static final DeferredBlock<Block> BETWEENSTONE_WALL = registerWithItem("betweenstone_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(BETWEENSTONE.get()));
	public static final DeferredBlock<Block> SOLID_TAR_WALL = registerWithItem("solid_tar_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(SOLID_TAR.get()));
	public static final DeferredBlock<Block> TEMPLE_BRICK_WALL = registerWithItem("temple_brick_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(TEMPLE_BRICKS.get()));
	public static final DeferredBlock<Block> SMOOTH_PITSTONE_WALL = registerWithItem("smooth_pitstone_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMOOTH_PITSTONE.get()));
	public static final DeferredBlock<Block> BETWEENSTONE_BRICK_WALL = registerWithItem("betweenstone_brick_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(BETWEENSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> MUD_BRICK_WALL = registerWithItem("mud_brick_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(MUD_BRICKS.get()));
	public static final DeferredBlock<Block> CRAGROCK_WALL = registerWithItem("cragrock_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(CRAGROCK.get()));
	public static final DeferredBlock<Block> CRAGROCK_BRICK_WALL = registerWithItem("cragrock_brick_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(CRAGROCK_BRICKS.get()));
	public static final DeferredBlock<Block> LIMESTONE_BRICK_WALL = registerWithItem("limestone_brick_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(LIMESTONE_BRICKS.get()));
	public static final DeferredBlock<Block> LIMESTONE_WALL = registerWithItem("limestone_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(LIMESTONE.get()));
	public static final DeferredBlock<Block> POLISHED_LIMESTONE_WALL = registerWithItem("polished_limestone_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(POLISHED_LIMESTONE.get()));
	public static final DeferredBlock<Block> PITSTONE_BRICK_WALL = registerWithItem("pitstone_brick_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(PITSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> SMOOTH_BETWEENSTONE_WALL = registerWithItem("smooth_betweenstone_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMOOTH_BETWEENSTONE.get()));
	public static final DeferredBlock<Block> SMOOTH_CRAGROCK_WALL = registerWithItem("smooth_cragrock_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMOOTH_CRAGROCK.get()));
	public static final DeferredBlock<Block> MOSSY_BETWEENSTONE_BRICK_WALL = registerWithItem("mossy_betweenstone_brick_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(MOSSY_BETWEENSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> MOSSY_SMOOTH_BETWEENSTONE_WALL = registerWithItem("mossy_smooth_betweenstone_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(MOSSY_SMOOTH_BETWEENSTONE.get()));
	public static final DeferredBlock<Block> CRACKED_BETWEENSTONE_BRICK_WALL = registerWithItem("cracked_betweenstone_brick_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(CRACKED_BETWEENSTONE_BRICKS.get()));
	public static final DeferredBlock<Block> SCABYST_BRICK_WALL = registerWithItem("scabyst_brick_wall", SwampWallBlock::new, BlockBehaviour.Properties.ofFullCopy(SCABYST_BRICKS.get()));
	public static final DeferredBlock<Block> WEEDWOOD_FENCE = registerWithItem("weedwood_fence", SwampFenceBlock::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WEEDWOOD_LOG_FENCE = registerWithItem("weedwood_log_fence", SwampFenceBlock::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> RUBBER_TREE_FENCE = registerWithItem("rubber_tree_fence", SwampFenceBlock::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> GIANT_ROOT_FENCE = registerWithItem("giant_root_fence", SwampFenceBlock::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> HEARTHGROVE_FENCE = registerWithItem("hearthgrove_fence", SwampFenceBlock::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> NIBBLETWIG_FENCE = registerWithItem("nibbletwig_fence", SwampFenceBlock::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WEEDWOOD_FENCE_GATE = registerWithItem("weedwood_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.WEEDWOOD_WOOD_TYPE, properties), BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WEEDWOOD_LOG_FENCE_GATE = registerWithItem("weedwood_log_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.WEEDWOOD_WOOD_TYPE, properties), BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> RUBBER_TREE_FENCE_GATE = registerWithItem("rubber_tree_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.RUBBER_TREE_WOOD_TYPE, properties), BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> GIANT_ROOT_FENCE_GATE = registerWithItem("giant_root_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.GIANT_ROOT_WOOD_TYPE, properties), BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> HEARTHGROVE_FENCE_GATE = registerWithItem("hearthgrove_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.HEARTHGROVE_WOOD_TYPE, properties), BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> NIBBLETWIG_FENCE_GATE = registerWithItem("nibbletwig_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.NIBBLETWIG_WOOD_TYPE, properties), BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WEEDWOOD_PRESSURE_PLATE = registerWithItem("weedwood_pressure_plate", properties -> new PressurePlateBlock(BLWoodTypes.WEEDWOOD_BLOCK_SET, properties), BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> BETWEENSTONE_PRESSURE_PLATE = registerWithItem("betweenstone_pressure_plate", properties -> new PressurePlateBlock(BLWoodTypes.BETWEENSTONE, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SYRMORITE_PRESSURE_PLATE = registerWithItem("syrmorite_pressure_plate", properties -> new SyrmoritePressurePlateBlock(BLWoodTypes.SYRMORITE, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.METAL));
	public static final DeferredBlock<Block> WEEDWOOD_BUTTON = registerWithItem("weedwood_button", properties -> new ButtonBlock(BLWoodTypes.WEEDWOOD_BLOCK_SET, 30, properties), BlockBehaviour.Properties.of().ignitedByLava().strength(0.5F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> BETWEENSTONE_BUTTON = registerWithItem("betweenstone_button", properties -> new ButtonBlock(BLWoodTypes.BETWEENSTONE, 20, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(0.5F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> WEEDWOOD_LADDER = registerWithItem("weedwood_ladder", WeedwoodLadderBlock::new, BlockBehaviour.Properties.of().forceSolidOff().strength(0.4F).sound(SoundType.LADDER).noOcclusion().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> WEEDWOOD_LEVER = registerWithItem("weedwood_lever", LeverBlock::new, BlockBehaviour.Properties.of().ignitedByLava().noCollission().strength(0.5F).sound(SoundType.WOOD).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> MUD_LOOT_POT_1 = registerWithItem("mud_loot_pot_1", BuriedLootPotBlock::new, BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> MUD_LOOT_POT_2 = registerWithItem("mud_loot_pot_2", BuriedLootPotBlock::new, BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> MUD_LOOT_POT_3 = registerWithItem("mud_loot_pot_3", BuriedLootPotBlock::new, BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> WORM_PILLAR = registerWithItem("worm_pillar", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_1 = registerWithItem("sludgy_worm_pillar_1", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_2 = registerWithItem("sludgy_worm_pillar_2", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_3 = registerWithItem("sludgy_worm_pillar_3", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.98F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_4 = registerWithItem("sludgy_worm_pillar_4", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.98F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_5 = registerWithItem("sludgy_worm_pillar_5", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.95F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> WORM_PILLAR_TOP = registerWithItem("worm_pillar_top", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_TOP_1 = registerWithItem("sludgy_worm_pillar_top_1", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_TOP_2 = registerWithItem("sludgy_worm_pillar_top_2", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_TOP_3 = registerWithItem("sludgy_worm_pillar_top_3", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.98F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_TOP_4 = registerWithItem("sludgy_worm_pillar_top_4", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.98F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_WORM_PILLAR_TOP_5 = registerWithItem("sludgy_worm_pillar_top_5", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.95F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> COMPACTED_MUD = registerWithItem("compacted_mud", CompactMudBlock::new, BlockBehaviour.Properties.of().strength(1.0F, 10.0F).sound(SoundType.PACKED_MUD));
	public static final DeferredBlock<Block> MUD_TILES = registerWithItem("mud_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DECAYED_MUD_TILES = registerWithItem("decayed_mud_tiles", DecayedMudTilesBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.98F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRACKED_MUD_TILES = registerWithItem("cracked_mud_tiles", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRACKED_DECAYED_MUD_TILES = registerWithItem("cracked_decayed_mud_tiles", DecayedMudTilesBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.98F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> PUFFSHROOM = registerWithItem("puffshroom", PuffshroomBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(8.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CARVED_MUD_BRICKS = registerWithItem("carved_mud_bricks", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_CARVED_MUD_BRICKS_1 = registerWithItem("sludgy_carved_mud_bricks_1", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_CARVED_MUD_BRICKS_2 = registerWithItem("sludgy_carved_mud_bricks_2", Block::new, BlockBehaviour.Properties.of().friction(0.99F).requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_CARVED_MUD_BRICKS_3 = registerWithItem("sludgy_carved_mud_bricks_3", Block::new, BlockBehaviour.Properties.of().friction(0.98F).requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_CARVED_MUD_BRICKS_4 = registerWithItem("sludgy_carved_mud_bricks_4", Block::new, BlockBehaviour.Properties.of().friction(0.98F).requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CARVED_MUD_BRICK_EDGE = registerWithItem("carved_mud_brick_edge", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_CARVED_MUD_BRICK_EDGE_1 = registerWithItem("sludgy_carved_mud_brick_edge_1", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_CARVED_MUD_BRICK_EDGE_2 = registerWithItem("sludgy_carved_mud_brick_edge_2", Block::new, BlockBehaviour.Properties.of().friction(0.99F).requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_CARVED_MUD_BRICK_EDGE_3 = registerWithItem("sludgy_carved_mud_brick_edge_3", Block::new, BlockBehaviour.Properties.of().friction(0.98F).requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_CARVED_MUD_BRICK_EDGE_4 = registerWithItem("sludgy_carved_mud_brick_edge_4", Block::new, BlockBehaviour.Properties.of().friction(0.98F).requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICKS_1 = registerWithItem("sludgy_mud_bricks_1", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICKS_2 = registerWithItem("sludgy_mud_bricks_2", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.99F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICKS_3 = registerWithItem("sludgy_mud_bricks_3", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.98F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICKS_4 = registerWithItem("sludgy_mud_bricks_4", Block::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().friction(0.98F).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICK_STAIRS_1 = registerWithItem("sludgy_mud_brick_stairs_1", properties -> new SwampStairBlock(SLUDGY_MUD_BRICKS_1.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SLUDGY_MUD_BRICKS_1.get()));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICK_STAIRS_2 = registerWithItem("sludgy_mud_brick_stairs_2", properties -> new SwampStairBlock(SLUDGY_MUD_BRICKS_2.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SLUDGY_MUD_BRICKS_2.get()));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICK_STAIRS_3 = registerWithItem("sludgy_mud_brick_stairs_3", properties -> new SwampStairBlock(SLUDGY_MUD_BRICKS_3.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SLUDGY_MUD_BRICKS_3.get()));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICK_STAIRS_4 = registerWithItem("sludgy_mud_brick_stairs_4", properties -> new SwampStairBlock(SLUDGY_MUD_BRICKS_4.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SLUDGY_MUD_BRICKS_4.get()));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICK_SLAB_1 = registerWithItem("sludgy_mud_brick_slab_1", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SLUDGY_MUD_BRICKS_1.get()));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICK_SLAB_2 = registerWithItem("sludgy_mud_brick_slab_2", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SLUDGY_MUD_BRICKS_2.get()));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICK_SLAB_3 = registerWithItem("sludgy_mud_brick_slab_3", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SLUDGY_MUD_BRICKS_3.get()));
	public static final DeferredBlock<Block> SLUDGY_MUD_BRICK_SLAB_4 = registerWithItem("sludgy_mud_brick_slab_4", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SLUDGY_MUD_BRICKS_4.get()));
	public static final DeferredBlock<Block> EDGE_SHROOM = registerWithItem("edge_shroom", EdgePlantBlock::new, BlockBehaviour.Properties.of().ignitedByLava().instabreak().noCollission().noOcclusion().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> EDGE_MOSS = registerWithItem("edge_moss", EdgePlantBlock::new, BlockBehaviour.Properties.of().ignitedByLava().instabreak().noCollission().noOcclusion().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> EDGE_LEAF = registerWithItem("edge_leaf", EdgePlantBlock::new, BlockBehaviour.Properties.of().ignitedByLava().instabreak().noCollission().noOcclusion().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BEAM_ORIGIN = register("beam_origin", BeamOriginBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().pushReaction(PushReaction.BLOCK).strength(10.0F, 2000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> BEAM_RELAY = registerWithItem("beam_relay", BeamRelayBlock::new, BlockBehaviour.Properties.of().noOcclusion().requiresCorrectToolForDrops().pushReaction(PushReaction.BLOCK).strength(10.0F, 2000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> BEAM_TUBE = registerWithItem("beam_tube", RotatedPillarBlock::new, BlockBehaviour.Properties.of().pushReaction(PushReaction.BLOCK).requiresCorrectToolForDrops().strength(10.0F, 2000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> BEAM_LENS_SUPPORT = registerWithItem("beam_lens_support", BeamSupportBlock::new, BlockBehaviour.Properties.of().noOcclusion().requiresCorrectToolForDrops().pushReaction(PushReaction.BLOCK).strength(10.0F, 2000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DIAGONAL_ENERGY_BARRIER = register("diagonal_energy_barrier", DiagonalEnergyBarrierBlock::new, BlockBehaviour.Properties.of().noLootTable().pushReaction(PushReaction.BLOCK).strength(-1.0F, 6000000.0F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> MUD_BRICK_ALCOVE = registerWithItem("mud_brick_alcove", MudBrickAlcoveBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().pushReaction(PushReaction.BLOCK).strength(10.0F, 2000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> LOOT_URN_1 = registerWithItem("loot_urn_1", properties -> new LootUrnBlock(LootUrnBlock.URN_1, properties), BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> LOOT_URN_2 = registerWithItem("loot_urn_2", properties -> new LootUrnBlock(LootUrnBlock.URN_2, properties), BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> LOOT_URN_3 = registerWithItem("loot_urn_3", properties -> new LootUrnBlock(LootUrnBlock.URN_3, properties), BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.DECORATED_POT_CRACKED));
	public static final DeferredBlock<Block> DUNGEON_DOOR_RUNES = registerWithItem("dungeon_door_runes", properties -> new DungeonDoorRunesBlock(false, false, properties), BlockBehaviour.Properties.of().noLootTable().strength(-1.0F, 6000000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MIMIC_DUNGEON_DOOR_RUNES = registerWithItem("mimic_dungeon_door_runes", properties -> new DungeonDoorRunesBlock(true, true, properties), BlockBehaviour.Properties.of().noLootTable().strength(-1.0F, 6000000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CRAWLER_DUNGEON_DOOR_RUNES = registerWithItem("crawler_dungeon_door_runes", properties -> new DungeonDoorRunesBlock(true, false, properties), BlockBehaviour.Properties.of().noLootTable().strength(-1.0F, 6000000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DUNGEON_DOOR_COMBINATION = registerWithItem("dungeon_door_combination", DungeonDoorCombinationBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(0.4F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CLIMBABLE_MUD_BRICKS = registerWithItem("climbable_mud_bricks", ClimbableMudBricksBlock::new, BlockBehaviour.Properties.of().noOcclusion().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> BROKEN_MUD_TILES = registerWithItem("broken_mud_tiles", BrokenMudTilesBlock::new, BlockBehaviour.Properties.of().pushReaction(PushReaction.DESTROY).strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DUNGEON_WALL_CANDLE = registerWithItem("dungeon_wall_candle", DungeonWallCandleBlock::new, BlockBehaviour.Properties.of().lightLevel(state -> state.getValue(DungeonWallCandleBlock.LIT) ? 13 : 0).noCollission().noOcclusion().pushReaction(PushReaction.DESTROY).strength(0.1F).sound(SoundType.CANDLE));
	public static final DeferredBlock<Block> WOODEN_SUPPORT_BEAM_1 = registerWithItem("wooden_support_beam_1", WoodenSupportBeamBlock::new, BlockBehaviour.Properties.of().ignitedByLava().noCollission().noOcclusion().pushReaction(PushReaction.DESTROY).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WOODEN_SUPPORT_BEAM_2 = registerWithItem("wooden_support_beam_2", WoodenSupportBeamBlock::new, BlockBehaviour.Properties.of().ignitedByLava().noCollission().noOcclusion().pushReaction(PushReaction.DESTROY).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WOODEN_SUPPORT_BEAM_3 = registerWithItem("wooden_support_beam_3", WoodenSupportBeamBlock::new, BlockBehaviour.Properties.of().ignitedByLava().noCollission().noOcclusion().pushReaction(PushReaction.DESTROY).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_1 = registerWithItem("carved_rotten_bark_1", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_2 = registerWithItem("carved_rotten_bark_2", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_3 = registerWithItem("carved_rotten_bark_3", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_4 = registerWithItem("carved_rotten_bark_4", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_5 = registerWithItem("carved_rotten_bark_5", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_6 = registerWithItem("carved_rotten_bark_6", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_7 = registerWithItem("carved_rotten_bark_7", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_8 = registerWithItem("carved_rotten_bark_8", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_9 = registerWithItem("carved_rotten_bark_9", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_10 = registerWithItem("carved_rotten_bark_10", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_11 = registerWithItem("carved_rotten_bark_11", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_12 = registerWithItem("carved_rotten_bark_12", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_13 = registerWithItem("carved_rotten_bark_13", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_14 = registerWithItem("carved_rotten_bark_14", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_15 = registerWithItem("carved_rotten_bark_15", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CARVED_ROTTEN_BARK_16 = registerWithItem("carved_rotten_bark_16", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> MUD_ENERGY_BARRIER = register("mud_energy_barrier", Block::new, BlockBehaviour.Properties.of().lightLevel(value -> 12).noLootTable().strength(-1.0F, 6000000.0F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> MUD_BRICK_SPIKE_TRAP = registerWithItem("mud_brick_spike_trap", properties -> new SpikeTrapBlock(true, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 2000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MUD_TILES_SPIKE_TRAP = registerWithItem("mud_tile_spike_trap", properties -> new SpikeTrapBlock(false, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 2000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> COMPACTED_MUD_SLOPE = registerWithItem("compacted_mud_slope", properties -> new SwampStairBlock(COMPACTED_MUD.get().defaultBlockState(), properties), BlockBehaviour.Properties.of().strength(1.0F, 10.0F).sound(SoundType.PACKED_MUD));
	public static final DeferredBlock<Block> COMPACTED_MUD_SLAB = registerWithItem("compacted_mud_slab", SwampSlabBlock::new, BlockBehaviour.Properties.of().strength(1.5F, 10.0F).sound(SoundType.PACKED_MUD));
	public static final DeferredBlock<Block> COMPACTED_MUD_MIRAGE = registerWithItem("compacted_mud_mirage", properties -> new MirageBlock(COMPACTED_MUD.get(), properties), BlockBehaviour.Properties.of().strength(1.5F, 10.0F).sound(SoundType.PACKED_MUD));
	public static final DeferredBlock<Block> ROTTEN_PLANKS = registerWithItem("rotten_planks", Block::new, BlockBehaviour.Properties.of().ignitedByLava().strength(1.5F, 4.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> ROTTEN_SLAB = registerWithItem("rotten_slab", SwampSlabBlock::new, BlockBehaviour.Properties.of().ignitedByLava().strength(1.5F, 4.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> ROTTEN_STAIRS = registerWithItem("rotten_stairs", properties -> new SwampStairBlock(ROTTEN_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.of().ignitedByLava().strength(1.5F, 4.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> ROTTEN_FENCE = registerWithItem("rotten_fence", SwampFenceBlock::new, BlockBehaviour.Properties.of().ignitedByLava().strength(1.5F, 4.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> ROTTEN_FENCE_GATE = registerWithItem("rotten_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.ROTTEN_WOOD_TYPE, properties), BlockBehaviour.Properties.of().ignitedByLava().strength(1.5F, 4.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> BRAZIER = registerWithItem("brazier", BrazierBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> DECAY_PIT_GROUND_CHAIN = register("decay_pit_ground_chain", DecayPitGroundChainBlock::new, BlockBehaviour.Properties.of().noLootTable().strength(-1.0F, 6000000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DECAY_PIT_HANGING_CHAIN = register("decay_pit_hanging_chain", DecayPitHangingChainBlock::new, BlockBehaviour.Properties.of().noLootTable().strength(-1.0F, 6000000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DECAY_PIT_CONTROL = register("decay_pit_control", DecayPitControlBlock::new, BlockBehaviour.Properties.of().noLootTable().strength(-1.0F, 6000000.0F).sound(SoundType.STONE));
	//TODO invisible block variants for the decay pit control
	//perhaps consider making them all 1 block with variants that cycle the hitbox
	public static final DeferredBlock<Block> WHITE_PRESENT = registerWithItem("white_present", properties -> new PresentBlock(DyeColor.WHITE, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> LIGHT_GRAY_PRESENT = registerWithItem("light_gray_present", properties -> new PresentBlock(DyeColor.LIGHT_GRAY, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> GRAY_PRESENT = registerWithItem("gray_present", properties -> new PresentBlock(DyeColor.GRAY, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> BLACK_PRESENT = registerWithItem("black_present", properties -> new PresentBlock(DyeColor.BLACK, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> RED_PRESENT = registerWithItem("red_present", properties -> new PresentBlock(DyeColor.RED, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> ORANGE_PRESENT = registerWithItem("orange_present", properties -> new PresentBlock(DyeColor.ORANGE, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> YELLOW_PRESENT = registerWithItem("yellow_present", properties -> new PresentBlock(DyeColor.YELLOW, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> GREEN_PRESENT = registerWithItem("green_present", properties -> new PresentBlock(DyeColor.GREEN, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> LIME_PRESENT = registerWithItem("lime_present", properties -> new PresentBlock(DyeColor.LIME, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> BLUE_PRESENT = registerWithItem("blue_present", properties -> new PresentBlock(DyeColor.BLUE, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> CYAN_PRESENT = registerWithItem("cyan_present", properties -> new PresentBlock(DyeColor.CYAN, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> LIGHT_BLUE_PRESENT = registerWithItem("light_blue_present", properties -> new PresentBlock(DyeColor.LIGHT_BLUE, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> PURPLE_PRESENT = registerWithItem("purple_present", properties -> new PresentBlock(DyeColor.PURPLE, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> MAGENTA_PRESENT = registerWithItem("magenta_present", properties -> new PresentBlock(DyeColor.MAGENTA, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> PINK_PRESENT = registerWithItem("pink_present", properties -> new PresentBlock(DyeColor.PINK, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> BROWN_PRESENT = registerWithItem("brown_present", properties -> new PresentBlock(DyeColor.BROWN, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.8F).sound(SoundType.WOOL));

	//plants
	public static final DeferredBlock<Block> PITCHER_PLANT = registerWithItem("pitcher_plant", FarmableDoublePlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> WEEPING_BLUE = registerWithItem("weeping_blue", WeepingBlueBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SUNDEW = registerWithItem("sundew", SundewBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BLACK_HAT_MUSHROOM = registerWithItem("black_hat_mushroom", properties -> new PlantBlock(PlantBlock.FLOWER_SHAPE, true, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BULB_CAPPED_MUSHROOM = registerWithItem("bulb_capped_mushroom", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().lightLevel(value -> 15).noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> FLATHEAD_MUSHROOM = registerWithItem("flathead_mushroom", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> VENUS_FLY_TRAP = registerWithItem("venus_fly_trap", VenusFlyTrapBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).randomTicks().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> VOLARPAD = registerWithItem("volarpad", FarmableDoublePlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SWAMP_PLANT = registerWithItem("swamp_plant", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().replaceable().sound(SoundType.GRASS));
	public static final DeferredBlock<GrowingPlantHeadBlock> SWAMP_KELP = registerWithItem("swamp_kelp", SwampKelpBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().replaceable().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> SWAMP_KELP_PLANT = register("swamp_kelp_plant", SwampKelpPlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().replaceable().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> MIRE_CORAL = registerWithItem("mire_coral", UnderwaterPlantBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).noCollission().noOcclusion().instabreak().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> DEEP_WATER_CORAL = registerWithItem("deep_water_coral", UnderwaterPlantBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).noCollission().noOcclusion().instabreak().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> WATER_WEEDS = registerWithItem("water_weeds", WaterWeedsBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().instabreak().replaceable().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> BULB_CAPPED_MUSHROOM_CAP = registerWithItem("bulb_capped_mushroom_cap", BulbCappedMushroomCapBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).noOcclusion().strength(0.2F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> BULB_CAPPED_MUSHROOM_STALK = registerWithItem("bulb_capped_mushroom_stalk", BulbCappedMushroomStemBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).strength(0.2F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SHELF_FUNGUS = registerWithItem("shelf_fungus", ShelfFungusBlock::new, BlockBehaviour.Properties.of().strength(0.2F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> ALGAE = registerWaterPlantItem("algae", AlgaeBlock::new, BlockBehaviour.Properties.of().instabreak().pushReaction(PushReaction.DESTROY).noCollission().noOcclusion().replaceable().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> POISON_IVY = registerWithItem("poison_ivy", PoisonIvyBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.PLANT).replaceable().noCollission().strength(0.2F).sound(SoundType.VINE).ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> GIANT_ROOT = registerWithItem("giant_root", Block::new, BlockBehaviour.Properties.of().strength(2.0F).sound(SoundType.WOOD).ignitedByLava());
	public static final DeferredBlock<Block> ARROW_ARUM = registerWithItem("arrow_arum", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BLUE_EYED_GRASS = registerWithItem("blue_eyed_grass", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BLUE_IRIS = registerWithItem("blue_iris", properties -> new PlantBlock(PlantBlock.FLOWER_SHAPE, true, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BONESET = registerWithItem("boneset", properties -> new PlantBlock(PlantBlock.FLOWER_SHAPE, true, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BOTTLE_BRUSH_GRASS = registerWithItem("bottle_brush_grass", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BROOMSEDGE = registerWithItem("broomsedge", FarmableDoublePlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XYZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BUTTON_BUSH = registerWithItem("button_bush", properties -> new PlantBlock(PlantBlock.FLOWER_SHAPE, true, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CARDINAL_FLOWER = registerWithItem("cardinal_flower", FarmableDoublePlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XYZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CATTAIL = registerWithItem("cattail", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CAVE_GRASS = registerWithItem("cave_grass", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> COPPER_IRIS = registerWithItem("copper_iris", properties -> new PlantBlock(PlantBlock.FLOWER_SHAPE, true, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> MARSH_HIBISCUS = registerWithItem("marsh_hibiscus", properties -> new PlantBlock(PlantBlock.FLOWER_SHAPE, true, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> MARSH_MALLOW = registerWithItem("marsh_mallow", properties -> new PlantBlock(PlantBlock.FLOWER_SHAPE, true, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BLADDERWORT_FLOWER = registerWithItem("bladderwort_flower", BladderwortFlowerBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BLADDERWORT_STALK = registerWithItem("bladderwort_stalk", BladderwortStalkBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> BOG_BEAN_FLOWER = registerWaterPlantItem("bog_bean_flower", properties -> new RootedFlowerBlock(BlockRegistry.BOG_BEAN_STALK, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BOG_BEAN_STALK = register("bog_bean_stalk", properties -> new RootedFlowerStalkBlock(BlockRegistry.BOG_BEAN_FLOWER, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> GOLDEN_CLUB_FLOWER = registerWaterPlantItem("golden_club_flower", properties -> new RootedFlowerBlock(BlockRegistry.GOLDEN_CLUB_STALK, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> GOLDEN_CLUB_STALK = register("golden_club_stalk", properties -> new RootedFlowerStalkBlock(BlockRegistry.GOLDEN_CLUB_FLOWER, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> MARSH_MARIGOLD_FLOWER = registerWaterPlantItem("marsh_marigold_flower", properties -> new RootedFlowerBlock(BlockRegistry.MARSH_MARIGOLD_STALK, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> MARSH_MARIGOLD_STALK = register("marsh_marigold_stalk", properties -> new RootedFlowerStalkBlock(BlockRegistry.MARSH_MARIGOLD_FLOWER, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.WET_GRASS));
	public static final DeferredBlock<Block> TALL_SWAMP_GRASS = registerWithItem("tall_swamp_grass", FarmableDoublePlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XYZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> MILKWEED = registerWithItem("milkweed", properties -> new PlantBlock(PlantBlock.FLOWER_SHAPE, true, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> NETTLE = registerWithItem("nettle", NettleBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> FLOWERED_NETTLE = registerWithItem("flowered_nettle", FloweredNettleBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> PICKERELWEED = registerWithItem("pickerelweed", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> PHRAGMITES = registerWithItem("phragmites", PhragmitesBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().offsetType(BlockBehaviour.OffsetType.XYZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SHOOTS = registerWithItem("shoots", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SLUDGECREEP = registerWithItem("sludgecreep", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> TALL_SLUDGECREEP = registerWithItem("tall_sludgecreep", SludgeDungeonPlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SOFT_RUSH = registerWithItem("soft_rush", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SWAMP_REED = registerWithItem("swamp_reed", SwampReedBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> THORNS = registerWithItem("thorns", ThornsBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> TALL_CATTAIL = registerWithItem("tall_cattail", FarmableDoublePlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XYZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SHORT_SWAMP_GRASS = registerWithItem("short_swamp_grass", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> DEAD_WEEDWOOD_BUSH = registerWithItem("dead_weedwood_bush", properties -> new PlantBlock(PlantBlock.GRASS_SHAPE, false, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> WEEDWOOD_BUSH = registerWithItem("weedwood_bush", WeedwoodBushBlock::new, BlockBehaviour.Properties.of().noOcclusion().isSuffocating(BlockRegistry::never).strength(0.35F).sound(SoundType.GRASS).forceSolidOff());
	public static final DeferredBlock<Block> STICK_NESTING_BLOCK = registerWithItem("stick_nesting_block", NestBlock::new, BlockBehaviour.Properties.of().noOcclusion().isSuffocating(BlockRegistry::never).strength(0.35F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BONE_NESTING_BLOCK = registerWithItem("bone_nesting_block", NestBlock::new, BlockBehaviour.Properties.of().isSuffocating(BlockRegistry::never).noOcclusion().strength(0.35F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> HOLLOW_LOG = registerWithItem("hollow_log", HollowLogBlock::new, BlockBehaviour.Properties.of().isSuffocating(BlockRegistry::never).noOcclusion().strength(0.8F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CAVE_MOSS = registerWithItem("cave_moss", properties -> new HangingPlantBlock(BlockRegistry.CAVE_MOSS_PLANT, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CAVE_MOSS_PLANT = register("cave_moss_plant", properties -> new HangingPlantBodyBlock(BlockRegistry.CAVE_MOSS, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CRYPTWEED = registerWithItem("cryptweed", properties -> new SludgeDungeonHangingPlantBlock(BlockRegistry.CRYPTWEED_PLANT, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CRYPTWEED_PLANT = register("cryptweed_plant", properties -> new HangingPlantBodyBlock(BlockRegistry.CRYPTWEED, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> STRING_ROOTS = registerWithItem("string_roots", properties -> new SludgeDungeonHangingPlantBlock(BlockRegistry.STRING_ROOTS_PLANT, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> STRING_ROOTS_PLANT = register("string_roots_plant", properties -> new HangingPlantBodyBlock(BlockRegistry.STRING_ROOTS, properties), BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> PALE_GRASS = registerWithItem("pale_grass", SludgeDungeonPlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).replaceable().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> ROTBULB = registerWithItem("rotbulb", SludgeDungeonPlantBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().offsetType(BlockBehaviour.OffsetType.XZ).replaceable().instabreak().sound(SoundType.GRASS));
	public static final DeferredBlock<Block> MOSS = registerWithItem("moss", MossBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().randomTicks().strength(0.2F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> DEAD_MOSS = registerWithItem("dead_moss", MossBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().strength(0.2F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> LICHEN = registerWithItem("lichen", MossBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().randomTicks().strength(0.2F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> DEAD_LICHEN = registerWithItem("dead_lichen", MossBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().replaceable().strength(0.2F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> HANGER = registerWithItem("hanger", HangerBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().strength(0.1F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SEEDED_HANGER = registerWithItem("seeded_hanger", SeededHangerBlock::new, BlockBehaviour.Properties.of().noCollission().noOcclusion().randomTicks().strength(0.1F).sound(SoundType.GRASS));
	//TODO crops
	public static final DeferredBlock<Block> ASPECTRUS_CROP = register("aspectrus_crop", Block::new, BlockBehaviour.Properties.of().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.CROP).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> FUNGUS_CROP = register("fungus_crop", Block::new, BlockBehaviour.Properties.of().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.CROP).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> MIDDLE_FRUIT_BUSH = register("middle_fruit_bush", Block::new, BlockBehaviour.Properties.of().mapColor(MapColor.PLANT).noCollission().randomTicks().instabreak().sound(SoundType.CROP).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> PHEROMONE_INFUSED_WEEDWOOD_BUSH = registerWithItem("pheromone_infused_weedwood_bush", properties -> new InfestedWeedwoodBushBlock(0, properties), BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_BUSH.get()));
	public static final DeferredBlock<Block> MOTH_INFESTED_WEEDWOOD_BUSH = registerWithItem("moth_infested_weedwood_bush", properties -> new InfestedWeedwoodBushBlock(1, properties), BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_BUSH.get()));
	public static final DeferredBlock<Block> GRUB_INFESTED_WEEDWOOD_BUSH = registerWithItem("grub_infested_weedwood_bush", properties -> new InfestedWeedwoodBushBlock(2, properties), BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_BUSH.get()));
	public static final DeferredBlock<Block> SILK_COCOONED_WEEDWOOD_BUSH = registerWithItem("silk_cocooned_weedwood_bush", properties -> new InfestedWeedwoodBushBlock(3, properties), BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_BUSH.get()));
	public static final DeferredBlock<Block> DECAY_INFESTED_WEEDWOOD_BUSH = registerWithItem("decay_infested_weedwood_bush", properties -> new InfestedWeedwoodBushBlock(4, properties), BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_BUSH.get()));
	public static final DeferredBlock<Block> PURIFIED_SWAMP_DIRT = registerWithItem("purified_swamp_dirt", Block::new, BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> DUG_SWAMP_DIRT = registerWithItem("dug_swamp_dirt", properties -> new DugDirtBlock(false, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.5F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> PURIFIED_DUG_SWAMP_DIRT = registerWithItem("purified_dug_swamp_dirt", properties -> new DugDirtBlock(true, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.5F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> DUG_SWAMP_GRASS = registerWithItem("dug_swamp_grass", properties -> new DugGrassBlock(false, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.5F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> PURIFIED_DUG_SWAMP_GRASS = registerWithItem("purified_dug_swamp_grass", properties -> new DugGrassBlock(true, properties), BlockBehaviour.Properties.of().randomTicks().strength(0.5F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BLACK_ICE = registerWithItem("black_ice", BlackIceBlock::new, BlockBehaviour.Properties.of().noOcclusion().randomTicks().strength(0.5F).randomTicks().friction(0.98F).sound(SoundType.GLASS).isRedstoneConductor(BlockRegistry::never));
	public static final DeferredBlock<Block> SNOW = registerWithItem("snow", BLSnowLayerBlock::new, BlockBehaviour.Properties.of().replaceable().forceSolidOff().randomTicks().strength(0.1F).sound(SoundType.SNOW));
	//MISC
	public static final DeferredBlock<Block> PORTAL_LOG = registerWithItem("portal_log", Block::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> PORTAL = registerWithItem("portal", TreePortalBlock::new, BlockBehaviour.Properties.of().noLootTable().strength(-1.0F, 6000000.0F).lightLevel(value -> 15).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> PORTAL_FRAME_TOP_LEFT = registerWithItem("portal_frame_top_left", PortalFrameBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> PORTAL_FRAME_TOP = registerWithItem("portal_frame_top", PortalFrameBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> PORTAL_FRAME_TOP_RIGHT = registerWithItem("portal_frame_top_right", PortalFrameBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> PORTAL_FRAME_LEFT = registerWithItem("portal_frame_left", PortalFrameBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> PORTAL_FRAME_RIGHT = registerWithItem("portal_frame_right", PortalFrameBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> PORTAL_FRAME_BOTTOM_LEFT = registerWithItem("portal_frame_bottom_left", PortalFrameBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> PORTAL_FRAME_BOTTOM = registerWithItem("portal_frame_bottom", PortalFrameBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> PORTAL_FRAME_BOTTOM_RIGHT = registerWithItem("portal_frame_bottom_right", PortalFrameBlock::new, BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> DRUID_ALTAR = registerWithItem("druid_altar", DruidAltarBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(8.0F, 100.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> PURIFIER = registerWithItem("purifier", PurifierBlock::new, BlockBehaviour.Properties.of().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WEEDWOOD_CRAFTING_TABLE = registerWithItem("weedwood_crafting_table", WeedwoodCraftingTableBlock::new, BlockBehaviour.Properties.of().ignitedByLava().strength(2.5F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> COMPOST_BIN = registerWithItem("compost_bin", CompostBinBlock::new, BlockBehaviour.Properties.of().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WEEDWOOD_JUKEBOX = registerWithItem("weedwood_jukebox", WeedwoodJukeboxBlock::new, BlockBehaviour.Properties.of().strength(2.0F, 10.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> SULFUR_FURNACE = registerWithItem("sulfur_furnace", SulfurFurnaceBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(3.5F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DUAL_SULFUR_FURNACE = registerWithItem("dual_sulfur_furnace", DualSulfurFurnaceBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(3.5F).sound(SoundType.STONE));
	//TODO weedwood chest, also look into shared loot mechanics for other inventory blocks
	public static final DeferredBlock<Block> WEEDWOOD_RUBBER_TAP = register("weedwood_rubber_tap", properties -> new RubberTapBlock(540, properties), BlockBehaviour.Properties.of().strength(3.5F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> SYRMORITE_RUBBER_TAP = register("syrmorite_rubber_tap", properties -> new RubberTapBlock(260, properties), BlockBehaviour.Properties.of().strength(3.5F).sound(SoundType.METAL));
	public static final DeferredBlock<SludgeBlock> SLUDGE = registerWithItem("sludge", SludgeBlock::new, BlockBehaviour.Properties.of().noOcclusion().forceSolidOff().replaceable().strength(0.1F).sound(SoundType.SLIME_BLOCK));
	public static final DeferredBlock<Block> FALLEN_LEAVES = registerWithItem("fallen_leaves", FallenLeavesBlock::new, BlockBehaviour.Properties.of().noOcclusion().forceSolidOff().strength(0.1F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> ENERGY_BARRIER = register("energy_barrier", EnergyBarrierBlock::new, BlockBehaviour.Properties.of().noLootTable().noOcclusion().lightLevel(value -> 12).strength(-1.0F, 6000000.0F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> WEEDWOOD_DOOR = registerDoubleBlockItem("weedwood_door", properties -> new DoorBlock(BLWoodTypes.WEEDWOOD_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(2.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> RUBBER_TREE_DOOR = registerDoubleBlockItem("rubber_tree_door", properties -> new DoorBlock(BLWoodTypes.RUBBER_TREE_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> GIANT_ROOT_DOOR = registerDoubleBlockItem("giant_root_door", properties -> new DoorBlock(BLWoodTypes.GIANT_ROOT_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> HEARTHGROVE_DOOR = registerDoubleBlockItem("hearthgrove_door", properties -> new DoorBlock(BLWoodTypes.HEARTHGROVE_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> NIBBLETWIG_DOOR = registerDoubleBlockItem("nibbletwig_door", properties -> new DoorBlock(BLWoodTypes.NIBBLETWIG_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> ROTTEN_DOOR = registerDoubleBlockItem("rotten_door", properties -> new DoorBlock(BLWoodTypes.ROTTEN_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> SYRMORITE_DOOR = registerDoubleBlockItem("syrmorite_door", properties -> new DoorBlock(BLWoodTypes.SYRMORITE, properties), BlockBehaviour.Properties.of().strength(1.5F, 10.0F).noOcclusion().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> SCABYST_DOOR = registerDoubleBlockItem("scabyst_door", properties -> new DoorBlock(BLWoodTypes.SCABYST, properties), BlockBehaviour.Properties.of().strength(1.5F, 10.0F).noOcclusion().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_WEEDWOOD_DOOR = registerDoubleBlockItem("treated_weedwood_door", properties -> new DoorBlock(BLWoodTypes.WEEDWOOD_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(2.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_RUBBER_TREE_DOOR = registerDoubleBlockItem("treated_rubber_tree_door", properties -> new DoorBlock(BLWoodTypes.RUBBER_TREE_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_GIANT_ROOT_DOOR = registerDoubleBlockItem("treated_giant_root_door", properties -> new DoorBlock(BLWoodTypes.GIANT_ROOT_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_HEARTHGROVE_DOOR = registerDoubleBlockItem("treated_hearthgrove_door", properties -> new DoorBlock(BLWoodTypes.HEARTHGROVE_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_NIBBLETWIG_DOOR = registerDoubleBlockItem("treated_nibbletwig_door", properties -> new DoorBlock(BLWoodTypes.NIBBLETWIG_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_ROTTEN_DOOR = registerDoubleBlockItem("treated_rotten_door", properties -> new DoorBlock(BLWoodTypes.ROTTEN_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> WEEDWOOD_SIGN = register("weedwood_sign", properties -> new WeedwoodStandingSignBlock(BLWoodTypes.WEEDWOOD_WOOD_TYPE, properties), BlockBehaviour.Properties.of().forceSolidOn().instrument(NoteBlockInstrument.BASS).noCollission().strength(1.0F).ignitedByLava());
	public static final DeferredBlock<Block> WEEDWOOD_WALL_SIGN = register("weedwood_wall_sign", properties -> new WeedwoodWallSignBlock(BLWoodTypes.WEEDWOOD_WOOD_TYPE, properties), BlockBehaviour.Properties.of().forceSolidOn().instrument(NoteBlockInstrument.BASS).noCollission().strength(1.0F).ignitedByLava());
	public static final DeferredBlock<Block> SULFUR_TORCH = register("sulfur_torch", SulfurTorchBlock::new, BlockBehaviour.Properties.of().instabreak().lightLevel(value -> 14).noCollission().randomTicks().sound(SoundType.WOOD));
	public static final DeferredBlock<Block> SULFUR_WALL_TORCH = register("sulfur_wall_torch", SulfurWallTorchBlock::new, BlockBehaviour.Properties.of().instabreak().lightLevel(value -> 14).noCollission().randomTicks().sound(SoundType.WOOD));
	public static final DeferredBlock<Block> EXTINGUISHED_SULFUR_TORCH = register("extinguished_sulfur_torch", ExtinguishedSulfurTorchBlock::new, BlockBehaviour.Properties.of().instabreak().noCollission().sound(SoundType.WOOD));
	public static final DeferredBlock<Block> EXTINGUISHED_SULFUR_WALL_TORCH = register("extinguished_sulfur_wall_torch", ExtinguishedSulfurWallTorchBlock::new, BlockBehaviour.Properties.of().instabreak().noCollission().sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WEEDWOOD_TRAPDOOR = registerWithItem("weedwood_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.WEEDWOOD_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(2.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> RUBBER_TREE_TRAPDOOR = registerWithItem("rubber_tree_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.RUBBER_TREE_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> GIANT_ROOT_TRAPDOOR = registerWithItem("giant_root_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.GIANT_ROOT_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> HEARTHGROVE_TRAPDOOR = registerWithItem("hearthgrove_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.HEARTHGROVE_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> NIBBLETWIG_TRAPDOOR = registerWithItem("nibbletwig_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.NIBBLETWIG_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> ROTTEN_TRAPDOOR = registerWithItem("rotten_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.ROTTEN_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> SYRMORITE_TRAPDOOR = registerWithItem("syrmorite_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.SYRMORITE, properties), BlockBehaviour.Properties.of().strength(1.5F, 10.0F).noOcclusion().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> SCABYST_TRAPDOOR = registerWithItem("scabyst_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.SCABYST, properties), BlockBehaviour.Properties.of().strength(1.5F, 10.0F).noOcclusion().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_WEEDWOOD_TRAPDOOR = registerWithItem("treated_weedwood_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.WEEDWOOD_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(2.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_RUBBER_TREE_TRAPDOOR = registerWithItem("treated_rubber_tree_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.RUBBER_TREE_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_GIANT_ROOT_TRAPDOOR = registerWithItem("treated_giant_root_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.GIANT_ROOT_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_HEARTHGROVE_TRAPDOOR = registerWithItem("treated_hearthgrove_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.HEARTHGROVE_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.75F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_NIBBLETWIG_TRAPDOOR = registerWithItem("treated_nibbletwig_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.NIBBLETWIG_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> TREATED_ROTTEN_TRAPDOOR = registerWithItem("treated_rotten_trapdoor", properties -> new SwampTrapdoorBlock(BLWoodTypes.ROTTEN_BLOCK_SET, properties), BlockBehaviour.Properties.of().instrument(NoteBlockInstrument.BASS).strength(1.0F, 5.0F).noOcclusion().ignitedByLava().pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> SYRMORITE_HOPPER = registerWithItem("syrmorite_hopper", SyrmoriteHopperBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.HOPPER));
	public static final DeferredBlock<Block> MUD_FLOWER_POT = registerWithItem("mud_flower_pot", MudFlowerPotBlock::new, BlockBehaviour.Properties.of().strength(0.3F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MUD_FLOWER_POT_CANDLE = registerWithItem("mud_flower_pot_candle", MudFlowerPotCandleBlock::new, BlockBehaviour.Properties.of().strength(0.3F).lightLevel(value -> value.getValue(MudFlowerPotCandleBlock.LIT) ? 13 : 0).sound(SoundType.STONE));
	public static final DeferredBlock<Block> GECKO_CAGE = registerWithItem("gecko_cage", GeckoCageBlock::new, BlockBehaviour.Properties.of().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> INFUSER = registerWithItem("infuser", InfuserBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> ORANGE_ASPECT_VIAL = register("orange_aspect_vial", AspectVialBlock::new, BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> GREEN_ASPECT_VIAL = register("green_aspect_vial", AspectVialBlock::new, BlockBehaviour.Properties.of().strength(0.4F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> MORTAR = registerWithItem("mortar", MortarBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(2.0F, 5.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CENSER = registerWithItem("censer", CenserBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(2.0F, 5.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> WEEDWOOD_BARREL = registerWithItem("weedwood_barrel", properties -> new BarrelBlock(false, properties), BlockBehaviour.Properties.of().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> SYRMORITE_BARREL = registerWithItem("syrmorite_barrel", properties -> new BarrelBlock(true, properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(2.0F, 5.0F).sound(SoundType.METAL));
	public static final DeferredBlock<Block> ANIMATOR = registerWithItem("animator", AnimatorBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(2.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> ALEMBIC = registerWithItem("alembic", AlembicBlock::new, BlockBehaviour.Properties.of().noOcclusion().requiresCorrectToolForDrops().strength(2.0F, 5.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MOSS_BED = registerWithItem("moss_bed", MossBedBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GREEN_BED));
	public static final DeferredBlock<Block> ROPE = registerWithItem("rope", RopeBlock::new, BlockBehaviour.Properties.of().instabreak().pushReaction(PushReaction.DESTROY).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> DAMP_TORCH = register("damp_torch", DampTorchBlock::new, BlockBehaviour.Properties.of().noCollission().instabreak().sound(SoundType.WOOD).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> DAMP_WALL_TORCH = register("damp_wall_torch", DampWallTorchBlock::new, BlockBehaviour.Properties.of().noCollission().instabreak().sound(SoundType.WOOD).pushReaction(PushReaction.DESTROY));
	public static final DeferredBlock<Block> WALKWAY = registerWithItem("walkway", WalkwayBlock::new, BlockBehaviour.Properties.of().strength(1.0F).pushReaction(PushReaction.DESTROY).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CHIP_PATH = registerWithItem("chip_path", CarpetBlock::new, BlockBehaviour.Properties.of().strength(0.5F).pushReaction(PushReaction.DESTROY).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> THATCH_ROOF = registerWithItem("thatch_roof", properties -> new SwampStairBlock(THATCH.get().defaultBlockState(), properties), BlockBehaviour.Properties.of().strength(0.5F).sound(SoundType.AZALEA));
	public static final DeferredBlock<Block> MUD_BRICK_SHINGLE_ROOF = registerWithItem("mud_brick_shingle_roof", properties -> new SwampStairBlock(MUD_BRICK_SHINGLES.get().defaultBlockState(), properties), BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.5F, 10.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> REPELLER = registerWithItem("repeller", RepellerBlock::new, BlockBehaviour.Properties.of().strength(1.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WAYSTONE = registerWithItem("waystone", WaystoneBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(25.0F, 10000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> CAVING_ROPE_LIGHT = register("caving_rope_light", CavingRopeLightBlock::new, BlockBehaviour.Properties.of().noLootTable().randomTicks().lightLevel(value -> 6).air());
	public static final DeferredBlock<Block> GROUND_ITEM = register("ground_item", GroundItemBlock::new, BlockBehaviour.Properties.of().noLootTable().strength(0.1F).sound(SoundType.EMPTY));
	public static final DeferredBlock<Block> DEEPMAN_SIMULACRUM_1 = registerWithItem("deepman_simulacrum_1", SimulacrumBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 10000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DEEPMAN_SIMULACRUM_2 = registerWithItem("deepman_simulacrum_2", SimulacrumBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 10000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> DEEPMAN_SIMULACRUM_3 = registerWithItem("deepman_simulacrum_3", SimulacrumBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 10000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> LAKE_CAVERN_SIMULACRUM_1 = registerWithItem("lake_cavern_simulacrum_1", SimulacrumBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 10000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> LAKE_CAVERN_SIMULACRUM_2 = registerWithItem("lake_cavern_simulacrum_2", SimulacrumBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 10000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> LAKE_CAVERN_SIMULACRUM_3 = registerWithItem("lake_cavern_simulacrum_3", SimulacrumBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 10000.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> ROOTMAN_SIMULACRUM_1 = registerWithItem("rootman_simulacrum_1", SimulacrumBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 10000.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> ROOTMAN_SIMULACRUM_2 = registerWithItem("rootman_simulacrum_2", SimulacrumBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 10000.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> ROOTMAN_SIMULACRUM_3 = registerWithItem("rootman_simulacrum_3", SimulacrumBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(10.0F, 10000.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> OFFERING_TABLE = registerWithItem("offering_table", OfferingTableBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(0.5F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> WIND_CHIME = registerWithItem("wind_chime", WindChimeBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(0.5F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> PAPER_LANTERN_1 = registerWithItem("paper_lantern_1", BLLanternBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).strength(0.1F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> PAPER_LANTERN_2 = registerWithItem("paper_lantern_2", BLLanternBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).strength(0.1F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> PAPER_LANTERN_3 = registerWithItem("paper_lantern_3", BLLanternBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).strength(0.1F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SILT_GLASS_LANTERN = registerWithItem("silt_glass_lantern", SiltGlassLanternBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).strength(0.1F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> RED_BAUBLE = registerWithItem("red_bauble", BaubleBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).randomTicks().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> GREEN_BAUBLE = registerWithItem("green_bauble", BaubleBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).randomTicks().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> BLUE_BAUBLE = registerWithItem("blue_bauble", BaubleBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).randomTicks().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> YELLOW_BAUBLE = registerWithItem("yellow_bauble", BaubleBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).randomTicks().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> LIGHT_BLUE_BAUBLE = registerWithItem("light_blue_bauble", BaubleBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).randomTicks().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> MAGENTA_BAUBLE = registerWithItem("magenta_bauble", BaubleBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).randomTicks().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> PINK_BAUBLE = registerWithItem("pink_bauble", BaubleBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).randomTicks().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> CYAN_BAUBLE = registerWithItem("cyan_bauble", BaubleBlock::new, BlockBehaviour.Properties.of().lightLevel(value -> 15).randomTicks().strength(0.3F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> FISHING_TACKLE_BOX = registerWithItem("fishing_tackle_box", FishingTackleBoxBlock::new, BlockBehaviour.Properties.of().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> SMOKING_RACK = registerWithItem("smoking_rack", SmokingRackBlock::new, BlockBehaviour.Properties.of().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> FISH_TRIMMING_TABLE = registerWithItem("fish_trimming_table", FishTrimmingTableBlock::new, BlockBehaviour.Properties.of().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CRAB_POT = registerWithItem("crab_pot", CrabPotBlock::new, BlockBehaviour.Properties.of().strength(0.5F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> CRAB_POT_FILTER = registerWithItem("crab_pot_filter", CrabPotFilterBlock::new, BlockBehaviour.Properties.of().noOcclusion().strength(2.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> SILT_GLASS_JAR = registerWithItem("silt_glass_jar", SiltGlassJarBlock::new, BlockBehaviour.Properties.of().strength(1.0F, 5.0F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> BETWEENSTONE_PEBBLE = register("betweenstone_pebble", PebblePileBlock::new, BlockBehaviour.Properties.of().strength(0.5F, 5.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> BARNACLE = register("barnacle", BarnacleBlock::new, BlockBehaviour.Properties.of().noCollission().randomTicks().strength(0.2F).sound(SoundType.SLIME_BLOCK));
	public static final DeferredBlock<Block> GLOWING_GOOP = registerWithItem("glowing_goop", GlowingGoopBlock::new, BlockBehaviour.Properties.of().lightLevel(state -> state.getValue(GlowingGoopBlock.WATER_TYPE) != SwampWaterLoggable.WaterType.NONE ? 15 : 0).noCollission().strength(0.0F, 2.0F).sound(SoundType.SLIME_BLOCK));
	public static final DeferredBlock<Block> REED_MAT = registerWithItem("reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> LYESTONE = registerWithItem("lyestone", LyestoneBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().strength(1.2F, 8.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> MIST_BRIDGE = registerWithItem("mist_bridge", MistBridgeBlock::new, BlockBehaviour.Properties.of().strength(1.2F, 8.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> SHADOW_WALKER = registerWithItem("shadow_walker", ShadowWalkerBlock::new, BlockBehaviour.Properties.of().strength(1.2F, 8.0F).sound(SoundType.STONE));
	public static final DeferredBlock<Block> STEEPING_POT = registerWithItem("steeping_pot", SteepingPotBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().noOcclusion().strength(1.5F, 10.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> GRUB_HUB = registerWithItem("grub_hub", GrubHubBlock::new, BlockBehaviour.Properties.of().requiresCorrectToolForDrops().noOcclusion().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> WATER_FILTER = registerWithItem("water_filter", WaterFilterBlock::new, BlockBehaviour.Properties.of().noOcclusion().strength(2.0F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> FILTERED_SILT_GLASS_JAR = registerWithItem("filtered_silt_glass_jar", FilteredSiltGlassJarBlock::new, BlockBehaviour.Properties.of().strength(1.0F, 5.0F).sound(SoundType.GLASS));
	public static final DeferredBlock<Block> MOTH_HOUSE = registerWithItem("moth_house", MothHouseBlock::new, BlockBehaviour.Properties.of().strength(1.5F, 5.0F).sound(SoundType.WOOD));
	public static final DeferredBlock<Block> DULL_LAVENDER_SAMITE = registerWithItem("dull_lavender_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> MAROON_SAMITE = registerWithItem("maroon_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SHADOW_GREEN_SAMITE = registerWithItem("shadow_green_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> CAMELOT_MAGENTA_SAMITE = registerWithItem("camelot_magenta_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SAFFRON_SAMITE = registerWithItem("saffron_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> CARIBBEAN_GREEN_SAMITE = registerWithItem("caribbean_green_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> VIVID_TANGERINE_SAMITE = registerWithItem("vivid_tangerine_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> CHAMPAGNE_SAMITE = registerWithItem("champagne_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> RAISIN_BLACK_SAMITE = registerWithItem("raisin_black_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SUSHI_GREEN_SAMITE = registerWithItem("sushi_green_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> ELM_CYAN_SAMITE = registerWithItem("elm_cyan_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> CADMIUM_GREEN_SAMITE = registerWithItem("cadmium_green_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> LAVENDER_BLUE_SAMITE = registerWithItem("lavender_blue_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> BROWN_RUST_SAMITE = registerWithItem("brown_rust_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> MIDNIGHT_PURPLE_SAMITE = registerWithItem("midnight_purple_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> PEWTER_GREY_SAMITE = registerWithItem("pewter_grey_samite", Block::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> DULL_LAVENDER_SAMITE_CANVAS_PANEL = registerWithItem("dull_lavender_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> MAROON_SAMITE_CANVAS_PANEL = registerWithItem("maroon_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SHADOW_GREEN_SAMITE_CANVAS_PANEL = registerWithItem("shadow_green_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> CAMELOT_MAGENTA_SAMITE_CANVAS_PANEL = registerWithItem("camelot_magenta_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SAFFRON_SAMITE_CANVAS_PANEL = registerWithItem("saffron_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> CARIBBEAN_GREEN_SAMITE_CANVAS_PANEL = registerWithItem("caribbean_green_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> VIVID_TANGERINE_SAMITE_CANVAS_PANEL = registerWithItem("vivid_tangerine_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> CHAMPAGNE_SAMITE_CANVAS_PANEL = registerWithItem("champagne_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> RAISIN_BLACK_SAMITE_CANVAS_PANEL = registerWithItem("raisin_black_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> SUSHI_GREEN_SAMITE_CANVAS_PANEL = registerWithItem("sushi_green_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> ELM_CYAN_SAMITE_CANVAS_PANEL = registerWithItem("elm_cyan_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> CADMIUM_GREEN_SAMITE_CANVAS_PANEL = registerWithItem("cadmium_green_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> LAVENDER_BLUE_SAMITE_CANVAS_PANEL = registerWithItem("lavender_blue_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> BROWN_RUST_SAMITE_CANVAS_PANEL = registerWithItem("brown_rust_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> MIDNIGHT_PURPLE_SAMITE_CANVAS_PANEL = registerWithItem("midnight_purple_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> PEWTER_GREY_SAMITE_CANVAS_PANEL = registerWithItem("pewter_grey_samite_canvas_panel", SamiteCanvasPanelBlock::new, BlockBehaviour.Properties.of().strength(0.8F).sound(SoundType.WOOL));
	public static final DeferredBlock<Block> DULL_LAVENDER_REED_MAT = registerWithItem("dull_lavender_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> MAROON_REED_MAT = registerWithItem("maroon_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SHADOW_GREEN_REED_MAT = registerWithItem("shadow_green_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CAMELOT_MAGENTA_REED_MAT = registerWithItem("camelot_magenta_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SAFFRON_REED_MAT = registerWithItem("saffron_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CARIBBEAN_GREEN_REED_MAT = registerWithItem("caribbean_green_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> VIVID_TANGERINE_REED_MAT = registerWithItem("vivid_tangerine_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CHAMPAGNE_REED_MAT = registerWithItem("champagne_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> RAISIN_BLACK_REED_MAT = registerWithItem("raisin_black_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> SUSHI_GREEN_REED_MAT = registerWithItem("sushi_green_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> ELM_CYAN_REED_MAT = registerWithItem("elm_cyan_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> CADMIUM_GREEN_REED_MAT = registerWithItem("cadmium_green_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> LAVENDER_BLUE_REED_MAT = registerWithItem("lavender_blue_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> BROWN_RUST_REED_MAT = registerWithItem("brown_rust_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> MIDNIGHT_PURPLE_REED_MAT = registerWithItem("midnight_purple_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> PEWTER_GREY_REED_MAT = registerWithItem("pewter_grey_reed_mat", ReedMatBlock::new, BlockBehaviour.Properties.of().strength(0.2F, 5.0F).sound(SoundType.GRASS));
	public static final DeferredBlock<Block> TREATED_WEEDWOOD_PLANKS = registerWithItem("treated_weedwood_planks", Block::new, BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_PLANKS.get()));
	public static final DeferredBlock<Block> TREATED_WEEDWOOD_SLAB = registerWithItem("treated_weedwood_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_SLAB.get()));
	public static final DeferredBlock<Block> TREATED_WEEDWOOD_STAIRS = registerWithItem("treated_weedwood_stairs", properties -> new SwampStairBlock(TREATED_WEEDWOOD_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_STAIRS.get()));
	public static final DeferredBlock<Block> TREATED_WEEDWOOD_FENCE = registerWithItem("treated_weedwood_fence", SwampFenceBlock::new, BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_FENCE.get()));
	public static final DeferredBlock<Block> TREATED_WEEDWOOD_FENCE_GATE = registerWithItem("treated_weedwood_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.WEEDWOOD_WOOD_TYPE, properties), BlockBehaviour.Properties.ofFullCopy(WEEDWOOD_FENCE_GATE.get()));
	public static final DeferredBlock<Block> TREATED_RUBBER_TREE_PLANKS = registerWithItem("treated_rubber_tree_planks", Block::new, BlockBehaviour.Properties.ofFullCopy(RUBBER_TREE_PLANKS.get()));
	public static final DeferredBlock<Block> TREATED_RUBBER_TREE_SLAB = registerWithItem("treated_rubber_tree_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(RUBBER_TREE_SLAB.get()));
	public static final DeferredBlock<Block> TREATED_RUBBER_TREE_STAIRS = registerWithItem("treated_rubber_tree_stairs", properties -> new SwampStairBlock(TREATED_RUBBER_TREE_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(RUBBER_TREE_STAIRS.get()));
	public static final DeferredBlock<Block> TREATED_RUBBER_TREE_FENCE = registerWithItem("treated_rubber_tree_fence", SwampFenceBlock::new, BlockBehaviour.Properties.ofFullCopy(RUBBER_TREE_FENCE.get()));
	public static final DeferredBlock<Block> TREATED_RUBBER_TREE_FENCE_GATE = registerWithItem("treated_rubber_tree_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.RUBBER_TREE_WOOD_TYPE, properties), BlockBehaviour.Properties.ofFullCopy(RUBBER_TREE_FENCE_GATE.get()));
	public static final DeferredBlock<Block> TREATED_GIANT_ROOT_PLANKS = registerWithItem("treated_giant_root_planks", Block::new, BlockBehaviour.Properties.ofFullCopy(GIANT_ROOT_PLANKS.get()));
	public static final DeferredBlock<Block> TREATED_GIANT_ROOT_SLAB = registerWithItem("treated_giant_root_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(GIANT_ROOT_SLAB.get()));
	public static final DeferredBlock<Block> TREATED_GIANT_ROOT_STAIRS = registerWithItem("treated_giant_root_stairs", properties -> new SwampStairBlock(TREATED_GIANT_ROOT_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(GIANT_ROOT_STAIRS.get()));
	public static final DeferredBlock<Block> TREATED_GIANT_ROOT_FENCE = registerWithItem("treated_giant_root_fence", SwampFenceBlock::new, BlockBehaviour.Properties.ofFullCopy(GIANT_ROOT_FENCE.get()));
	public static final DeferredBlock<Block> TREATED_GIANT_ROOT_FENCE_GATE = registerWithItem("treated_giant_root_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.GIANT_ROOT_WOOD_TYPE, properties), BlockBehaviour.Properties.ofFullCopy(GIANT_ROOT_FENCE_GATE.get()));
	public static final DeferredBlock<Block> TREATED_HEARTHGROVE_PLANKS = registerWithItem("treated_hearthgrove_planks", Block::new, BlockBehaviour.Properties.ofFullCopy(HEARTHGROVE_PLANKS.get()));
	public static final DeferredBlock<Block> TREATED_HEARTHGROVE_SLAB = registerWithItem("treated_hearthgrove_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(HEARTHGROVE_SLAB.get()));
	public static final DeferredBlock<Block> TREATED_HEARTHGROVE_STAIRS = registerWithItem("treated_hearthgrove_stairs", properties -> new SwampStairBlock(TREATED_HEARTHGROVE_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(HEARTHGROVE_STAIRS.get()));
	public static final DeferredBlock<Block> TREATED_HEARTHGROVE_FENCE = registerWithItem("treated_hearthgrove_fence", SwampFenceBlock::new, BlockBehaviour.Properties.ofFullCopy(HEARTHGROVE_FENCE.get()));
	public static final DeferredBlock<Block> TREATED_HEARTHGROVE_FENCE_GATE = registerWithItem("treated_hearthgrove_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.HEARTHGROVE_WOOD_TYPE, properties), BlockBehaviour.Properties.ofFullCopy(HEARTHGROVE_FENCE_GATE.get()));
	public static final DeferredBlock<Block> TREATED_NIBBLETWIG_PLANKS = registerWithItem("treated_nibbletwig_planks", Block::new, BlockBehaviour.Properties.ofFullCopy(NIBBLETWIG_PLANKS.get()));
	public static final DeferredBlock<Block> TREATED_NIBBLETWIG_SLAB = registerWithItem("treated_nibbletwig_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(NIBBLETWIG_SLAB.get()));
	public static final DeferredBlock<Block> TREATED_NIBBLETWIG_STAIRS = registerWithItem("treated_nibbletwig_stairs", properties -> new SwampStairBlock(TREATED_NIBBLETWIG_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(NIBBLETWIG_STAIRS.get()));
	public static final DeferredBlock<Block> TREATED_NIBBLETWIG_FENCE = registerWithItem("treated_nibbletwig_fence", SwampFenceBlock::new, BlockBehaviour.Properties.ofFullCopy(NIBBLETWIG_FENCE.get()));
	public static final DeferredBlock<Block> TREATED_NIBBLETWIG_FENCE_GATE = registerWithItem("treated_nibbletwig_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.NIBBLETWIG_WOOD_TYPE, properties), BlockBehaviour.Properties.ofFullCopy(NIBBLETWIG_FENCE_GATE.get()));
	public static final DeferredBlock<Block> TREATED_ROTTEN_PLANKS = registerWithItem("treated_rotten_planks", Block::new, BlockBehaviour.Properties.ofFullCopy(ROTTEN_PLANKS.get()));
	public static final DeferredBlock<Block> TREATED_ROTTEN_SLAB = registerWithItem("treated_rotten_slab", SwampSlabBlock::new, BlockBehaviour.Properties.ofFullCopy(ROTTEN_SLAB.get()));
	public static final DeferredBlock<Block> TREATED_ROTTEN_STAIRS = registerWithItem("treated_rotten_stairs", properties -> new SwampStairBlock(TREATED_ROTTEN_PLANKS.get().defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(ROTTEN_STAIRS.get()));
	public static final DeferredBlock<Block> TREATED_ROTTEN_FENCE = registerWithItem("treated_rotten_fence", SwampFenceBlock::new, BlockBehaviour.Properties.ofFullCopy(ROTTEN_FENCE.get()));
	public static final DeferredBlock<Block> TREATED_ROTTEN_FENCE_GATE = registerWithItem("treated_rotten_fence_gate", properties -> new FenceGateBlock(BLWoodTypes.ROTTEN_WOOD_TYPE, properties), BlockBehaviour.Properties.ofFullCopy(ROTTEN_FENCE_GATE.get()));

	public static final DeferredBlock<FlowerPotBlock> POTTED_WEEDWOOD_SAPLING = register("potted_weedwood_sapling", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, WEEDWOOD_SAPLING, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_SAP_SAPLING = register("potted_sap_sapling", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, SAP_SAPLING, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_RUBBER_SAPLING = register("potted_rubber_sapling", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, RUBBER_SAPLING, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_HEARTHGROVE_SAPLING = register("potted_hearthgrove_sapling", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, HEARTHGROVE_SAPLING, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_NIBBLETWIG_SAPLING = register("potted_nibbletwig_sapling", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, NIBBLETWIG_SAPLING, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_SPIRIT_TREE_SAPLING = register("potted_spirit_tree_sapling", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, SPIRIT_TREE_SAPLING, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));

	public static final DeferredBlock<FlowerPotBlock> POTTED_ARROW_ARUM = register("potted_arrow_arum", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, ARROW_ARUM, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_BLUE_IRIS = register("potted_blue_iris", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, BLUE_IRIS, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_BONESET = register("potted_boneset", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, BONESET, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_BUTTON_BUSH = register("potted_button_bush", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, BUTTON_BUSH, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_COPPER_IRIS = register("potted_copper_iris", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, COPPER_IRIS, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_DEAD_WEEDWOOD_BUSH = register("potted_dead_weedwood_bush", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, DEAD_WEEDWOOD_BUSH, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_FLOWERED_NETTLE = register("potted_flowered_nettle", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, FLOWERED_NETTLE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_MARSH_HIBISCUS = register("potted_marsh_hibiscus", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, MARSH_HIBISCUS, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_MARSH_MALLOW = register("potted_marsh_mallow", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, MARSH_MALLOW, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_MILKWEED = register("potted_milkweed", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, MILKWEED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_NETTLE = register("potted_nettle", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, NETTLE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));
	public static final DeferredBlock<FlowerPotBlock> POTTED_PICKERELWEED = register("potted_pickerelweed", properties -> new FlowerPotBlock(() -> (FlowerPotBlock) Blocks.FLOWER_POT, PICKERELWEED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWER_POT));

	public static <T extends Block> DeferredBlock<T> register(String name, Function<BlockBehaviour.Properties, T> block, BlockBehaviour.Properties properties) {
		return BLOCKS.register(name, () -> block.apply(properties.setId(ResourceKey.create(Registries.BLOCK, TheBetweenlands.prefix(name)))));
	}

	public static <T extends Block> DeferredBlock<T> registerWithItem(String name, Function<BlockBehaviour.Properties, T> block, BlockBehaviour.Properties properties) {
		return registerWithItem(name, block, properties, item -> itemProps -> new BlockItem(item.get(), itemProps));
	}

	public static <T extends Block> DeferredBlock<T> registerWithItem(String name, Function<BlockBehaviour.Properties, T> block, BlockBehaviour.Properties properties, Function<DeferredBlock<T>, Function<Item.Properties, ? extends Item>> item) {
		DeferredBlock<T> reg = register(name, block, properties);
		ItemRegistry.register(name, item.apply(reg), new Item.Properties());
		return reg;
	}

	public static <T extends Block> DeferredBlock<T> registerDoubleBlockItem(String name, Function<BlockBehaviour.Properties, T> block, BlockBehaviour.Properties properties) {
		DeferredBlock<T> ret = register(name, block, properties);
		ItemRegistry.register(name, itemProps -> new DoubleHighBlockItem(ret.get(), itemProps), new Item.Properties());
		return ret;
	}

	public static <T extends Block> DeferredBlock<T> registerWaterPlantItem(String name, Function<BlockBehaviour.Properties, T> block, BlockBehaviour.Properties properties) {
		DeferredBlock<T> ret = register(name, block, properties);
		ItemRegistry.register(name, itemProps -> new PlaceOnWaterBlockItem(ret.get(), itemProps), new Item.Properties());
		return ret;
	}

	private static Boolean never(BlockState state, BlockGetter blockGetter, BlockPos pos, EntityType<?> entity) {
		return false;
	}

	private static boolean never(BlockState state, BlockGetter blockGetter, BlockPos pos) {
		return false;
	}
}
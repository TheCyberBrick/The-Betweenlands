package thebetweenlands.common.registries;

import net.minecraft.core.registries.Registries;
import net.minecraft.world.level.block.entity.BlockEntityType;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.registries.DeferredRegister;
import thebetweenlands.common.TheBetweenlands;
import thebetweenlands.common.block.entity.*;
import thebetweenlands.common.block.entity.simulacrum.SimulacrumBlockEntity;
import thebetweenlands.common.block.entity.spawner.MobSpawnerBlockEntity;

public class BlockEntityRegistry {
	public static final DeferredRegister<BlockEntityType<?>> BLOCK_ENTITIES = DeferredRegister.create(Registries.BLOCK_ENTITY_TYPE, TheBetweenlands.ID);

	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<WispBlockEntity>> WISP = BLOCK_ENTITIES.register("wisp", () -> new BlockEntityType<>(WispBlockEntity::new, BlockRegistry.WISP.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<LootPotBlockEntity>> LOOT_POT = BLOCK_ENTITIES.register("loot_pot", () -> new BlockEntityType<>(LootPotBlockEntity::new, BlockRegistry.LOOT_POT_1.get(), BlockRegistry.LOOT_POT_2.get(), BlockRegistry.LOOT_POT_3.get(), BlockRegistry.MUD_LOOT_POT_1.get(), BlockRegistry.MUD_LOOT_POT_2.get(), BlockRegistry.MUD_LOOT_POT_3.get(), BlockRegistry.TAR_LOOT_POT_1.get(), BlockRegistry.TAR_LOOT_POT_2.get(), BlockRegistry.TAR_LOOT_POT_3.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<MobSpawnerBlockEntity>> MOB_SPAWNER = BLOCK_ENTITIES.register("mob_spawner", () -> new BlockEntityType<>(MobSpawnerBlockEntity::new, BlockRegistry.MOB_SPAWNER.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<LootUrnBlockEntity>> LOOT_URN = BLOCK_ENTITIES.register("loot_urn", () -> new BlockEntityType<>(LootUrnBlockEntity::new, BlockRegistry.LOOT_URN_1.get(), BlockRegistry.LOOT_URN_2.get(), BlockRegistry.LOOT_URN_3.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<SpikeTrapBlockEntity>> SPIKE_TRAP = BLOCK_ENTITIES.register("spike_trap", () -> new BlockEntityType<>(SpikeTrapBlockEntity::new, BlockRegistry.SPIKE_TRAP.get(), BlockRegistry.MUD_BRICK_SPIKE_TRAP.get(), BlockRegistry.MUD_TILES_SPIKE_TRAP.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<PossessedBlockEntity>> POSSESSED_BLOCK = BLOCK_ENTITIES.register("possessed_block", () -> new BlockEntityType<>(PossessedBlockEntity::new, BlockRegistry.POSSESSED_BLOCK.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<ItemCageBlockEntity>> ITEM_CAGE = BLOCK_ENTITIES.register("item_cage", () -> new BlockEntityType<>(ItemCageBlockEntity::new, BlockRegistry.ITEM_CAGE.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<ItemShelfBlockEntity>> ITEM_SHELF = BLOCK_ENTITIES.register("item_shelf", () -> new BlockEntityType<>(ItemShelfBlockEntity::new, BlockRegistry.ITEM_SHELF.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<PuffshroomBlockEntity>> PUFFSHROOM = BLOCK_ENTITIES.register("puffshroom", () -> new BlockEntityType<>(PuffshroomBlockEntity::new, BlockRegistry.PUFFSHROOM.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<BeamOriginBlockEntity>> BEAM_ORIGIN = BLOCK_ENTITIES.register("beam_origin", () -> new BlockEntityType<>(BeamOriginBlockEntity::new, BlockRegistry.BEAM_ORIGIN.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<BeamRelayBlockEntity>> BEAM_RELAY = BLOCK_ENTITIES.register("beam_relay", () -> new BlockEntityType<>(BeamRelayBlockEntity::new, BlockRegistry.BEAM_RELAY.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<MudBrickAlcoveBlockEntity>> MUD_BRICK_ALCOVE = BLOCK_ENTITIES.register("mud_brick_alcove", () -> new BlockEntityType<>(MudBrickAlcoveBlockEntity::new, BlockRegistry.MUD_BRICK_ALCOVE.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<DungeonDoorRunesBlockEntity>> DUNGEON_DOOR_RUNES = BLOCK_ENTITIES.register("dungeon_door_runes", () -> new BlockEntityType<>(DungeonDoorRunesBlockEntity::new, BlockRegistry.DUNGEON_DOOR_RUNES.get(), BlockRegistry.MIMIC_DUNGEON_DOOR_RUNES.get(), BlockRegistry.CRAWLER_DUNGEON_DOOR_RUNES.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<DungeonDoorCombinationBlockEntity>> DUNGEON_DOOR_COMBINATION = BLOCK_ENTITIES.register("dungeon_door_combination", () -> new BlockEntityType<>(DungeonDoorCombinationBlockEntity::new, BlockRegistry.DUNGEON_DOOR_COMBINATION.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<DecayPitGroundChainBlockEntity>> DECAY_PIT_GROUND_CHAIN = BLOCK_ENTITIES.register("decay_pit_ground_chain", () -> new BlockEntityType<>(DecayPitGroundChainBlockEntity::new, BlockRegistry.DECAY_PIT_GROUND_CHAIN.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<DecayPitHangingChainBlockEntity>> DECAY_PIT_HANGING_CHAIN = BLOCK_ENTITIES.register("decay_pit_hanging_chain", () -> new BlockEntityType<>(DecayPitHangingChainBlockEntity::new, BlockRegistry.DECAY_PIT_HANGING_CHAIN.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<DecayPitControlBlockEntity>> DECAY_PIT_CONTROL = BLOCK_ENTITIES.register("decay_pit_control", () -> new BlockEntityType<>(DecayPitControlBlockEntity::new, BlockRegistry.DECAY_PIT_CONTROL.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<PresentBlockEntity>> PRESENT = BLOCK_ENTITIES.register("present", () -> new BlockEntityType<>(PresentBlockEntity::new,
		BlockRegistry.WHITE_PRESENT.get(), BlockRegistry.LIGHT_GRAY_PRESENT.get(), BlockRegistry.GRAY_PRESENT.get(), BlockRegistry.BLACK_PRESENT.get(),
		BlockRegistry.RED_PRESENT.get(), BlockRegistry.ORANGE_PRESENT.get(), BlockRegistry.YELLOW_PRESENT.get(), BlockRegistry.GREEN_PRESENT.get(),
		BlockRegistry.LIME_PRESENT.get(), BlockRegistry.BLUE_PRESENT.get(), BlockRegistry.CYAN_PRESENT.get(), BlockRegistry.LIGHT_BLUE_PRESENT.get(),
		BlockRegistry.PURPLE_PRESENT.get(), BlockRegistry.MAGENTA_PRESENT.get(), BlockRegistry.PINK_PRESENT.get(), BlockRegistry.BROWN_PRESENT.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<DugSoilBlockEntity>> DUG_SOIL = BLOCK_ENTITIES.register("dug_soil", () -> new BlockEntityType<>(DugSoilBlockEntity::new, BlockRegistry.DUG_SWAMP_DIRT.get(), BlockRegistry.DUG_SWAMP_GRASS.get(), BlockRegistry.PURIFIED_DUG_SWAMP_DIRT.get(), BlockRegistry.PURIFIED_DUG_SWAMP_GRASS.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<DruidAltarBlockEntity>> DRUID_ALTAR = BLOCK_ENTITIES.register("druid_altar", () -> new BlockEntityType<>(DruidAltarBlockEntity::new, BlockRegistry.DRUID_ALTAR.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<PurifierBlockEntity>> PURIFIER = BLOCK_ENTITIES.register("purifier", () -> new BlockEntityType<>(PurifierBlockEntity::new, BlockRegistry.PURIFIER.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<WeedwoodCraftingTableBlockEntity>> WEEDWOOD_CRAFTING_TABLE = BLOCK_ENTITIES.register("weedwood_crafting_table", () -> new BlockEntityType<>(WeedwoodCraftingTableBlockEntity::new, BlockRegistry.WEEDWOOD_CRAFTING_TABLE.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<CompostBinBlockEntity>> COMPOST_BIN = BLOCK_ENTITIES.register("compost_bin", () -> new BlockEntityType<>(CompostBinBlockEntity::new, BlockRegistry.COMPOST_BIN.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<SulfurFurnaceBlockEntity>> SULFUR_FURNACE = BLOCK_ENTITIES.register("sulfur_furnace", () -> new BlockEntityType<>(SulfurFurnaceBlockEntity::new, BlockRegistry.SULFUR_FURNACE.get(), BlockRegistry.DUAL_SULFUR_FURNACE.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<RubberTapBlockEntity>> RUBBER_TAP = BLOCK_ENTITIES.register("rubber_tap", () -> new BlockEntityType<>(RubberTapBlockEntity::new, BlockRegistry.WEEDWOOD_RUBBER_TAP.get(), BlockRegistry.SYRMORITE_RUBBER_TAP.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<SyrmoriteHopperBlockEntity>> SYRMORITE_HOPPER = BLOCK_ENTITIES.register("syrmorite_hopper", () -> new BlockEntityType<>(SyrmoriteHopperBlockEntity::new, BlockRegistry.SYRMORITE_HOPPER.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<MudFlowerPotBlockEntity>> MUD_FLOWER_POT = BLOCK_ENTITIES.register("mud_flower_pot", () -> new BlockEntityType<>(MudFlowerPotBlockEntity::new, BlockRegistry.MUD_FLOWER_POT.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<GeckoCageBlockEntity>> GECKO_CAGE = BLOCK_ENTITIES.register("gecko_cage", () -> new BlockEntityType<>(GeckoCageBlockEntity::new, BlockRegistry.GECKO_CAGE.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<InfuserBlockEntity>> INFUSER = BLOCK_ENTITIES.register("infuser", () -> new BlockEntityType<>(InfuserBlockEntity::new, BlockRegistry.INFUSER.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<AspectVialBlockEntity>> ASPECT_VIAL = BLOCK_ENTITIES.register("aspect_vial", () -> new BlockEntityType<>(AspectVialBlockEntity::new, BlockRegistry.ORANGE_ASPECT_VIAL.get(), BlockRegistry.GREEN_ASPECT_VIAL.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<MortarBlockEntity>> MORTAR = BLOCK_ENTITIES.register("mortar", () -> new BlockEntityType<>(MortarBlockEntity::new, BlockRegistry.MORTAR.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<CenserBlockEntity>> CENSER = BLOCK_ENTITIES.register("censer", () -> new BlockEntityType<>(CenserBlockEntity::new, BlockRegistry.CENSER.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<BarrelBlockEntity>> BARREL = BLOCK_ENTITIES.register("barrel", () -> new BlockEntityType<>(BarrelBlockEntity::new, BlockRegistry.WEEDWOOD_BARREL.get(), BlockRegistry.SYRMORITE_BARREL.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<AnimatorBlockEntity>> ANIMATOR = BLOCK_ENTITIES.register("animator", () -> new BlockEntityType<>(AnimatorBlockEntity::new, BlockRegistry.ANIMATOR.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<AlembicBlockEntity>> ALEMBIC = BLOCK_ENTITIES.register("alembic", () -> new BlockEntityType<>(AlembicBlockEntity::new, BlockRegistry.ALEMBIC.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<MossBedBlockEntity>> MOSS_BED = BLOCK_ENTITIES.register("moss_bed", () -> new BlockEntityType<>(MossBedBlockEntity::new, BlockRegistry.MOSS_BED.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<RepellerBlockEntity>> REPELLER = BLOCK_ENTITIES.register("repeller", () -> new BlockEntityType<>(RepellerBlockEntity::new, BlockRegistry.REPELLER.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<WaystoneBlockEntity>> WAYSTONE = BLOCK_ENTITIES.register("waystone", () -> new BlockEntityType<>(WaystoneBlockEntity::new, BlockRegistry.WAYSTONE.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<GroundItemBlockEntity>> GROUND_ITEM = BLOCK_ENTITIES.register("ground_item", () -> new BlockEntityType<>(GroundItemBlockEntity::new, BlockRegistry.GROUND_ITEM.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<SimulacrumBlockEntity>> SIMULACRUM = BLOCK_ENTITIES.register("simulacrum", () -> new BlockEntityType<>(SimulacrumBlockEntity::new,
		BlockRegistry.DEEPMAN_SIMULACRUM_1.get(), BlockRegistry.DEEPMAN_SIMULACRUM_2.get(), BlockRegistry.DEEPMAN_SIMULACRUM_3.get(),
		BlockRegistry.LAKE_CAVERN_SIMULACRUM_1.get(), BlockRegistry.LAKE_CAVERN_SIMULACRUM_2.get(), BlockRegistry.LAKE_CAVERN_SIMULACRUM_3.get(),
		BlockRegistry.ROOTMAN_SIMULACRUM_1.get(), BlockRegistry.ROOTMAN_SIMULACRUM_2.get(), BlockRegistry.ROOTMAN_SIMULACRUM_3.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<OfferingTableBlockEntity>> OFFERING_TABLE = BLOCK_ENTITIES.register("offering_table", () -> new BlockEntityType<>(OfferingTableBlockEntity::new, BlockRegistry.OFFERING_TABLE.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<WindChimeBlockEntity>> WIND_CHIME = BLOCK_ENTITIES.register("wind_chime", () -> new BlockEntityType<>(WindChimeBlockEntity::new, BlockRegistry.WIND_CHIME.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<FishingTackleBoxBlockEntity>> FISHING_TACKLE_BOX = BLOCK_ENTITIES.register("fishing_tackle_box", () -> new BlockEntityType<>(FishingTackleBoxBlockEntity::new, BlockRegistry.FISHING_TACKLE_BOX.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<SmokingRackBlockEntity>> SMOKING_RACK = BLOCK_ENTITIES.register("smoking_rack", () -> new BlockEntityType<>(SmokingRackBlockEntity::new, BlockRegistry.SMOKING_RACK.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<FishTrimmingTableBlockEntity>> FISH_TRIMMING_TABLE = BLOCK_ENTITIES.register("fish_trimming_table", () -> new BlockEntityType<>(FishTrimmingTableBlockEntity::new, BlockRegistry.FISH_TRIMMING_TABLE.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<CrabPotBlockEntity>> CRAB_POT = BLOCK_ENTITIES.register("crab_pot", () -> new BlockEntityType<>(CrabPotBlockEntity::new, BlockRegistry.CRAB_POT.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<CrabPotFilterBlockEntity>> CRAB_POT_FILTER = BLOCK_ENTITIES.register("crab_pot_filter", () -> new BlockEntityType<>(CrabPotFilterBlockEntity::new, BlockRegistry.CRAB_POT_FILTER.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<SiltGlassJarBlockEntity>> SILT_GLASS_JAR = BLOCK_ENTITIES.register("silt_glass_jar", () -> new BlockEntityType<>(SiltGlassJarBlockEntity::new, BlockRegistry.SILT_GLASS_JAR.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<SteepingPotBlockEntity>> STEEPING_POT = BLOCK_ENTITIES.register("steeping_pot", () -> new BlockEntityType<>(SteepingPotBlockEntity::new, BlockRegistry.STEEPING_POT.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<GrubHubBlockEntity>> GRUB_HUB = BLOCK_ENTITIES.register("grub_hub", () -> new BlockEntityType<>(GrubHubBlockEntity::new, BlockRegistry.GRUB_HUB.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<WaterFilterBlockEntity>> WATER_FILTER = BLOCK_ENTITIES.register("water_filter", () -> new BlockEntityType<>(WaterFilterBlockEntity::new, BlockRegistry.WATER_FILTER.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<FilteredSiltGlassJarBlockEntity>> FILTERED_SILT_GLASS_JAR = BLOCK_ENTITIES.register("filtered_silt_glass_jar", () -> new BlockEntityType<>(FilteredSiltGlassJarBlockEntity::new, BlockRegistry.FILTERED_SILT_GLASS_JAR.get()));
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<MothHouseBlockEntity>> MOTH_HOUSE = BLOCK_ENTITIES.register("moth_house", () -> new BlockEntityType<>(MothHouseBlockEntity::new, BlockRegistry.MOTH_HOUSE.get()));
}
